components:
  examples:
    exampleQubecartAdminCommissionAssignstorePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: d23aa28f-ce3c-4ae8-b36a-b8314679f0f2
    exampleQubecartAdminCommissionCreatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 3ba6ee44-c2da-405c-9ae6-db7ef9ffc81e
    exampleQubecartAdminCommissionGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - commission_description: Default commission for all partner
          commission_master_id: 1
          commission_name: Default commission
          commission_percentage: 2
          created_on: '2020-09-14T08:31:37'
          partner_income: 999999
          updated_on: '2020-09-14T08:31:37'
        - commission_description: TEst commission
          commission_master_id: 2
          commission_name: test
          commission_percentage: 10
          created_on: '2020-09-14T14:02:33'
          partner_income: 99
          updated_on: '2020-09-14T14:02:33'
        exception: false
      x-response-id: b7a8e845-c05b-40c0-8202-011e591723a4
    exampleQubecartAdminCustomerCreatePost200:
      value:
        Errors: null
        code: '001'
        data:
          customer_address_id: 110
          customer_id: 43
        exception: false
      x-response-id: 99281b96-a75e-4d67-8f53-0c5460b956cd
    exampleQubecartAdminCustomerDetailsPost200:
      value:
        Errors: null
        code: '001'
        data:
          credit_order_details:
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-09T17:26:16'
            order_delivery_date: null
            order_detail_id: 58
            order_id: 58
            order_ref_no: QCO847477
            order_status: 2
            order_status_name: In Progress
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 5
            payment_type_name: Credit
            price: 265
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-11T12:53:16'
            order_delivery_date: null
            order_detail_id: 62
            order_id: 62
            order_ref_no: QCO121310
            order_status: 2
            order_status_name: In Progress
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 5
            payment_type_name: Credit
            price: 557.85
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-11T12:53:40'
            order_delivery_date: null
            order_detail_id: 63
            order_id: 63
            order_ref_no: QCO684918
            order_status: 2
            order_status_name: In Progress
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 5
            payment_type_name: Credit
            price: 249
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-08T22:01:03'
            order_delivery_date: null
            order_detail_id: 44
            order_id: 44
            order_ref_no: QCO559168
            order_status: 2
            order_status_name: In Progress
            payment_status: 1
            payment_status_name: Settled
            payment_type: 5
            payment_type_name: Credit
            price: 344.5
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-09T11:34:34'
            order_delivery_date: null
            order_detail_id: 51
            order_id: 51
            order_ref_no: QCO746420
            order_status: 2
            order_status_name: In Progress
            payment_status: 1
            payment_status_name: Settled
            payment_type: 5
            payment_type_name: Credit
            price: 344.5
          credit_store_details:
          - address_id: 22
            address_type: null
            addressline1: 112/4
            addressline2: beleghata main road
            city: 1
            city_name: Kolkata
            countries_name: India
            country: 1
            credit_association_id: 2
            credit_status: 5
            credit_status_name: Delete Request
            current_expendeture: 726.85
            customer_id: 22
            max_monthly_credit: 1000
            partner_id: 24
            pin: 700010
            remaining_expendeture: 273.15
            state: 1
            states_name: West Bengal
            store_category: 1
            store_category_name: Grocery
            store_id: 3
            store_name: Perfect store
            updated_at: '2020-09-11T12:53:39'
          customer_details:
            customer_id: 22
            customer_name: HARANATH BASAK
            customer_status: 1
            customer_status_name: Active
            email_id: basak.haranath@gmail.com
            phone_no: '9932047263'
          order_details:
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-08-29T08:36:45'
            order_delivery_date: null
            order_detail_id: 35
            order_id: 35
            order_ref_no: OD830942
            order_status: 1
            order_status_name: ' Order Placed'
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            price: 1324.14
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-02T04:33:39'
            order_delivery_date: null
            order_detail_id: 38
            order_id: 38
            order_ref_no: QCO281611
            order_status: 1
            order_status_name: ' Order Placed'
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            price: 355.5
          - billing_address_id: 29
            customer_id: 22
            order_created_at: '2020-09-11T21:01:44'
            order_delivery_date: null
            order_detail_id: 65
            order_id: 65
            order_ref_no: QCO235664
            order_status: 2
            order_status_name: In Progress
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            price: 876.6
          - billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-09T17:09:47'
            order_delivery_date: null
            order_detail_id: 57
            order_id: 57
            order_ref_no: QCO209545
            order_status: 1
            order_status_name: ' Order Placed'
            payment_status: 1
            payment_status_name: Settled
            payment_type: 2
            payment_type_name: Qubecart Wallet
            price: 175
        exception: false
      x-response-id: e155d4c0-0c4e-4065-9bb9-0aea6c2d07e3
    exampleQubecartAdminCustomerGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - credit_status: 0
          credit_status_name: Not A Credit Customer
          customer_id: 22
          customer_name: HARANATH BASAK
          customer_status: 1
          customer_status_name: Active
          email_id: basak.haranath@gmail.com
          phone_no: '9932047263'
        - credit_status: 0
          credit_status_name: Not A Credit Customer
          customer_id: 25
          customer_name: Nabanita Sarkar
          customer_status: 1
          customer_status_name: Active
          email_id: nabanita.sarkar@msqube.com
          phone_no: '9851075512'
        - credit_status: 0
          credit_status_name: Not A Credit Customer
          customer_id: 26
          customer_name: Nabanita Basak
          customer_status: 1
          customer_status_name: Active
          email_id: hb@gmail.com
          phone_no: '8116092023'
        - credit_status: 0
          credit_status_name: Not A Credit Customer
          customer_id: 24
          customer_name: Sourav Mondal
          customer_status: 1
          customer_status_name: Active
          email_id: ''
          phone_no: '8335968075'
        - credit_status: 0
          credit_status_name: Not A Credit Customer
          customer_id: 20
          customer_name: Srija kundu
          customer_status: 1
          customer_status_name: Active
          email_id: das.chandana.ori@gmail.com
          phone_no: '9563541102'
        - credit_status: 0
          credit_status_name: Not A Credit Customer
          customer_id: 23
          customer_name: Sudip B
          customer_status: 1
          customer_status_name: Active
          email_id: sudipta.das@msqube.com
          phone_no: '7001283856'
        - credit_status: 1
          credit_status_name: Approved Credit Customer
          customer_id: 18
          customer_name: 'SUDIPTA '
          customer_status: 1
          customer_status_name: Active
          email_id: ''
          phone_no: '8013320216'
        - credit_status: 0
          credit_status_name: Not A Credit Customer
          customer_id: 21
          customer_name: Sudipta Das
          customer_status: 1
          customer_status_name: Active
          email_id: das.sudipta94@gmail.com
          phone_no: '9232669133'
        exception: false
      x-response-id: 39a888ab-ed3f-414e-8ae7-12064eba4fa8
    exampleQubecartAdminCustomeraddressesPost200:
      value:
        Errors: null
        code: '001'
        data:
        - address_status: 1
          address_type: 2
          addressline1: '105'
          addressline2: Service Road, Kolkata
          city: 39
          contact_no: '9830623021'
          customer_address_id: 94
          customer_id: 31
          landmark: Theque Restaurant
          name: Pradipta Das
          pin: 700136
          state: 1
        - address_status: 1
          address_type: 1
          addressline1: '34'
          addressline2: National Highway 12, Kolkata
          city: 39
          contact_no: '9674260228'
          customer_address_id: 102
          customer_id: 31
          landmark: Hulas
          name: Milas Mo
          pin: 700136
          state: 1
        exception: false
      x-response-id: 72d8e841-c46a-48eb-8992-1f0b462fd2b9
    exampleQubecartAdminGetbyidPost200:
      value:
        Errors: null
        code: '001'
        data:
          addressline1: pinnacle tower
          addressline2: chinar park
          admn_user_id: 6
          city_id: 1
          city_name: Kolkata
          contact_phone: '8335968075'
          countries_name: India
          country_id: 1
          email_id: contact@msqube.com
          firstname: msqube
          lastname: Technologies
          pin: 700135
          state_id: 1
          states_name: West Bengal
          user_status: 1
          user_type: 1
          user_type_name: Super Admin
          username: sourav
        exception: false
      x-response-id: d4868633-165b-4a81-8bcc-47959acaaf5f
    exampleQubecartAdminIncidentsAssignpartnerPost200:
      value:
        Errors: null
        code: '001'
        data: []
        exception: false
      x-response-id: 70f5cd79-2065-4869-a3a1-ca58504871c9
    exampleQubecartAdminIncidentsGetallPost200:
      value:
        Errors: null
        code: '001'
        data:
        - accepted_location: null
          accepted_on: null
          assigned_on: '2020-12-07T12:56:42'
          assigned_to_id: 28
          bag_ids: '[154,153]'
          created_on: '2020-12-01T09:27:01'
          first_name: Pradipta
          incident_assignment_id: 1
          incident_assignment_status: 5
          incident_description: closed
          incident_detail_id: 1
          incident_id: 1
          incident_priority: 1
          incident_queue_id: 1
          incident_ref_no: IRN210179
          incident_status: 5
          incident_status_name: Resolved
          incident_type: 1
          last_name: Das
          order_id: 140
          order_ref_no: QCO874628
          problem_codes: '[1, 2]'
          problem_codes_names: 'Have not received order, Delay in order Delivery, '
          queue_type: 1
          raised_by: 31
          raised_by_role: Customer
          reported_timestamp: '2020-12-01T09:27:01Z'
          resolution_reason_code: null
          severity_name: Medium
          updated_on: '2020-12-01T09:27:01'
        exception: false
      x-response-id: 58c1b9e6-3930-4fb0-a746-281cd9e601eb
    exampleQubecartAdminIncidentsGetbyidPost200:
      value:
        Errors: null
        code: '001'
        data:
          accepted_location: null
          accepted_on: null
          action_comment: null
          action_type: 1
          assigned_on: '2020-12-07T12:56:42'
          assigned_to_id: 28
          bag_details:
          - bag_id: 154
            bag_ref_no: QCB577030
            bag_status: 1
            bag_status_name: Order Placed
            contact_email: das.sudipta94@gmail.com
            contact_person_firstname: sudipta
            contact_person_lastname: Das
            contact_phone: '8013320216'
            prebooking_flag: 1
            qc_partner_id: 28
            region_id: 2
            store_category: 3
            store_category_name: Food
            store_close_time: '16:02:30'
            store_days: '[6, 0, 1, 2, 3, 4, 5]'
            store_id: 64
            store_name: hula bila
            store_open_time: 05:02:30
            store_order_type_name: scheduled
            store_policy: null
            store_rating: 0
            store_status: 2
            store_status_name: Activated
            updated_on: null
          - bag_id: 153
            bag_ref_no: QCB168273
            bag_status: 1
            bag_status_name: Order Placed
            contact_email: snehasishjames007@gmail.com
            contact_person_firstname: Snehasish
            contact_person_lastname: Das
            contact_phone: '9830623021'
            prebooking_flag: 1
            qc_partner_id: 24
            region_id: 2
            store_category: 1
            store_category_name: Grocery
            store_close_time: '23:00:00'
            store_days: '[0,1,2,3,4,5,6]'
            store_id: 37
            store_name: New Das Store
            store_open_time: 08:00:00
            store_order_type_name: scheduled
            store_policy: null
            store_rating: 4
            store_status: 2
            store_status_name: Activated
            updated_on: null
          bag_ids: '[154,153]'
          billing_address_id: 48
          contact_person_email: hb@gmail.com
          contact_person_no: '9932047263'
          created_on: '2020-12-01T09:27:01'
          customer_detail_id: 27
          customer_id: 31
          email_id: das.pradipta.2011@gmail.com
          email_verify_status: 0
          first_name: Pradipta
          incident_assignment_id: 1
          incident_assignment_status: 5
          incident_description: closed
          incident_detail_id: 1
          incident_id: 1
          incident_priority: 1
          incident_queue_id: 1
          incident_ref_no: IRN210179
          incident_status: 4
          incident_status_name: Partner Reviewing
          incident_type: 1
          kyc_authenticated: null
          kyc_status: 0
          last_name: Das
          order_created_at: '2020-11-30T12:39:26'
          order_delivery_date: null
          order_detail_id: 140
          order_id: 140
          order_ref_no: QCO874628
          order_status: 1
          partner_details:
          - bag_id: 154
            bag_ref_no: QCB577030
            billing_name: S Das
            company_name: 'Das House '
            contact_email: das.sudipta94@gmail.com
            contact_person_designation: 'engineer '
            contact_person_firstname: sudipta
            contact_person_lastname: Das
            contact_phone: '8013320216'
            corporate_size: null
            gst_numbers: '123456789'
            pan: dpup0009
            partner_address_id: 85
            partner_bank_id: null
            partner_detail_id: 14
            password: 81dc9bdb52d04dc20036dbd8313ed055
            payment_term: null
            qc_partner_id: 28
            status: 1
            updated_by: null
            updated_on: '2020-09-19T05:33:54'
          - bag_id: 153
            bag_ref_no: QCB168273
            billing_name: Snehasish
            company_name: Msqube
            contact_email: snehasishjames007@gmail.com
            contact_person_designation: SDE
            contact_person_firstname: Snehasish
            contact_person_lastname: Das
            contact_phone: '9830623021'
            corporate_size: null
            gst_numbers: 1234qwer
            pan: asdf
            partner_address_id: 40
            partner_bank_id: 8
            partner_detail_id: 11
            password: 81dc9bdb52d04dc20036dbd8313ed055
            payment_term: null
            qc_partner_id: 24
            status: 1
            updated_by: null
            updated_on: '2020-08-20T05:22:58'
          password: ''
          payment_date: null
          payment_status: 0
          payment_type: 1
          phone_no: '9830623021'
          pre_order_flag: 0
          price: 178
          problem_codes:
          - code: 1
            name: Have not received order
          - code: 2
            name: Delay in order Delivery
          problem_image_url: '[''https://qubecart.s3.ap-south-1.amazonaws.com/qubecart_incedent_image/image1.jpg'',
            ''https://qubecart.s3.ap-south-1.amazonaws.com/qubecart_incedent_image/image2.jpg'']'
          queue_type: 1
          raised_by: 31
          raised_by_role: Customer
          reported_timestamp: '2020-12-01T09:27:01Z'
          resolution_reason_code: null
          scheduled_delivery_date: '2020-11-28T12:48:00'
          updated_by: 31
          updated_on: '2020-12-01T09:27:01'
        exception: false
      x-response-id: 8c84808e-b2db-4999-a683-5aefe888bc6c
    exampleQubecartAdminIncidentsGetnextstatusPost200:
      value:
        Errors: null
        code: '001'
        data:
        - domain_code: 2
          domain_data_type: string
          domain_id: 135
          domain_text: Pending
          domain_type: incident_status
          domain_value: Pending
        - domain_code: 5
          domain_data_type: string
          domain_id: 138
          domain_text: Resolved
          domain_type: incident_status
          domain_value: Resolved
        exception: false
      x-response-id: a57fc0c8-1866-441e-9c96-b1836ee516b7
    exampleQubecartAdminIncidentsUpdatestatusPost200:
      value:
        Errors: null
        code: '001'
        data: []
        exception: false
      x-response-id: 50e5aac2-339b-4f88-86d4-6e76e64003a9
    exampleQubecartAdminLoginPost200:
      value:
        Errors: null
        code: '001'
        data:
          address_id: 6
          addressline1: 112/4
          addressline2: Beleghata main road
          admn_user_id: 6
          city_name: Kolkata
          contact_phone: '8335968075'
          countries_name: India
          email_id: sourav.mondal@msqube.com
          firstname: sourav
          lastname: mondal
          pin: 700010
          states_name: West Bengal
          user_type_name: Super Admin
          username: sourav
        exception: false
      x-response-id: 0118abb0-0869-4ac0-8b0e-e4e3bfceecbd
    exampleQubecartAdminOrderAssignbagPost200:
      value:
        Errors: null
        code: '001'
        data:
          delivery_person:
            alternate_phone: '9123810564'
            contact_phone: '9123810564'
            delivery_person_name: Subhadeep Shome
          temp:
            bag_ref_no: QCB942211
            billing_address_id: 14
            customer_address: 04, Khudiram Basu Roa Kolkata-741102
            customer_id: 18
            customer_name: 'SUDIPTA '
            customer_phone_no: '8013320216'
            order_id: 41
            partner_name: Snehasish Das
            partner_phone_no: '8981497361'
            qc_partner_id: 24
            store_address: 112/4, beleghata main road Kolkata-700010
            store_id: 3
            store_name: Perfect store
            work_item_id: 3
        exception: false
      x-response-id: 684dc11b-a0f4-4336-9dc0-afdaa1872867
    exampleQubecartAdminOrderBagactionPost200:
      value:
        Errors: null
        code: '001'
        data:
          next_action:
          - action_name: Delivered
            next_action: 8
        exception: false
      x-response-id: 99912211-5082-4291-b795-ceb2f8a64835
    exampleQubecartAdminOrderBagdetailsPost200:
      value:
        Errors: null
        code: '001'
        data:
        - bag_id: 41
          bag_item_id: 43
          bag_item_status: 1
          brand_created_by_role: 1
          partner_product_id: 42
          product_brand_description: Sundrop Heart Jar
          product_brand_id: 236
          product_brand_name: Sundrop Heart
          product_id: 42
          product_title: Sundrop Heart Oil, 1Kg
          required_quantity: 1
          subcategory_name: Oil
          total_price: 135
        - bag_id: 41
          bag_item_id: 44
          bag_item_status: 1
          brand_created_by_role: 1
          partner_product_id: 44
          product_brand_description: Engine Mustard Oil
          product_brand_id: 261
          product_brand_name: Engine
          product_id: 44
          product_title: Engine Mustard Oil, 1Kg
          required_quantity: 1
          subcategory_name: Mustard Oil
          total_price: 224.1
        - bag_id: 41
          bag_item_id: 45
          bag_item_status: 1
          brand_created_by_role: 1
          partner_product_id: 45
          product_brand_description: India Gate
          product_brand_id: 370
          product_brand_name: India Gate
          product_id: 45
          product_title: India Gate Basmati Rice, 1Kg
          required_quantity: 1
          subcategory_name: Basmati Rice
          total_price: 179.74
        - bag_id: 41
          bag_item_id: 46
          bag_item_status: 1
          brand_created_by_role: 1
          partner_product_id: 46
          product_brand_description: aashirvad
          product_brand_id: 393
          product_brand_name: aashirvad
          product_id: 46
          product_title: aashirvad Wheat Atta, 5Kg
          required_quantity: 1
          subcategory_name: Wheat Atta
          total_price: 260.3
        - bag_id: 41
          bag_item_id: 47
          bag_item_status: 1
          brand_created_by_role: 1
          partner_product_id: 43
          product_brand_description: Annapurna Brown Ghee
          product_brand_id: 238
          product_brand_name: Annapurna
          product_id: 43
          product_title: Annapurna Ghee, 250g
          required_quantity: 1
          subcategory_name: Ghee
          total_price: 180.5
        exception: false
      x-response-id: f7dd52f4-c843-454e-b11d-d62a138e022d
    exampleQubecartAdminOrderCreatePost200:
      value:
        Errors: null
        code: '001'
        data: null
        exception: false
      x-response-id: 1bac436c-f0e7-4b34-9648-71764aefb159
    exampleQubecartAdminOrderDetailsExternalPost200:
      value:
        Errors: null
        code: '001'
        data:
          delivery_address:
            address_status: 1
            address_status_name: Active
            address_type: 2
            address_type_name: Office
            addressline1: '105'
            addressline2: Service Road, Kolkata
            city: 39
            city_name: North 24 Parganas
            contact_no: '9830623021'
            customer_address_id: 94
            customer_id: 31
            default_flag: null
            landmark: Theque Restaurant
            latitude: 22.6235224
            longitude: 88.4422677
            name: Pradipta Das
            optional_contact_no: null
            pin: 700136
            state: 1
            states_name: West Bengal
          order_details:
            customer_id: 31
            order_created_at: '2021-05-24T15:06:39Z'
            order_delivery_date: null
            order_id: 264
            order_ref_no: QCO693719
            order_status: 6
            order_status_name: Order Generated
            payment_link: https://test.instamojo.com/@snehasish_das/8cfe462a591d437ab31ded9607f8bc63
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 7
            payment_type_name: Payment Link
            pre_order_flag: 1
            price: 78326
            scheduled_delivery_date: '2021-05-25T18:30:00Z'
          price_details:
          - breakup_amount: 258
            breakup_item: 1
            breakup_item_name: Net Amount
            order_id: 264
            price_breakup_details_id: 980
          - breakup_amount: 2
            breakup_item: 2
            breakup_item_name: GST
            order_id: 264
            price_breakup_details_id: 981
          - breakup_amount: 20
            breakup_item: 4
            breakup_item_name: Discount
            order_id: 264
            price_breakup_details_id: 982
          - breakup_amount: 78086
            breakup_item: 5
            breakup_item_name: Delivery Fee + GST
            order_id: 264
            price_breakup_details_id: 983
          - breakup_amount: 78326
            breakup_item: 6
            breakup_item_name: Total
            order_id: 264
            price_breakup_details_id: 984
          store_details:
          - bag_id: 280
            bag_ref_no: QCB940920
            bag_status: 13
            bag_status_name: Order Generated
            bucket_name: qubecart
            comments: null
            contact_phone: '8013320216'
            created_on: '2020-09-19T05:39:00'
            credit_flag: 0
            item_details:
            - bag_id: 280
              bag_item_id: 283
              bag_item_status: 1
              bucket_name: qubecart
              itemImageFolder: Item_image
              product_description: chicken kabab
              product_id: 1276
              product_selling_price: 80
              product_thumbnail: null
              required_quantity: 1
              total_price: 80
              unit: pcs
            latitude: 0.066942
            longitude: 5.357128
            msqube_percentage: 0
            no_item_show: 0
            order_created_at: '2021-05-24T15:06:39Z'
            order_delivery_date: null
            order_id: 264
            order_ref_no: QCO693719
            overall_rating: null
            paid_to_partner: 0
            paid_to_qubecart: 0
            partner_percentage: 0
            qc_partner_id: 28
            region_id: 1
            sales_person_percentage: 0
            scheduled_delivery_date: '2021-05-25T18:30:00Z'
            special_request: null
            storeImageFolder: qubecart_partner
            store_address_id: 86
            store_category: 1
            store_id: 38
            store_image: null
            store_name: Das Store
            store_rating: 0
            store_status: 2
            updated_by: null
            updated_on: '2020-09-19T05:41:41'
          - bag_id: 279
            bag_ref_no: QCB752374
            bag_status: 13
            bag_status_name: Order Generated
            bucket_name: qubecart
            comments: null
            contact_phone: '8013320216'
            created_on: '2020-09-19T05:41:12'
            credit_flag: 1
            item_details:
            - bag_id: 279
              bag_item_id: 281
              bag_item_status: 1
              bucket_name: qubecart
              itemImageFolder: Item_image
              product_description: Man Chow Soup
              product_id: 1272
              product_selling_price: 80
              product_thumbnail: null
              required_quantity: 1
              total_price: 80
              unit: pcs
            - bag_id: 279
              bag_item_id: 282
              bag_item_status: 1
              bucket_name: qubecart
              itemImageFolder: Item_image
              product_description: Thai Soup
              product_id: 1273
              product_selling_price: 80
              product_thumbnail: null
              required_quantity: 1
              total_price: 80
              unit: pcs
            latitude: 23.3872
            longitude: 88.499
            msqube_percentage: 0
            no_item_show: 0
            order_created_at: '2021-05-24T15:06:39Z'
            order_delivery_date: null
            order_id: 264
            order_ref_no: QCO693719
            overall_rating: null
            paid_to_partner: 0
            paid_to_qubecart: 0
            partner_percentage: 0
            qc_partner_id: 28
            region_id: 2
            sales_person_percentage: 0
            scheduled_delivery_date: '2021-05-25T18:30:00Z'
            special_request: null
            storeImageFolder: qubecart_partner
            store_address_id: 89
            store_category: 3
            store_id: 41
            store_image: 5d3a1b87-816c-4676-8cab-997a8c8de664.jpg
            store_name: Sudipta Tea stall
            store_rating: 0
            store_status: 2
            updated_by: null
            updated_on: '2020-12-21T11:12:40'
          student_details: []
        exception: false
      x-response-id: aa4bc7fe-db47-4183-a167-7890484d3954
    exampleQubecartAdminOrderDetailsPost200:
      value:
        Errors: null
        code: '001'
        data:
          order:
            addressline1: House No. 09
            addressline2: Changrabandha
            bags:
            - bag_id: 41
              bag_price: 979.6399993896484
              bag_ref_no: BAG579394
              bag_status: 1
              bag_status_name: Order Placed
              order_id: 35
              partner: soumik roy,blabla
              qc_partner_id: 25
              store_address: Beleghata Head Post Office,Beleghata,Kolkata-700089
              store_address_id: 60
              store_id: 26
              store_name: Maa Annapurna Store
              updated_by: null
              updated_on: null
            - bag_id: 42
              bag_price: 304.5
              bag_ref_no: BAG416579
              bag_status: 2
              bag_status_name: Order Accepted
              order_id: 35
              partner: Snehasish Das,SDE
              qc_partner_id: 24
              store_address: Kestopur,Kolkata,Kolkata-700012
              store_address_id: 63
              store_id: 28
              store_name: SD Store
              updated_by: null
              updated_on: '2020-09-04T05:48:14'
            billing_address_id: 27
            billing_name: Haranath Basak
            billing_phone: '9932047263'
            city_name: Kolkata
            customer_id: 22
            customer_name: HARANATH BASAK
            email_id: basak.haranath@gmail.com
            order_created_at: '2020-08-29T08:36:45'
            order_delivery_date: null
            order_detail_id: 35
            order_id: 35
            order_ref_no: OD830942
            order_status: 1
            order_status_name: ' Order Placed'
            payment_type: 1
            payment_type_name: Cash On Delivery
            phone_no: '9932047263'
            pin: 735301
            price: 1324.14
            states_name: West Bengal
        exception: false
      x-response-id: 1635fbcf-f8af-4241-b3f0-45ecfa980d16
    exampleQubecartAdminOrderGetallPost200:
      value:
        Errors: null
        code: '001'
        data:
        - billing_address_id: 14
          customer_id: 18
          customer_name: 'SUDIPTA '
          order_created_at: '2020-08-28T09:26:23'
          order_delivery_date: null
          order_detail_id: 31
          order_id: 31
          order_ref_no: OD113603
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 660.54
        - billing_address_id: 14
          customer_id: 18
          customer_name: 'SUDIPTA '
          order_created_at: '2020-08-28T16:52:10'
          order_delivery_date: null
          order_detail_id: 32
          order_id: 32
          order_ref_no: OD314062
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 115
        - billing_address_id: 14
          customer_id: 18
          customer_name: 'SUDIPTA '
          order_created_at: '2020-08-28T17:26:16'
          order_delivery_date: null
          order_detail_id: 33
          order_id: 33
          order_ref_no: OD866516
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 249
        - billing_address_id: 14
          customer_id: 18
          customer_name: 'SUDIPTA '
          order_created_at: '2020-08-28T17:35:10'
          order_delivery_date: null
          order_detail_id: 34
          order_id: 34
          order_ref_no: OD611429
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 140
        - billing_address_id: 27
          customer_id: 22
          customer_name: HARANATH BASAK
          order_created_at: '2020-08-29T08:36:45'
          order_delivery_date: null
          order_detail_id: 35
          order_id: 35
          order_ref_no: OD830942
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 1324.14
        - billing_address_id: 27
          customer_id: 22
          customer_name: HARANATH BASAK
          order_created_at: '2020-09-02T04:33:39'
          order_delivery_date: null
          order_detail_id: 38
          order_id: 38
          order_ref_no: QCO281611
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 355.5
        - billing_address_id: 14
          customer_id: 18
          customer_name: 'SUDIPTA '
          order_created_at: '2020-09-04T04:18:27'
          order_delivery_date: null
          order_detail_id: 39
          order_id: 39
          order_ref_no: QCO138667
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 557.85
        - billing_address_id: 14
          customer_id: 18
          customer_name: 'SUDIPTA '
          order_created_at: '2020-09-04T05:54:32'
          order_delivery_date: null
          order_detail_id: 40
          order_id: 40
          order_ref_no: QCO251245
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 569.5
        - billing_address_id: 14
          customer_id: 18
          customer_name: 'SUDIPTA '
          order_created_at: '2020-09-07T18:19:02'
          order_delivery_date: null
          order_detail_id: 41
          order_id: 41
          order_ref_no: QCO572967
          order_status: 1
          order_status_name: ' Order Placed'
          payment_type: 1
          payment_type_name: Cash On Delivery
          price: 483.85
        exception: false
      x-response-id: 1f4808b0-920f-48c6-844b-934cb9a8e5de
    exampleQubecartAdminOrderPaytopartnerPost200:
      value:
        Errors: null
        code: '001'
        exception: null
      x-response-id: 8bfd376b-d56b-4bf3-ab18-6e39c78379c1
    exampleQubecartAdminOrderUpdatebagstatusPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 023e345f-f66b-4a44-859c-dfea2ac2b9cb
    exampleQubecartAdminOrderUpdatepaymentPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: db44bc39-8872-42b5-850a-7bdb2ce82e80
    exampleQubecartAdminOrderUpdatestatusPost200:
      value:
        Errors:
          Business_Errors:
          - Code: BE023
            Message: Payment is due for this order
          Info: []
          System_Errors: []
          Warnings: []
        code: null
        exception: true
      x-response-id: 00f79ffd-ceea-4585-bd82-66527524ab38
    exampleQubecartAdminPartnerAddbankdetailPost200:
      value:
        Errors: null
        code: '001'
        data: null
        exception: false
      x-response-id: 10a569e8-3bfb-4c2d-bf60-1add2c5aa021
    exampleQubecartAdminPartnerApprovePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 28308fe8-5a1a-46d0-92ab-ae43a0645171
    exampleQubecartAdminPartnerCreatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 9fd88849-7f55-4f4d-87a0-b072602112f2
    exampleQubecartAdminPartnerDetailsbyidPost200:
      value:
        Errors: null
        code: '001'
        data:
          approval_status: 2
          approval_status_name: Active
          company_name: TEST2 company
          contact_email: souravcristiano502@gmail.com
          contact_person: null
          contact_person_designation: Owner
          contact_phone: '9073448330'
          gst_numbers: ADF12456
          pan: DHA1234
          partner_address:
            address_id: 18
            address_type: null
            addressline1: 112/4
            addressline2: beleghata main road
            city: 1
            city_name: Kolkata
            countries_name: India
            country: 1
            pin: 700010
            state: 1
            states_name: West Bengal
          partner_address_id: 18
          partner_bank_id: 2147483647
          partner_category: 1
          partner_code: TEST2
          qc_partner_id: 10
          stores:
          - addressline1: 112/4
            addressline2: Beleghata main road
            city_name: Kolkata
            countries_name: India
            pin: 700010
            qc_partner_id: 10
            states_name: West Bengal
            store_address_id: 6
            store_category: 2
            store_id: 1
            store_image: store4.jpg
            store_location: null
            store_name: Adi Mohini Mohon Kanjilal
            store_type_name: Garments
          updated_on: '2020-08-03T09:10:11'
        exception: false
      x-response-id: 6a64bb0f-65a3-4cdb-a916-fb49fabe205f
    exampleQubecartAdminPartnerGetallPost200:
      value:
        Errors: null
        code: '001'
        data:
        - approval_status: 1
          approval_status_name: Added
          company_name: TEST2 company
          contact_email: souravcristiano502@gmail.com
          contact_person: sourav2
          contact_person_designation: Owner
          contact_phone: '9073448330'
          partner_code: TEST2
          partner_name: TEST2 partner
          partner_type: 1
          qc_partner_id: 10
          updated_on: '2020-08-03T09:10:11'
        - approval_status: 2
          approval_status_name: Active
          company_name: TEST company
          contact_email: souravcristiano502@gmail.com
          contact_person: sourav
          contact_person_designation: Owner
          contact_phone: '9073448330'
          partner_code: TEST
          partner_name: TEST partner
          partner_type: 1
          qc_partner_id: 9
          updated_on: null
        exception: false
      x-response-id: 286916f5-c39b-40b6-84fd-c85ea7a62cc4
    exampleQubecartAdminPersonnelApprovePost200:
      value:
        Errors: null
        code: '001'
        exception: true
      x-response-id: 5b349f7f-0017-4f69-97a3-0161653cfc01
    exampleQubecartAdminPersonnelGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - admn_user_id: 7
          contact_phone: '9999999999'
          email_id: jon.doe@doee.com
          firstname: Jon
          gender: M
          lastname: Doe
          user_status: 1
          user_status_name: Active
          user_type: 2
          user_type_name: Delivery Person
          username: JonDoe
        - admn_user_id: 8
          contact_phone: '9999999999'
          email_id: jon.wick@continental.com
          firstname: Jon
          gender: M
          lastname: Wick
          user_status: 2
          user_status_name: requested
          user_type: 2
          user_type_name: Delivery Person
          username: JonWick
        - admn_user_id: 9
          contact_phone: '9999999999'
          email_id: jon.wick@continental.com
          firstname: Jon
          gender: M
          lastname: Wick
          user_status: 2
          user_status_name: requested
          user_type: 2
          user_type_name: Delivery Person
          username: JonWick
        exceptiopn: false
      x-response-id: 1b205147-f3d0-4eda-82ce-69ca8b6834e9
    exampleQubecartAdminPersonnelGetbyregionPost200:
      value:
        Errors: null
        code: '001'
        data:
        - admn_user_id: 8
          alternate_phone_no: '8888888888'
          email_id: jon.wick@continental.com
          firstname: Jon
          lastname: Wick
          primary_phone_no: '9999999999'
          region_id: 1
          user_status: 1
        - admn_user_id: 9
          alternate_phone_no: '8888888888'
          email_id: jon.wick@continental.com
          firstname: Jon
          lastname: Wick
          primary_phone_no: '9999999999'
          region_id: 1
          user_status: 1
        exception: false
      x-response-id: f7f99b8b-30eb-4189-9947-9f29b7eb1541
    exampleQubecartAdminPersonnelGetdetailPost200:
      value:
        Errors: null
        code: '001'
        data:
          adhaar_voter_url: https://qubecart.s3.ap-south-1.amazonaws.com/fsq/aadhaar/aadhar.jpg
          admn_user_id: 8
          contact_phone: '9999999999'
          current_address_city: Kolkata
          current_address_id: 77
          current_address_pin: 700010
          current_address_statename: West Bengal
          current_addressline1: 112/4
          current_addressline2: Dummy road
          dob: '1995-06-13T00:00:00'
          email_id: jon.wick@continental.com
          firstname: Jon
          gender: M
          lastname: Wick
          pan_url: https://qubecart.s3.ap-south-1.amazonaws.com/fsq/pan/pan.jpg
          permanent_address_city: Kolkata
          permanent_address_id: 77
          permanent_address_pin: 700010
          permanent_address_statename: West Bengal
          permanent_addressline1: 112/4
          permanent_addressline2: Dummy road
          photo_url: https://qubecart.s3.ap-south-1.amazonaws.com/fsq/profileimage/selfie.jpg
          user_status: 1
          user_status_name: Active
          user_type: 2
          username: JonWick
          userr_type_name: Delivery Person
        exception: false
      x-response-id: 82f87b4f-838e-4c80-8b03-646556cb15b8
    exampleQubecartAdminProblemcodesCreatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 78debea1-61af-4103-80e2-183a393e3751
    exampleQubecartAdminProblemcodesGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - display_description: Improper quantity of items received
          incident_severity_name: High
          problem_code: '12'
          problem_codes_id: 18
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:35:07'
        - display_description: Damaged or spoil items received
          incident_severity_name: High
          problem_code: '11'
          problem_codes_id: 17
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:34:05'
        - display_description: Wrong item delivered
          incident_severity_name: High
          problem_code: '9'
          problem_codes_id: 15
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:32:55'
        - display_description: Items missing from my order
          incident_severity_name: High
          problem_code: '8'
          problem_codes_id: 14
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:32:34'
        - display_description: Different Bill Received
          incident_severity_name: High
          problem_code: '5'
          problem_codes_id: 10
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:43:45'
        - display_description: Money deducted but order not confirmed
          incident_severity_name: High
          problem_code: '3'
          problem_codes_id: 8
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T11:53:34'
        - display_description: Delay in order Delivery
          incident_severity_name: High
          problem_code: '2'
          problem_codes_id: 7
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T11:52:55'
        - display_description: Have not received order
          incident_severity_name: High
          problem_code: '1'
          problem_codes_id: 6
          severity: 1
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T11:52:27'
        - display_description: Poor quality of products delivered
          incident_severity_name: Medium
          problem_code: '13'
          problem_codes_id: 21
          severity: 2
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:37:27'
        - display_description: Items are tampered
          incident_severity_name: Medium
          problem_code: '14'
          problem_codes_id: 20
          severity: 2
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:36:22'
        - display_description: Did not receive order invoice
          incident_severity_name: Medium
          problem_code: '7'
          problem_codes_id: 13
          severity: 2
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:31:27'
        - display_description: Item amount does not match with total amount
          incident_severity_name: Medium
          problem_code: '6'
          problem_codes_id: 11
          severity: 2
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:44:41'
        - display_description: Did not receive refund
          incident_severity_name: Medium
          problem_code: '4'
          problem_codes_id: 9
          severity: 2
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T11:53:59'
        - display_description: Others
          incident_severity_name: Low
          problem_code: '17'
          problem_codes_id: 24
          severity: 3
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:38:52'
        - display_description: App is misbehaving
          incident_severity_name: Low
          problem_code: '16'
          problem_codes_id: 23
          severity: 3
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:38:38'
        - display_description: App not working properly
          incident_severity_name: Low
          problem_code: '15'
          problem_codes_id: 22
          severity: 3
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:37:57'
        - display_description: Improper Packaging
          incident_severity_name: Low
          problem_code: '10'
          problem_codes_id: 16
          severity: 3
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:33:27'
        exception: false
      x-response-id: cd29a10d-2fb4-4523-8630-ab8960a10570
    exampleQubecartAdminProblemcodesGetbyidPost200:
      value:
        Errors: null
        code: '001'
        data:
          display_description: Item amount does not match with total amount
          problem_code: '6'
          severity: 2
          status: 1
          store_category: null
          updated_by: 6
          updated_on: '2020-12-01T12:44:41'
        exception: false
      x-response-id: 7c1edd3b-89e3-4d33-9f53-1658d02f9631
    exampleQubecartAdminProblemcodesUpdateStatusbyidPost200:
      value:
        Errors: null
        code: '001'
        data: []
        exception: false
      x-response-id: 3bb30669-58bb-4a65-8573-e776cfccd116
    exampleQubecartAdminProblemcodesUpdatebyidPost200:
      value:
        Error: null
        code: '001'
        data: null
        exception: false
      x-response-id: 1d3b46d4-5770-4bf6-b3a9-1bffaf59f417
    exampleQubecartAdminRegionCreatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: bfed71ee-ae3d-4103-bcd3-ad8447222116
    exampleQubecartAdminRegionGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - city_id: 1
          country_id: 1
          created_by_id: 6
          created_on: '2020-09-07T08:09:10'
          region_code: QCR001
          region_id: 1
          region_name: BELEGHATA
          region_phone_no: '9999999999'
          state_id: 1
        exception: false
      x-response-id: 862822fa-ecc1-4c8f-b95a-f4bc8bad7dec
    exampleQubecartAdminSendsmsOrderPost200:
      value:
        Errors: null
        code: '001'
        data: null
        exception: false
      x-response-id: 1309f1a9-fe20-47b4-b360-650a500e49b1
    exampleQubecartAdminStoreAddregionPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 9d91e30a-ddca-4314-b693-64fb159cefa1
    exampleQubecartAdminStoreChangestatusPost200:
      value:
        Errors: null
        code: '001'
        data:
          Errors: null
          code: '001'
          data: null
          exception: false
        exception: false
      x-response-id: c7cb371b-cbc1-4de5-8e62-64800154eda0
    exampleQubecartAdminStoreCommissionhistoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - commission_description: Default commission for all partner
          commission_master_id: 1
          commission_name: Default commission
          commission_percentage: 2
          end_date: null
          partner_income: 999999
          start_date: '2020-09-14T12:27:46'
          status: 1
          store_commission_id: 2
          store_commission_status_name: Active
          store_id: 16
          value: null
        exception: false
      x-response-id: d1750b23-c23f-4c7d-9e70-b4daa53f2867
    exampleQubecartAdminStoreGetdetailsPost200:
      value:
        Errors: null
        code: '001'
        data:
          addressline1: 112/4
          addressline2: beleghata main road
          city_name: Kolkata
          countries_name: India
          created_on: '2020-09-12T07:58:36'
          credit_flag: 1
          latitude: 26.4124
          longitude: 88.9246
          pin: 700010
          qc_partner_id: 24
          region_id: 2
          states_name: West Bengal
          store_address_id: 22
          store_category: 1
          store_id: 3
          store_image: MAS.jpg
          store_name: Perfect store
          store_rating: 0
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: '2020-09-19T09:15:11'
        exception: false
      x-response-id: 43307ffe-678a-421e-901d-a48b3cd43b52
    exampleQubecartAdminStoreListPost200:
      value:
        Errors: null
        code: '001'
        data:
        - addressline1: 112/4
          addressline2: beleghata main road
          city_name: Kolkata
          countries_name: India
          created_on: null
          credit_flag: 1
          latitude: null
          longitude: null
          pin: 700010
          qc_partner_id: 24
          region_id: 2
          states_name: West Bengal
          store_address_id: 22
          store_category: 1
          store_id: 3
          store_image: MAS.jpg
          store_name: Perfect store
          store_rating: 0
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: null
        - addressline1: 111/1
          addressline2: highway to hell
          city_name: Kolkata
          countries_name: India
          created_on: null
          credit_flag: 0
          latitude: null
          longitude: null
          pin: 999999
          qc_partner_id: 25
          region_id: 2
          states_name: West Bengal
          store_address_id: 50
          store_category: 1
          store_id: 16
          store_image: MAS.jpg
          store_name: HighwaytoHell Store ps AC/DC
          store_rating: 0
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: null
        - addressline1: Beleghata Head Post Office
          addressline2: Beleghata
          city_name: Kolkata
          countries_name: India
          created_on: null
          credit_flag: 0
          latitude: null
          longitude: null
          pin: 700089
          qc_partner_id: 25
          region_id: 2
          states_name: West Bengal
          store_address_id: 60
          store_category: 1
          store_id: 26
          store_image: MAS.jpg
          store_name: Maa Annapurna Store
          store_rating: 0
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: null
        - addressline1: Kestopur
          addressline2: Kolkata
          city_name: Kolkata
          countries_name: India
          created_on: null
          credit_flag: 1
          latitude: null
          longitude: null
          pin: 700012
          qc_partner_id: 24
          region_id: 2
          states_name: West Bengal
          store_address_id: 63
          store_category: 1
          store_id: 28
          store_image: MAS.jpg
          store_name: SD Store
          store_rating: 0
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: null
        - addressline1: '20'
          addressline2: Beleghata main road
          city_name: Kolkata
          countries_name: India
          created_on: null
          credit_flag: 1
          latitude: 22.563293
          longitude: 88.39328
          pin: 700010
          qc_partner_id: 9
          region_id: 2
          states_name: West Bengal
          store_address_id: 71
          store_category: 1
          store_id: 30
          store_image: null
          store_name: Everyday Grocery
          store_rating: 0
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: null
        - addressline1: 'krishnanagar '
          addressline2: 'krishnanagar '
          city_name: Kolkata
          countries_name: India
          created_on: null
          credit_flag: 1
          latitude: null
          longitude: null
          pin: 741102
          qc_partner_id: 24
          region_id: 2
          states_name: West Bengal
          store_address_id: 75
          store_category: 1
          store_id: 34
          store_image: null
          store_name: 'Das Store '
          store_rating: null
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: null
        - addressline1: '110'
          addressline2: Baguiati main road
          city_name: Kolkata
          countries_name: India
          created_on: '2020-09-12T07:58:36'
          credit_flag: 1
          latitude: 22.610069
          longitude: 88.429198
          pin: 700115
          qc_partner_id: 24
          region_id: 2
          states_name: West Bengal
          store_address_id: 81
          store_category: 1
          store_id: 35
          store_image: null
          store_name: Groceries 101
          store_rating: 0
          store_status: 2
          store_status_name: Active
          store_type_name: Grocery
          updated_on: '2020-09-12T08:35:13'
        exception: false
      x-response-id: 8cfbc229-bb8e-4da0-b44b-5488e156a2f5
    exampleQubecartAdminStoreOrderlistPost200:
      value:
        Errors: null
        code: '001'
        data:
          commission:
            commission_name: Default commission
            commission_percentage: 2
            msqube_income: 36.7
            partner_income: 1798.44
            total_bag_price: 1835.14
          orderlist:
          - bag_id: 37
            bag_price: 620.54
            bag_ref_no: BAG540108
            bag_status: 4
            bag_status_name: Packaging In Progress
            billing_address_id: 14
            customer_id: 18
            order_created_at: '2020-08-28T09:26:23'
            order_id: 31
            paid_to_partner: 1
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            updated_on: '2020-08-29T10:13:44'
          - bag_id: 41
            bag_price: 979.64
            bag_ref_no: BAG579394
            bag_status: 1
            bag_status_name: Order Placed
            billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-08-29T08:36:45'
            order_id: 35
            paid_to_partner: 0
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            updated_on: null
          - bag_id: 45
            bag_price: 315.5
            bag_ref_no: QCB726936
            bag_status: 9
            bag_status_name: Rejected
            billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-02T04:33:39'
            order_id: 38
            paid_to_partner: 0
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            updated_on: '2020-09-12T02:25:11'
          - bag_id: 49
            bag_price: 135
            bag_ref_no: QCB471876
            bag_status: 6
            bag_status_name: Picked Up
            billing_address_id: 14
            customer_id: 18
            order_created_at: '2020-09-07T18:19:02'
            order_id: 41
            paid_to_partner: 0
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            updated_on: '2020-09-08T10:58:35'
          - bag_id: 65
            bag_price: 135
            bag_ref_no: QCB679545
            bag_status: 1
            bag_status_name: Order Placed
            billing_address_id: 27
            customer_id: 22
            order_created_at: '2020-09-09T17:09:47'
            order_id: 57
            paid_to_partner: 0
            payment_status: 1
            payment_status_name: Settled
            payment_type: 2
            payment_type_name: Qubecart Wallet
            updated_on: null
          - bag_id: 73
            bag_price: 135
            bag_ref_no: QCB711836
            bag_status: 5
            bag_status_name: Ready To Dispatch
            billing_address_id: 29
            customer_id: 25
            order_created_at: '2020-09-11T20:53:49'
            order_id: 64
            paid_to_partner: 0
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            updated_on: '2020-09-12T02:25:36'
          - bag_id: 76
            bag_price: 135
            bag_ref_no: QCB867624
            bag_status: 1
            bag_status_name: Order Placed
            billing_address_id: 29
            customer_id: 22
            order_created_at: '2020-09-11T21:01:44'
            order_id: 65
            paid_to_partner: 0
            payment_status: 0
            payment_status_name: Not Settled
            payment_type: 1
            payment_type_name: Cash On Delivery
            updated_on: null
        exception: false
      x-response-id: b8ff953d-12ca-4df0-bfcc-576f4456f1fd
    exampleQubecartAdminStoreUpdatestatusPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 0f7da9c8-0fb7-49fe-a7e1-09f8731f31ef
    exampleQubecartAdminTemplateAddbrandsPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 5f17e6d1-d1f9-485e-a9ab-40a14d2a7b5b
    exampleQubecartAdminTemplateCheckduplicatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 91191ceb-736a-4e82-abc0-eec7e56fa56c
    exampleQubecartAdminTemplateCreatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 740e6234-bced-40c5-85cc-e326d459eec5
    exampleQubecartAdminTemplateCreatecategoryPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 0255a22e-c338-4c8d-b6b9-4010f35bf068
    exampleQubecartAdminTemplateCreatesubcategoryPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 82edb9a6-f7b2-47f1-b63f-68824b9fe3ef
    exampleQubecartAdminTemplateDeleteitemPost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: deafa761-0383-41d4-b053-fa97ca28f93f
    exampleQubecartAdminTemplateGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - category: 1
          category_name: Grocery
          status: 1
          status_name: Active
          template_description: null
          template_id: 25
          template_name: Temp_g_001
          template_ref_no: '1597400846'
          updated_by: 6
          updated_on: '2020-08-14T10:27:26'
          username: msqube Technologies Corp
        exception: false
      x-response-id: 9108894a-d689-49ff-945a-a0177e56be4d
    exampleQubecartAdminTemplateGetbrandsPost200:
      value:
        Errors: null
        code: '001'
        data:
        - brand_description: Organic Tattva Maida
          brand_id: 126
          brand_name: Organic Tattva
          created_by_role: 1
          status: 1
          subcategory_id: 28
          updated_by: 6
          updated_on: '2020-08-27T07:21:16'
        - brand_description: Smart Choice Sattu
          brand_id: 127
          brand_name: Smart Choice
          created_by_role: 1
          status: 1
          subcategory_id: 28
          updated_by: 6
          updated_on: '2020-08-27T07:21:16'
        - brand_description: Weikfield Corn Flour
          brand_id: 128
          brand_name: Weikfield
          created_by_role: 1
          status: 1
          subcategory_id: 28
          updated_by: 6
          updated_on: '2020-08-27T07:21:16'
        - brand_description: Brown & Polson Corn Flour
          brand_id: 129
          brand_name: Brown & Polson
          created_by_role: 1
          status: 1
          subcategory_id: 28
          updated_by: 6
          updated_on: '2020-08-27T07:21:16'
        - brand_description: null
          brand_id: 14
          brand_name: Generic/Loose
          created_by_role: 2
          status: 1
          subcategory_id: 28
          updated_by: 24
          updated_on: '2020-08-27T18:46:17'
        exception: false
      x-response-id: b11bdc50-1c92-4bf8-90a9-edafc09a7181
    exampleQubecartAdminTemplateGetbycategoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - category: 1
          category_name: Grocery
          item_description: null
          item_name: Rice
          template_id: 1
          template_ref_no: Grocery_001
          updated_by: 6
          updated_on: '2020-08-12T12:22:57'
        - category: 1
          category_name: Grocery
          item_description: null
          item_name: Musturd Oil
          template_id: 2
          template_ref_no: Grocery_001
          updated_by: 6
          updated_on: '2020-08-12T12:22:57'
        exception: false
      x-response-id: d14635ad-3bc7-4092-9171-5b3f42e2b6e0
    exampleQubecartAdminTemplateGetbystorecategoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Dry Fruits</p>
          template_id: 39
          template_name: Dry Fruits
          template_ref_no: '1598506772'
          updated_by: 6
          updated_on: '2020-09-19T13:16:49'
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Organic Staple</p>
          template_id: 40
          template_name: Organic Staple
          template_ref_no: '1598506812'
          updated_by: 6
          updated_on: '2020-08-27T05:40:13'
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Edible Oils</p>
          template_id: 41
          template_name: Edible Oils
          template_ref_no: '1598506829'
          updated_by: 6
          updated_on: '2020-08-27T05:40:29'
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Salt &amp; Sugar</p>
          template_id: 43
          template_name: Salt & Sugar
          template_ref_no: '1598506933'
          updated_by: 6
          updated_on: '2020-08-27T05:42:14'
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Rice &amp; Cereals</p>
          template_id: 47
          template_name: Rice & Cereals
          template_ref_no: '1598558010'
          updated_by: 6
          updated_on: '2020-08-27T19:53:31'
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Flour &amp; Atta</p>
          template_id: 48
          template_name: Flour & Atta
          template_ref_no: '1598559056'
          updated_by: 6
          updated_on: '2020-08-27T20:10:57'
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Dals &amp; Beans</p>
          template_id: 49
          template_name: Dals & Beans
          template_ref_no: '1598561456'
          updated_by: 6
          updated_on: '2020-08-27T20:50:56'
        - category: 1
          category_name: Grocery
          status: 1
          template_description: <p>Masala &amp; Spices</p>
          template_id: 51
          template_name: Masala & Spices
          template_ref_no: '1598592405'
          updated_by: 6
          updated_on: '2020-08-28T05:26:45'
        exception: false
      x-response-id: eb22a12b-d34a-444a-b7cd-62aacac21270
    exampleQubecartAdminTemplateGetcategoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - product_category_name: Rice
          template_id: 29
          template_item_id: 10
        - product_category_name: Wheat
          template_id: 29
          template_item_id: 11
        - product_category_name: Edible Oils & Ghee
          template_id: 29
          template_item_id: 12
        exception: false
      x-response-id: e7e054a0-59f2-4c47-826f-4069f5ebfe9d
    exampleQubecartAdminTemplateGetsubcategoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - product_category_id: 10
          product_subcategory_id: 1
          subcategory_name: Basmati Rice
        exception: false
      x-response-id: 0bcff480-74f2-42fa-9081-f3dfea6b82d4
    exampleQubecartAdminTemplateInactivePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 12582187-d791-4e69-82b4-fcc0091135eb
    exampleQubecartAdminUpdatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: 0cb42661-61e4-4f29-901b-5e23b31a876d
    exampleQubecartSharedAdminparameterCheckparameterkeyPost200:
      value:
        Error:
          Business_Error:
          - Code: BE028
            Message: Parameter key already exists
          Info: []
          System_Error: []
          Warning: []
        code: null
        data: []
        exception: true
      x-response-id: f7c332e5-244e-4ef5-8c87-5dfc78ada11b
    exampleQubecartSharedAdminparameterCreatePost200:
      value:
        Error: null
        code: '001'
        data: []
        exception: false
      x-response-id: 22c50c35-2a52-4971-9c59-2fdb47eafa93
    exampleQubecartSharedAdminparameterGetalldataGet200:
      value:
        Error: null
        code: '001'
        data:
        - admn_parameters_id: 1
          parameter_desc: null
          parameter_key: bucket_name
          parameter_value: qubecart
        - admn_parameters_id: 2
          parameter_desc: null
          parameter_key: category_folder_name
          parameter_value: storecategory
        - admn_parameters_id: 3
          parameter_desc: null
          parameter_key: store_folder
          parameter_value: qubecart_partner
        - admn_parameters_id: 4
          parameter_desc: null
          parameter_key: Offer Folder
          parameter_value: qubecart_offer
        - admn_parameters_id: 5
          parameter_desc: null
          parameter_key: Advertisement Folder
          parameter_value: qubecart_advertisement
        - admn_parameters_id: 6
          parameter_desc: null
          parameter_key: Item_image_folder
          parameter_value: Item_image
        - admn_parameters_id: 7
          parameter_desc: km
          parameter_key: store_customer_distance
          parameter_value: '25'
        - admn_parameters_id: 8
          parameter_desc: days
          parameter_key: partner_fcm_validity
          parameter_value: '2'
        - admn_parameters_id: 9
          parameter_desc: Rs
          parameter_key: delivery_charge
          parameter_value: '40.0'
        - admn_parameters_id: 28
          parameter_desc: null
          parameter_key: msqube_contact_number
          parameter_value: 7585851723,9830623021,8001342092
        - admn_parameters_id: 29
          parameter_desc: Rs
          parameter_key: base_delivery_rate
          parameter_value: '20'
        - admn_parameters_id: 30
          parameter_desc: km
          parameter_key: base_delivery_kms
          parameter_value: '3'
        - admn_parameters_id: 31
          parameter_desc: Rs
          parameter_key: additional_delivery_rate
          parameter_value: '6'
        exception: false
      x-response-id: 118efd87-e2a1-4a1d-a891-48cfafeac455
    exampleQubecartSharedAdminparameterGetbyidPost200:
      value:
        Error: null
        code: '001'
        data:
          parameter_desc: null
          parameter_key: bucket_name
          parameter_value: qubecart
        exception: false
      x-response-id: 5f4d87ec-6ee9-4ff3-9e51-487cfaa83365
    exampleQubecartSharedAdminparameterUpdatePost200:
      value:
        Error: null
        code: '001'
        data: []
        exception: false
      x-response-id: 62badf76-48a3-4a0e-b3ab-64fe79c5e5fc
    exampleQubecartSharedAppversionCreatePost200:
      value:
        Error: null
        code: '001'
        data: null
        exception: false
      x-response-id: 5e3e8fd3-e750-41aa-b029-ac6bfea775b7
    exampleQubecartSharedAppversionReturnversioncodePost200:
      value:
        Error: null
        code: '001'
        data:
          version_code: 0.1.18
        exception: false
      x-response-id: fb8ce197-6cf2-4b43-a0e9-35ddf9d2d2b2
    exampleQubecartSharedConversationsCreatePost200:
      value:
        Error: null
        code: '001'
        data:
        - conversations_id: 1954
          created_at: '2020-12-04T19:48:18Z'
          incident_id: 1
          message: Duplicate Product Delivered
          order_id: 140
          sender_id: 31
          sender_role: Customer
          sender_role_id: 3
        - conversations_id: 1955
          created_at: '2020-12-04T19:48:18Z'
          incident_id: 1
          message: Sorry for inconvenience, we look after your incident shortly
          order_id: 140
          sender_id: 1
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1958
          created_at: '2020-12-04T19:54:53Z'
          incident_id: 1
          message: Sorry for that but not delivered duplicate product
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1960
          created_at: '2020-12-04T20:03:58Z'
          incident_id: 1
          message: We dont send you duplicate product
          order_id: 140
          sender_id: 24
          sender_role: Partner
          sender_role_id: 2
          store_name: New Das Store
        - conversations_id: 1961
          created_at: '2020-12-04T20:07:50Z'
          incident_id: 1
          message: Tora duplicate product dis ni to ki toder baap deachhe ...bokachodar
            dol
          order_id: 140
          sender_id: 31
          sender_role: Customer
          sender_role_id: 3
        - conversations_id: 1962
          created_at: '2020-12-04T20:08:56Z'
          incident_id: 1
          message: Kichhu mone korben na customer dada,......ei maal gulo khub dhaamna
          order_id: 140
          sender_id: 1
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1963
          created_at: '2020-12-04T20:10:26Z'
          incident_id: 1
          message: Duplicate product to gaar e guje rakh, k kinte bole6e toke babachoda
          order_id: 140
          sender_id: 24
          sender_role: Partner
          sender_role_id: 2
          store_name: New Das Store
        - conversations_id: 1964
          created_at: '2020-12-04T20:12:29Z'
          incident_id: 1
          message: admin ta sala boro baal, tora bara vulval product guje dis deliveryr
            somoy
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1965
          created_at: '2020-12-05T05:48:06Z'
          incident_id: 1
          message: Lorem Ipsum is simply dummy text of the printing and typesetting
            industry. Lorem Ipsum has been the industry's standard dummy text ever
            since the 1500s, when an unknown printer took a galley of type and scrambled
            it to make a type specimen book. It has survived not only five centuries,
            but also the leap into electronic typesetting, remaining essentially unchanged.
            It was popularised in the 1960s with the release of Letraset sheets containing
            Lorem Ipsum passages, and more recently with desktop publishing software
            like Aldus PageMaker including versions of Lorem Ipsum.
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1966
          created_at: '2020-12-07T08:19:16Z'
          incident_id: 1
          message: Sorry for the inconvinience, we are getting back to you shortly
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1967
          created_at: '2020-12-07T11:21:54Z'
          incident_id: 1
          message: dfdsfgds
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1968
          created_at: '2020-12-07T11:22:39Z'
          incident_id: 1
          message: gjj
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1969
          created_at: '2020-12-07T11:22:47Z'
          incident_id: 1
          message: gfdfgfddg
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1970
          created_at: '2020-12-08T05:44:02Z'
          incident_id: 1
          message: Sorry for the inconvinience, we are getting back to you shortly
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1971
          created_at: '2020-12-16T19:37:18Z'
          incident_id: 1
          message: Wersd
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1972
          created_at: '2020-12-16T21:31:37Z'
          incident_id: 1
          message: Ghjhfcgjkkk
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1973
          created_at: '2020-12-17T07:38:29Z'
          incident_id: 1
          message: admin ta
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        exception: false
      x-response-id: 1e6843b1-6d8a-467b-a1b7-215cf193539c
    exampleQubecartSharedConversationsDetailsPost200:
      value:
        Error: null
        code: '001'
        data:
        - conversations_id: 1954
          created_at: '2020-12-04T19:48:18Z'
          incident_id: 1
          message: Duplicate Product Delivered
          order_id: 140
          sender_id: 31
          sender_role: Customer
          sender_role_id: 3
        - conversations_id: 1955
          created_at: '2020-12-04T19:48:18Z'
          incident_id: 1
          message: Sorry for inconvenience, we look after your incident shortly
          order_id: 140
          sender_id: 1
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1958
          created_at: '2020-12-04T19:54:53Z'
          incident_id: 1
          message: Sorry for that but not delivered duplicate product
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1960
          created_at: '2020-12-04T20:03:58Z'
          incident_id: 1
          message: We dont send you duplicate product
          order_id: 140
          sender_id: 24
          sender_role: Partner
          sender_role_id: 2
          store_name: New Das Store
        - conversations_id: 1961
          created_at: '2020-12-04T20:07:50Z'
          incident_id: 1
          message: Tora duplicate product dis ni to ki toder baap deachhe ...bokachodar
            dol
          order_id: 140
          sender_id: 31
          sender_role: Customer
          sender_role_id: 3
        - conversations_id: 1962
          created_at: '2020-12-04T20:08:56Z'
          incident_id: 1
          message: Kichhu mone korben na customer dada,......ei maal gulo khub dhaamna
          order_id: 140
          sender_id: 1
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1963
          created_at: '2020-12-04T20:10:26Z'
          incident_id: 1
          message: Duplicate product to gaar e guje rakh, k kinte bole6e toke babachoda
          order_id: 140
          sender_id: 24
          sender_role: Partner
          sender_role_id: 2
          store_name: New Das Store
        - conversations_id: 1964
          created_at: '2020-12-04T20:12:29Z'
          incident_id: 1
          message: admin ta sala boro baal, tora bara vulval product guje dis deliveryr
            somoy
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1965
          created_at: '2020-12-05T05:48:06Z'
          incident_id: 1
          message: Lorem Ipsum is simply dummy text of the printing and typesetting
            industry. Lorem Ipsum has been the industry's standard dummy text ever
            since the 1500s, when an unknown printer took a galley of type and scrambled
            it to make a type specimen book. It has survived not only five centuries,
            but also the leap into electronic typesetting, remaining essentially unchanged.
            It was popularised in the 1960s with the release of Letraset sheets containing
            Lorem Ipsum passages, and more recently with desktop publishing software
            like Aldus PageMaker including versions of Lorem Ipsum.
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1966
          created_at: '2020-12-07T08:19:16Z'
          incident_id: 1
          message: Sorry for the inconvinience, we are getting back to you shortly
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1967
          created_at: '2020-12-07T11:21:54Z'
          incident_id: 1
          message: dfdsfgds
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1968
          created_at: '2020-12-07T11:22:39Z'
          incident_id: 1
          message: gjj
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1969
          created_at: '2020-12-07T11:22:47Z'
          incident_id: 1
          message: gfdfgfddg
          order_id: 140
          sender_id: 6
          sender_role: Admin
          sender_role_id: 1
        - conversations_id: 1970
          created_at: '2020-12-08T05:44:02Z'
          incident_id: 1
          message: Sorry for the inconvinience, we are getting back to you shortly
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1971
          created_at: '2020-12-16T19:37:18Z'
          incident_id: 1
          message: Wersd
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        - conversations_id: 1972
          created_at: '2020-12-16T21:31:37Z'
          incident_id: 1
          message: Ghjhfcgjkkk
          order_id: 140
          sender_id: 28
          sender_role: Partner
          sender_role_id: 2
          store_name: hula bila
        exception: false
      x-response-id: 9bf3fe49-f8d8-4054-9e5d-211b7aa657ca
    exampleQubecartSharedDomainPost200:
      value:
        Errors: null
        code: '001'
        data:
        - domain_code: 1
          domain_data_type: string
          domain_id: 2
          domain_text: Added
          domain_type: partner_status
          domain_value: Added
        - domain_code: 2
          domain_data_type: string
          domain_id: 3
          domain_text: Active
          domain_type: partner_status
          domain_value: Active
        - domain_code: 3
          domain_data_type: string
          domain_id: 4
          domain_text: Inactive
          domain_type: partner_status
          domain_value: Inactive
        - domain_code: 4
          domain_data_type: string
          domain_id: 5
          domain_text: Not Approved
          domain_type: partner_status
          domain_value: Not Approved
        exception: false
      x-response-id: d5fec98f-9a64-4778-9e54-08f9a5996224
    exampleQubecartSharedErrorframeworkGet200:
      value:
      - error_code: SE001
        error_id: 1
        error_message: Error Encountered. Please Try Again
        level_of_severity: 3
      - error_code: SE002
        error_id: 2
        error_message: Invalid Phone or Email
        level_of_severity: 3
      - error_code: BE001
        error_id: 3
        error_message: Invalid Username or Password
        level_of_severity: 3
      - error_code: BE002
        error_id: 4
        error_message: Sorry, Your request is not approved
        level_of_severity: 3
      - error_code: BE003
        error_id: 5
        error_message: User does not exists
        level_of_severity: 3
      - error_code: BE004
        error_id: 6
        error_message: Email or phone already exists
        level_of_severity: 3
      x-response-id: c57654f0-32e2-42b4-99ee-6a843a82b467
    exampleQubecartSharedGetCityGet200:
      value:
        Errors: null
        code: '001'
        data:
        - city_code: '033'
          city_id: 1
          city_name: Kolkata
        exception: false
      x-response-id: 485aaad0-917c-4bce-8446-3dd538cc6a5d
    exampleQubecartSharedGetCitystatecountryGet200:
      value:
        Errors: null
        code: '001'
        data:
          cities:
          - city_code: '033'
            city_id: 1
            city_name: Kolkata
          countries:
          - countries_code: IND
            countries_id: 1
            countries_name: India
          states:
          - states_code: WB
            states_id: 1
            states_name: West Bengal
        exception: false
      x-response-id: 438604c7-7cde-49f7-9149-34f99c0cab64
    exampleQubecartSharedGetCountriesGet200:
      value:
        Errors: null
        code: '001'
        data:
        - countries_code: IND
          countries_id: 1
          countries_name: India
        exception: false
      x-response-id: 4dbbbb4e-1b4a-4c49-8831-e1aac38c210b
    exampleQubecartSharedGetStatesGet200:
      value:
        Errors: null
        code: '001'
        data:
        - states_code: WB
          states_id: 1
          states_name: West Bengal
        exception: false
      x-response-id: 661c85a6-497e-4630-a0fb-aa68bf6b4bb0
    exampleQubecartSharedGetfcmPost200:
      value:
        Errors: null
        code: '001'
        data:
          create_date: '2020-08-29T08:34:12Z'
          expiry_date: null
          fcm_token: dNPNiW_oStevv225HhHVGi:APA91bEnN5ntUMjE0-q20iwVNiJvX-Ieg_XFgq_8EE0yidKBm003JGphMsyjsrUMqDgW6IKcKc20QEBFwJE4iCKrbB2R1cMeEe8_8a5ZChXx8TcvFec_9dju7xQeZRamqeiXipuAxrMJ
          fcm_user_id: 22
          fcm_user_type: 1
          make: null
          model: null
          notification_master_id: 18
        exception: false
      x-response-id: 0be0b411-d7ed-4e92-8632-fc3ed3f94d5b
    exampleQubecartSharedGetunitsPost200:
      value:
        Errors: null
        code: '001'
        data:
        - store_category: 1
          unit_id: 1
          unit_long: Kilogram
          unit_short: Kg
        - store_category: 1
          unit_id: 2
          unit_long: Gram
          unit_short: g
        exception: false
      x-response-id: 24da958d-fd32-4d8b-9eeb-2c7e00721a5a
    exampleQubecartSharedNotificationmasterCreatePost200:
      value:
        Errors: null
        code: '001'
        exception: false
      x-response-id: be996d95-f052-4796-84f9-d3e05c0b2a6b
    exampleQubecartSharedSendPushnotificationPost200:
      value:
        Errors: null
        code: '001'
        data:
          canonical_ids: 0
          failure: 0
          multicast_ids:
          - 3163111920342775957
          results:
          - message_id: 0:1600440312730418%a48f8eb2a48f8eb2
          success: 1
          topic_message_id: null
        exception: false
      x-response-id: c22b4905-ea85-4c54-be13-cff3bb6f76fa
  schemas:
    schemaQubecartAdminCommissionAssignstorePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminCommissionCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminCommissionGetallGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              commission_description:
                type: string
              commission_master_id:
                format: int32
                type: integer
              commission_name:
                type: string
              commission_percentage:
                format: int32
                type: integer
              created_on:
                type: string
              partner_income:
                format: int32
                type: integer
              updated_on:
                type: string
            required:
            - commission_master_id
            - commission_name
            - commission_description
            - created_on
            - updated_on
            - partner_income
            - commission_percentage
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminCustomerCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            customer_address_id:
              format: int32
              type: integer
            customer_id:
              format: int32
              type: integer
          required:
          - customer_id
          - customer_address_id
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminCustomerDetailsPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            credit_order_details:
              items:
                allOf:
                - properties:
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_detail_id:
                      format: int32
                      type: integer
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    order_status:
                      format: int32
                      type: integer
                    order_status_name:
                      type: string
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    price:
                      format: int32
                      type: integer
                  required:
                  - order_id
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - order_detail_id
                  - order_status
                  - billing_address_id
                  - customer_id
                  - price
                  - payment_type
                  - payment_status
                  - order_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_detail_id:
                      format: int32
                      type: integer
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    order_status:
                      format: int32
                      type: integer
                    order_status_name:
                      type: string
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    price:
                      type: number
                  required:
                  - order_id
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - order_detail_id
                  - order_status
                  - billing_address_id
                  - customer_id
                  - price
                  - payment_type
                  - payment_status
                  - order_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_detail_id:
                      format: int32
                      type: integer
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    order_status:
                      format: int32
                      type: integer
                    order_status_name:
                      type: string
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    price:
                      format: int32
                      type: integer
                  required:
                  - order_id
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - order_detail_id
                  - order_status
                  - billing_address_id
                  - customer_id
                  - price
                  - payment_type
                  - payment_status
                  - order_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_detail_id:
                      format: int32
                      type: integer
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    order_status:
                      format: int32
                      type: integer
                    order_status_name:
                      type: string
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    price:
                      type: number
                  required:
                  - order_id
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - order_detail_id
                  - order_status
                  - billing_address_id
                  - customer_id
                  - price
                  - payment_type
                  - payment_status
                  - order_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
              type: array
            credit_store_details:
              items:
                properties:
                  address_id:
                    format: int32
                    type: integer
                  address_type: {}
                  addressline1:
                    type: string
                  addressline2:
                    type: string
                  city:
                    format: int32
                    type: integer
                  city_name:
                    type: string
                  countries_name:
                    type: string
                  country:
                    format: int32
                    type: integer
                  credit_association_id:
                    format: int32
                    type: integer
                  credit_status:
                    format: int32
                    type: integer
                  credit_status_name:
                    type: string
                  current_expendeture:
                    type: number
                  customer_id:
                    format: int32
                    type: integer
                  max_monthly_credit:
                    format: int32
                    type: integer
                  partner_id:
                    format: int32
                    type: integer
                  pin:
                    format: int32
                    type: integer
                  remaining_expendeture:
                    type: number
                  state:
                    format: int32
                    type: integer
                  states_name:
                    type: string
                  store_category:
                    format: int32
                    type: integer
                  store_category_name:
                    type: string
                  store_id:
                    format: int32
                    type: integer
                  store_name:
                    type: string
                  updated_at:
                    type: string
                required:
                - credit_association_id
                - partner_id
                - customer_id
                - max_monthly_credit
                - current_expendeture
                - updated_at
                - credit_status
                - store_id
                - credit_status_name
                - remaining_expendeture
                - store_name
                - store_category
                - store_category_name
                - address_id
                - addressline1
                - addressline2
                - pin
                - city
                - state
                - country
                - address_type
                - city_name
                - states_name
                - countries_name
                type: object
              type: array
            customer_details:
              properties:
                customer_id:
                  format: int32
                  type: integer
                customer_name:
                  type: string
                customer_status:
                  format: int32
                  type: integer
                customer_status_name:
                  type: string
                email_id:
                  type: string
                phone_no:
                  type: string
              required:
              - customer_id
              - customer_status
              - customer_name
              - phone_no
              - email_id
              - customer_status_name
              type: object
            order_details:
              items:
                allOf:
                - properties:
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_detail_id:
                      format: int32
                      type: integer
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    order_status:
                      format: int32
                      type: integer
                    order_status_name:
                      type: string
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    price:
                      type: number
                  required:
                  - order_id
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - order_detail_id
                  - order_status
                  - billing_address_id
                  - customer_id
                  - price
                  - payment_type
                  - payment_status
                  - order_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_detail_id:
                      format: int32
                      type: integer
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    order_status:
                      format: int32
                      type: integer
                    order_status_name:
                      type: string
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    price:
                      format: int32
                      type: integer
                  required:
                  - order_id
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - order_detail_id
                  - order_status
                  - billing_address_id
                  - customer_id
                  - price
                  - payment_type
                  - payment_status
                  - order_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
              type: array
          required:
          - customer_details
          - credit_store_details
          - credit_order_details
          - order_details
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminCustomerGetallGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              credit_status:
                format: int32
                type: integer
              credit_status_name:
                type: string
              customer_id:
                format: int32
                type: integer
              customer_name:
                type: string
              customer_status:
                format: int32
                type: integer
              customer_status_name:
                type: string
              email_id:
                type: string
              phone_no:
                type: string
            required:
            - customer_id
            - customer_status
            - customer_name
            - phone_no
            - email_id
            - customer_status_name
            - credit_status
            - credit_status_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminCustomeraddressesPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              address_status:
                format: int32
                type: integer
              address_type:
                format: int32
                type: integer
              addressline1:
                type: string
              addressline2:
                type: string
              city:
                format: int32
                type: integer
              contact_no:
                type: string
              customer_address_id:
                format: int32
                type: integer
              customer_id:
                format: int32
                type: integer
              landmark:
                type: string
              name:
                type: string
              pin:
                format: int32
                type: integer
              state:
                format: int32
                type: integer
            required:
            - customer_address_id
            - name
            - contact_no
            - addressline1
            - addressline2
            - city
            - state
            - pin
            - customer_id
            - address_type
            - address_status
            - landmark
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminGetbyidPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            addressline1:
              type: string
            addressline2:
              type: string
            admn_user_id:
              format: int32
              type: integer
            city_id:
              format: int32
              type: integer
            city_name:
              type: string
            contact_phone:
              type: string
            countries_name:
              type: string
            country_id:
              format: int32
              type: integer
            email_id:
              type: string
            firstname:
              type: string
            lastname:
              type: string
            pin:
              format: int32
              type: integer
            state_id:
              format: int32
              type: integer
            states_name:
              type: string
            user_status:
              format: int32
              type: integer
            user_type:
              format: int32
              type: integer
            user_type_name:
              type: string
            username:
              type: string
          required:
          - admn_user_id
          - user_type
          - user_status
          - username
          - firstname
          - lastname
          - contact_phone
          - email_id
          - addressline1
          - addressline2
          - pin
          - city_id
          - state_id
          - country_id
          - city_name
          - states_name
          - countries_name
          - user_type_name
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminIncidentsAssignpartnerPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items: {}
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminIncidentsGetallPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              accepted_location: {}
              accepted_on: {}
              assigned_on:
                type: string
              assigned_to_id:
                format: int32
                type: integer
              bag_ids:
                type: string
              created_on:
                type: string
              first_name:
                type: string
              incident_assignment_id:
                format: int32
                type: integer
              incident_assignment_status:
                format: int32
                type: integer
              incident_description:
                type: string
              incident_detail_id:
                format: int32
                type: integer
              incident_id:
                format: int32
                type: integer
              incident_priority:
                format: int32
                type: integer
              incident_queue_id:
                format: int32
                type: integer
              incident_ref_no:
                type: string
              incident_status:
                format: int32
                type: integer
              incident_status_name:
                type: string
              incident_type:
                format: int32
                type: integer
              last_name:
                type: string
              order_id:
                format: int32
                type: integer
              order_ref_no:
                type: string
              problem_codes:
                type: string
              problem_codes_names:
                type: string
              queue_type:
                format: int32
                type: integer
              raised_by:
                format: int32
                type: integer
              raised_by_role:
                type: string
              reported_timestamp:
                type: string
              resolution_reason_code: {}
              severity_name:
                type: string
              updated_on:
                type: string
            required:
            - incident_id
            - incident_type
            - raised_by
            - raised_by_role
            - reported_timestamp
            - incident_detail_id
            - order_id
            - problem_codes
            - incident_description
            - incident_status
            - updated_on
            - incident_ref_no
            - incident_priority
            - resolution_reason_code
            - bag_ids
            - incident_assignment_id
            - assigned_to_id
            - assigned_on
            - incident_assignment_status
            - accepted_on
            - accepted_location
            - incident_queue_id
            - queue_type
            - created_on
            - first_name
            - last_name
            - incident_status_name
            - order_ref_no
            - problem_codes_names
            - severity_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminIncidentsGetbyidPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            accepted_location: {}
            accepted_on: {}
            action_comment: {}
            action_type:
              format: int32
              type: integer
            assigned_on:
              type: string
            assigned_to_id:
              format: int32
              type: integer
            bag_details:
              items:
                properties:
                  bag_id:
                    format: int32
                    type: integer
                  bag_ref_no:
                    type: string
                  bag_status:
                    format: int32
                    type: integer
                  bag_status_name:
                    type: string
                  contact_email:
                    type: string
                  contact_person_firstname:
                    type: string
                  contact_person_lastname:
                    type: string
                  contact_phone:
                    type: string
                  prebooking_flag:
                    format: int32
                    type: integer
                  qc_partner_id:
                    format: int32
                    type: integer
                  region_id:
                    format: int32
                    type: integer
                  store_category:
                    format: int32
                    type: integer
                  store_category_name:
                    type: string
                  store_close_time:
                    type: string
                  store_days:
                    type: string
                  store_id:
                    format: int32
                    type: integer
                  store_name:
                    type: string
                  store_open_time:
                    type: string
                  store_order_type_name:
                    type: string
                  store_policy: {}
                  store_rating:
                    format: int32
                    type: integer
                  store_status:
                    format: int32
                    type: integer
                  store_status_name:
                    type: string
                  updated_on: {}
                required:
                - bag_id
                - bag_ref_no
                - bag_status
                - updated_on
                - bag_status_name
                - store_id
                - store_name
                - store_category
                - qc_partner_id
                - store_rating
                - store_status
                - region_id
                - store_open_time
                - store_close_time
                - store_days
                - store_policy
                - prebooking_flag
                - store_status_name
                - store_category_name
                - store_order_type_name
                - contact_phone
                - contact_email
                - contact_person_firstname
                - contact_person_lastname
                type: object
              type: array
            bag_ids:
              type: string
            billing_address_id:
              format: int32
              type: integer
            contact_person_email:
              type: string
            contact_person_no:
              type: string
            created_on:
              type: string
            customer_detail_id:
              format: int32
              type: integer
            customer_id:
              format: int32
              type: integer
            email_id:
              type: string
            email_verify_status:
              format: int32
              type: integer
            first_name:
              type: string
            incident_assignment_id:
              format: int32
              type: integer
            incident_assignment_status:
              format: int32
              type: integer
            incident_description:
              type: string
            incident_detail_id:
              format: int32
              type: integer
            incident_id:
              format: int32
              type: integer
            incident_priority:
              format: int32
              type: integer
            incident_queue_id:
              format: int32
              type: integer
            incident_ref_no:
              type: string
            incident_status:
              format: int32
              type: integer
            incident_status_name:
              type: string
            incident_type:
              format: int32
              type: integer
            kyc_authenticated: {}
            kyc_status:
              format: int32
              type: integer
            last_name:
              type: string
            order_created_at:
              type: string
            order_delivery_date: {}
            order_detail_id:
              format: int32
              type: integer
            order_id:
              format: int32
              type: integer
            order_ref_no:
              type: string
            order_status:
              format: int32
              type: integer
            partner_details:
              items:
                allOf:
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    billing_name:
                      type: string
                    company_name:
                      type: string
                    contact_email:
                      type: string
                    contact_person_designation:
                      type: string
                    contact_person_firstname:
                      type: string
                    contact_person_lastname:
                      type: string
                    contact_phone:
                      type: string
                    corporate_size: {}
                    gst_numbers:
                      type: string
                    pan:
                      type: string
                    partner_address_id:
                      format: int32
                      type: integer
                    partner_bank_id: {}
                    partner_detail_id:
                      format: int32
                      type: integer
                    password:
                      type: string
                    payment_term: {}
                    qc_partner_id:
                      format: int32
                      type: integer
                    status:
                      format: int32
                      type: integer
                    updated_by: {}
                    updated_on:
                      type: string
                  required:
                  - partner_detail_id
                  - company_name
                  - contact_phone
                  - billing_name
                  - gst_numbers
                  - corporate_size
                  - payment_term
                  - updated_on
                  - updated_by
                  - partner_address_id
                  - pan
                  - contact_email
                  - contact_person_firstname
                  - contact_person_lastname
                  - contact_person_designation
                  - partner_bank_id
                  - status
                  - qc_partner_id
                  - password
                  - bag_id
                  - bag_ref_no
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    billing_name:
                      type: string
                    company_name:
                      type: string
                    contact_email:
                      type: string
                    contact_person_designation:
                      type: string
                    contact_person_firstname:
                      type: string
                    contact_person_lastname:
                      type: string
                    contact_phone:
                      type: string
                    corporate_size: {}
                    gst_numbers:
                      type: string
                    pan:
                      type: string
                    partner_address_id:
                      format: int32
                      type: integer
                    partner_bank_id:
                      format: int32
                      type: integer
                    partner_detail_id:
                      format: int32
                      type: integer
                    password:
                      type: string
                    payment_term: {}
                    qc_partner_id:
                      format: int32
                      type: integer
                    status:
                      format: int32
                      type: integer
                    updated_by: {}
                    updated_on:
                      type: string
                  required:
                  - partner_detail_id
                  - company_name
                  - contact_phone
                  - billing_name
                  - gst_numbers
                  - corporate_size
                  - payment_term
                  - updated_on
                  - updated_by
                  - partner_address_id
                  - pan
                  - contact_email
                  - contact_person_firstname
                  - contact_person_lastname
                  - contact_person_designation
                  - partner_bank_id
                  - status
                  - qc_partner_id
                  - password
                  - bag_id
                  - bag_ref_no
                  type: object
              type: array
            password:
              type: string
            payment_date: {}
            payment_status:
              format: int32
              type: integer
            payment_type:
              format: int32
              type: integer
            phone_no:
              type: string
            pre_order_flag:
              format: int32
              type: integer
            price:
              format: int32
              type: integer
            problem_codes:
              items:
                properties:
                  code:
                    format: int32
                    type: integer
                  name:
                    type: string
                required:
                - code
                - name
                type: object
              type: array
            problem_image_url:
              type: string
            queue_type:
              format: int32
              type: integer
            raised_by:
              format: int32
              type: integer
            raised_by_role:
              type: string
            reported_timestamp:
              type: string
            resolution_reason_code: {}
            scheduled_delivery_date:
              type: string
            updated_by:
              format: int32
              type: integer
            updated_on:
              type: string
          required:
          - incident_id
          - incident_type
          - raised_by
          - raised_by_role
          - reported_timestamp
          - customer_detail_id
          - first_name
          - last_name
          - email_id
          - phone_no
          - password
          - kyc_status
          - email_verify_status
          - kyc_authenticated
          - customer_id
          - incident_detail_id
          - order_id
          - problem_codes
          - incident_description
          - incident_status
          - updated_by
          - updated_on
          - problem_image_url
          - incident_ref_no
          - incident_priority
          - resolution_reason_code
          - bag_ids
          - contact_person_no
          - contact_person_email
          - incident_status_name
          - order_ref_no
          - order_created_at
          - order_delivery_date
          - scheduled_delivery_date
          - order_detail_id
          - order_status
          - billing_address_id
          - price
          - payment_type
          - payment_status
          - pre_order_flag
          - payment_date
          - incident_assignment_id
          - assigned_to_id
          - assigned_on
          - incident_assignment_status
          - accepted_on
          - accepted_location
          - incident_queue_id
          - queue_type
          - created_on
          - action_type
          - action_comment
          - partner_details
          - bag_details
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminIncidentsGetnextstatusPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              domain_code:
                format: int32
                type: integer
              domain_data_type:
                type: string
              domain_id:
                format: int32
                type: integer
              domain_text:
                type: string
              domain_type:
                type: string
              domain_value:
                type: string
            required:
            - domain_id
            - domain_value
            - domain_code
            - domain_type
            - domain_text
            - domain_data_type
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminIncidentsUpdatestatusPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items: {}
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminLoginPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            address_id:
              format: int32
              type: integer
            addressline1:
              type: string
            addressline2:
              type: string
            admn_user_id:
              format: int32
              type: integer
            city_name:
              type: string
            contact_phone:
              type: string
            countries_name:
              type: string
            email_id:
              type: string
            firstname:
              type: string
            lastname:
              type: string
            pin:
              format: int32
              type: integer
            states_name:
              type: string
            user_type_name:
              type: string
            username:
              type: string
          required:
          - admn_user_id
          - username
          - contact_phone
          - email_id
          - firstname
          - lastname
          - user_type_name
          - address_id
          - addressline1
          - addressline2
          - city_name
          - states_name
          - countries_name
          - pin
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderAssignbagPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            delivery_person:
              properties:
                alternate_phone:
                  type: string
                contact_phone:
                  type: string
                delivery_person_name:
                  type: string
              required:
              - delivery_person_name
              - contact_phone
              - alternate_phone
              type: object
            temp:
              properties:
                bag_ref_no:
                  type: string
                billing_address_id:
                  format: int32
                  type: integer
                customer_address:
                  type: string
                customer_id:
                  format: int32
                  type: integer
                customer_name:
                  type: string
                customer_phone_no:
                  type: string
                order_id:
                  format: int32
                  type: integer
                partner_name:
                  type: string
                partner_phone_no:
                  type: string
                qc_partner_id:
                  format: int32
                  type: integer
                store_address:
                  type: string
                store_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
                work_item_id:
                  format: int32
                  type: integer
              required:
              - store_id
              - bag_ref_no
              - qc_partner_id
              - store_name
              - order_id
              - customer_id
              - customer_name
              - customer_phone_no
              - customer_address
              - billing_address_id
              - work_item_id
              - partner_name
              - partner_phone_no
              - store_address
              type: object
          required:
          - temp
          - delivery_person
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderBagactionPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            next_action:
              items:
                properties:
                  action_name:
                    type: string
                  next_action:
                    format: int32
                    type: integer
                required:
                - next_action
                - action_name
                type: object
              type: array
          required:
          - next_action
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderBagdetailsPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                bag_id:
                  format: int32
                  type: integer
                bag_item_id:
                  format: int32
                  type: integer
                bag_item_status:
                  format: int32
                  type: integer
                brand_created_by_role:
                  format: int32
                  type: integer
                partner_product_id:
                  format: int32
                  type: integer
                product_brand_description:
                  type: string
                product_brand_id:
                  format: int32
                  type: integer
                product_brand_name:
                  type: string
                product_id:
                  format: int32
                  type: integer
                product_title:
                  type: string
                required_quantity:
                  format: int32
                  type: integer
                subcategory_name:
                  type: string
                total_price:
                  format: int32
                  type: integer
              required:
              - bag_item_id
              - product_id
              - required_quantity
              - total_price
              - bag_id
              - bag_item_status
              - partner_product_id
              - brand_created_by_role
              - product_brand_id
              - product_brand_name
              - product_brand_description
              - subcategory_name
              - product_title
              type: object
            - properties:
                bag_id:
                  format: int32
                  type: integer
                bag_item_id:
                  format: int32
                  type: integer
                bag_item_status:
                  format: int32
                  type: integer
                brand_created_by_role:
                  format: int32
                  type: integer
                partner_product_id:
                  format: int32
                  type: integer
                product_brand_description:
                  type: string
                product_brand_id:
                  format: int32
                  type: integer
                product_brand_name:
                  type: string
                product_id:
                  format: int32
                  type: integer
                product_title:
                  type: string
                required_quantity:
                  format: int32
                  type: integer
                subcategory_name:
                  type: string
                total_price:
                  type: number
              required:
              - bag_item_id
              - product_id
              - required_quantity
              - total_price
              - bag_id
              - bag_item_status
              - partner_product_id
              - brand_created_by_role
              - product_brand_id
              - product_brand_name
              - product_brand_description
              - subcategory_name
              - product_title
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        data: {}
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderDetailsExternalPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            delivery_address:
              properties:
                address_status:
                  format: int32
                  type: integer
                address_status_name:
                  type: string
                address_type:
                  format: int32
                  type: integer
                address_type_name:
                  type: string
                addressline1:
                  type: string
                addressline2:
                  type: string
                city:
                  format: int32
                  type: integer
                city_name:
                  type: string
                contact_no:
                  type: string
                customer_address_id:
                  format: int32
                  type: integer
                customer_id:
                  format: int32
                  type: integer
                default_flag: {}
                landmark:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
                name:
                  type: string
                optional_contact_no: {}
                pin:
                  format: int32
                  type: integer
                state:
                  format: int32
                  type: integer
                states_name:
                  type: string
              required:
              - customer_address_id
              - name
              - contact_no
              - optional_contact_no
              - addressline1
              - addressline2
              - city
              - state
              - pin
              - customer_id
              - address_type
              - default_flag
              - address_status
              - landmark
              - latitude
              - longitude
              - city_name
              - states_name
              - address_type_name
              - address_status_name
              type: object
            order_details:
              properties:
                customer_id:
                  format: int32
                  type: integer
                order_created_at:
                  type: string
                order_delivery_date: {}
                order_id:
                  format: int32
                  type: integer
                order_ref_no:
                  type: string
                order_status:
                  format: int32
                  type: integer
                order_status_name:
                  type: string
                payment_link:
                  type: string
                payment_status:
                  format: int32
                  type: integer
                payment_status_name:
                  type: string
                payment_type:
                  format: int32
                  type: integer
                payment_type_name:
                  type: string
                pre_order_flag:
                  format: int32
                  type: integer
                price:
                  format: int32
                  type: integer
                scheduled_delivery_date:
                  type: string
              required:
              - order_id
              - order_ref_no
              - order_created_at
              - order_delivery_date
              - scheduled_delivery_date
              - order_status
              - order_status_name
              - customer_id
              - price
              - payment_type
              - payment_type_name
              - payment_status
              - payment_status_name
              - pre_order_flag
              - payment_link
              type: object
            price_details:
              items:
                properties:
                  breakup_amount:
                    format: int32
                    type: integer
                  breakup_item:
                    format: int32
                    type: integer
                  breakup_item_name:
                    type: string
                  order_id:
                    format: int32
                    type: integer
                  price_breakup_details_id:
                    format: int32
                    type: integer
                required:
                - price_breakup_details_id
                - order_id
                - breakup_item
                - breakup_amount
                - breakup_item_name
                type: object
              type: array
            store_details:
              items:
                allOf:
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    bucket_name:
                      type: string
                    comments: {}
                    contact_phone:
                      type: string
                    created_on:
                      type: string
                    credit_flag:
                      format: int32
                      type: integer
                    item_details:
                      items:
                        properties:
                          bag_id:
                            format: int32
                            type: integer
                          bag_item_id:
                            format: int32
                            type: integer
                          bag_item_status:
                            format: int32
                            type: integer
                          bucket_name:
                            type: string
                          itemImageFolder:
                            type: string
                          product_description:
                            type: string
                          product_id:
                            format: int32
                            type: integer
                          product_selling_price:
                            format: int32
                            type: integer
                          product_thumbnail: {}
                          required_quantity:
                            format: int32
                            type: integer
                          total_price:
                            format: int32
                            type: integer
                          unit:
                            type: string
                        required:
                        - bag_item_id
                        - product_id
                        - required_quantity
                        - total_price
                        - bag_id
                        - bag_item_status
                        - product_description
                        - product_thumbnail
                        - product_selling_price
                        - unit
                        - bucket_name
                        - itemImageFolder
                        type: object
                      type: array
                    latitude:
                      type: number
                    longitude:
                      type: number
                    msqube_percentage:
                      format: int32
                      type: integer
                    no_item_show:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    overall_rating: {}
                    paid_to_partner:
                      format: int32
                      type: integer
                    paid_to_qubecart:
                      format: int32
                      type: integer
                    partner_percentage:
                      format: int32
                      type: integer
                    qc_partner_id:
                      format: int32
                      type: integer
                    region_id:
                      format: int32
                      type: integer
                    sales_person_percentage:
                      format: int32
                      type: integer
                    scheduled_delivery_date:
                      type: string
                    special_request: {}
                    storeImageFolder:
                      type: string
                    store_address_id:
                      format: int32
                      type: integer
                    store_category:
                      format: int32
                      type: integer
                    store_id:
                      format: int32
                      type: integer
                    store_image: {}
                    store_name:
                      type: string
                    store_rating:
                      format: int32
                      type: integer
                    store_status:
                      format: int32
                      type: integer
                    updated_by: {}
                    updated_on:
                      type: string
                  required:
                  - bag_id
                  - store_id
                  - bag_ref_no
                  - updated_on
                  - updated_by
                  - order_id
                  - bag_status
                  - paid_to_partner
                  - paid_to_qubecart
                  - special_request
                  - msqube_percentage
                  - partner_percentage
                  - sales_person_percentage
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - scheduled_delivery_date
                  - store_address_id
                  - store_name
                  - latitude
                  - longitude
                  - store_category
                  - qc_partner_id
                  - store_rating
                  - credit_flag
                  - store_status
                  - region_id
                  - created_on
                  - store_image
                  - no_item_show
                  - contact_phone
                  - bag_status_name
                  - overall_rating
                  - comments
                  - bucket_name
                  - storeImageFolder
                  - item_details
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    bucket_name:
                      type: string
                    comments: {}
                    contact_phone:
                      type: string
                    created_on:
                      type: string
                    credit_flag:
                      format: int32
                      type: integer
                    item_details:
                      items:
                        properties:
                          bag_id:
                            format: int32
                            type: integer
                          bag_item_id:
                            format: int32
                            type: integer
                          bag_item_status:
                            format: int32
                            type: integer
                          bucket_name:
                            type: string
                          itemImageFolder:
                            type: string
                          product_description:
                            type: string
                          product_id:
                            format: int32
                            type: integer
                          product_selling_price:
                            format: int32
                            type: integer
                          product_thumbnail: {}
                          required_quantity:
                            format: int32
                            type: integer
                          total_price:
                            format: int32
                            type: integer
                          unit:
                            type: string
                        required:
                        - bag_item_id
                        - product_id
                        - required_quantity
                        - total_price
                        - bag_id
                        - bag_item_status
                        - product_description
                        - product_thumbnail
                        - product_selling_price
                        - unit
                        - bucket_name
                        - itemImageFolder
                        type: object
                      type: array
                    latitude:
                      type: number
                    longitude:
                      type: number
                    msqube_percentage:
                      format: int32
                      type: integer
                    no_item_show:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_delivery_date: {}
                    order_id:
                      format: int32
                      type: integer
                    order_ref_no:
                      type: string
                    overall_rating: {}
                    paid_to_partner:
                      format: int32
                      type: integer
                    paid_to_qubecart:
                      format: int32
                      type: integer
                    partner_percentage:
                      format: int32
                      type: integer
                    qc_partner_id:
                      format: int32
                      type: integer
                    region_id:
                      format: int32
                      type: integer
                    sales_person_percentage:
                      format: int32
                      type: integer
                    scheduled_delivery_date:
                      type: string
                    special_request: {}
                    storeImageFolder:
                      type: string
                    store_address_id:
                      format: int32
                      type: integer
                    store_category:
                      format: int32
                      type: integer
                    store_id:
                      format: int32
                      type: integer
                    store_image:
                      type: string
                    store_name:
                      type: string
                    store_rating:
                      format: int32
                      type: integer
                    store_status:
                      format: int32
                      type: integer
                    updated_by: {}
                    updated_on:
                      type: string
                  required:
                  - bag_id
                  - store_id
                  - bag_ref_no
                  - updated_on
                  - updated_by
                  - order_id
                  - bag_status
                  - paid_to_partner
                  - paid_to_qubecart
                  - special_request
                  - msqube_percentage
                  - partner_percentage
                  - sales_person_percentage
                  - order_ref_no
                  - order_created_at
                  - order_delivery_date
                  - scheduled_delivery_date
                  - store_address_id
                  - store_name
                  - latitude
                  - longitude
                  - store_category
                  - qc_partner_id
                  - store_rating
                  - credit_flag
                  - store_status
                  - region_id
                  - created_on
                  - store_image
                  - no_item_show
                  - contact_phone
                  - bag_status_name
                  - overall_rating
                  - comments
                  - bucket_name
                  - storeImageFolder
                  - item_details
                  type: object
              type: array
            student_details:
              items: {}
              type: array
          required:
          - order_details
          - store_details
          - price_details
          - student_details
          - delivery_address
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderDetailsPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            order:
              properties:
                addressline1:
                  type: string
                addressline2:
                  type: string
                bags:
                  items:
                    allOf:
                    - properties:
                        bag_id:
                          format: int32
                          type: integer
                        bag_price:
                          type: number
                        bag_ref_no:
                          type: string
                        bag_status:
                          format: int32
                          type: integer
                        bag_status_name:
                          type: string
                        order_id:
                          format: int32
                          type: integer
                        partner:
                          type: string
                        qc_partner_id:
                          format: int32
                          type: integer
                        store_address:
                          type: string
                        store_address_id:
                          format: int32
                          type: integer
                        store_id:
                          format: int32
                          type: integer
                        store_name:
                          type: string
                        updated_by: {}
                        updated_on: {}
                      required:
                      - bag_id
                      - store_id
                      - bag_ref_no
                      - updated_on
                      - updated_by
                      - order_id
                      - bag_status
                      - store_name
                      - store_address_id
                      - qc_partner_id
                      - partner
                      - store_address
                      - bag_status_name
                      - bag_price
                      type: object
                    - properties:
                        bag_id:
                          format: int32
                          type: integer
                        bag_price:
                          type: number
                        bag_ref_no:
                          type: string
                        bag_status:
                          format: int32
                          type: integer
                        bag_status_name:
                          type: string
                        order_id:
                          format: int32
                          type: integer
                        partner:
                          type: string
                        qc_partner_id:
                          format: int32
                          type: integer
                        store_address:
                          type: string
                        store_address_id:
                          format: int32
                          type: integer
                        store_id:
                          format: int32
                          type: integer
                        store_name:
                          type: string
                        updated_by: {}
                        updated_on:
                          type: string
                      required:
                      - bag_id
                      - store_id
                      - bag_ref_no
                      - updated_on
                      - updated_by
                      - order_id
                      - bag_status
                      - store_name
                      - store_address_id
                      - qc_partner_id
                      - partner
                      - store_address
                      - bag_status_name
                      - bag_price
                      type: object
                  type: array
                billing_address_id:
                  format: int32
                  type: integer
                billing_name:
                  type: string
                billing_phone:
                  type: string
                city_name:
                  type: string
                customer_id:
                  format: int32
                  type: integer
                customer_name:
                  type: string
                email_id:
                  type: string
                order_created_at:
                  type: string
                order_delivery_date: {}
                order_detail_id:
                  format: int32
                  type: integer
                order_id:
                  format: int32
                  type: integer
                order_ref_no:
                  type: string
                order_status:
                  format: int32
                  type: integer
                order_status_name:
                  type: string
                payment_type:
                  format: int32
                  type: integer
                payment_type_name:
                  type: string
                phone_no:
                  type: string
                pin:
                  format: int32
                  type: integer
                price:
                  type: number
                states_name:
                  type: string
              required:
              - order_id
              - order_ref_no
              - order_created_at
              - order_delivery_date
              - order_detail_id
              - billing_address_id
              - price
              - customer_id
              - payment_type
              - order_status
              - order_status_name
              - payment_type_name
              - customer_name
              - email_id
              - phone_no
              - billing_name
              - billing_phone
              - addressline1
              - addressline2
              - pin
              - city_name
              - states_name
              - bags
              type: object
          required:
          - order
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderGetallPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                billing_address_id:
                  format: int32
                  type: integer
                customer_id:
                  format: int32
                  type: integer
                customer_name:
                  type: string
                order_created_at:
                  type: string
                order_delivery_date: {}
                order_detail_id:
                  format: int32
                  type: integer
                order_id:
                  format: int32
                  type: integer
                order_ref_no:
                  type: string
                order_status:
                  format: int32
                  type: integer
                order_status_name:
                  type: string
                payment_type:
                  format: int32
                  type: integer
                payment_type_name:
                  type: string
                price:
                  type: number
              required:
              - order_id
              - order_ref_no
              - order_created_at
              - order_delivery_date
              - order_detail_id
              - order_status
              - billing_address_id
              - customer_id
              - price
              - payment_type
              - order_status_name
              - payment_type_name
              - customer_name
              type: object
            - properties:
                billing_address_id:
                  format: int32
                  type: integer
                customer_id:
                  format: int32
                  type: integer
                customer_name:
                  type: string
                order_created_at:
                  type: string
                order_delivery_date: {}
                order_detail_id:
                  format: int32
                  type: integer
                order_id:
                  format: int32
                  type: integer
                order_ref_no:
                  type: string
                order_status:
                  format: int32
                  type: integer
                order_status_name:
                  type: string
                payment_type:
                  format: int32
                  type: integer
                payment_type_name:
                  type: string
                price:
                  format: int32
                  type: integer
              required:
              - order_id
              - order_ref_no
              - order_created_at
              - order_delivery_date
              - order_detail_id
              - order_status
              - billing_address_id
              - customer_id
              - price
              - payment_type
              - order_status_name
              - payment_type_name
              - customer_name
              type: object
            - properties:
                billing_address_id:
                  format: int32
                  type: integer
                customer_id:
                  format: int32
                  type: integer
                customer_name:
                  type: string
                order_created_at:
                  type: string
                order_delivery_date: {}
                order_detail_id:
                  format: int32
                  type: integer
                order_id:
                  format: int32
                  type: integer
                order_ref_no:
                  type: string
                order_status:
                  format: int32
                  type: integer
                order_status_name:
                  type: string
                payment_type:
                  format: int32
                  type: integer
                payment_type_name:
                  type: string
                price:
                  type: number
              required:
              - order_id
              - order_ref_no
              - order_created_at
              - order_delivery_date
              - order_detail_id
              - order_status
              - billing_address_id
              - customer_id
              - price
              - payment_type
              - order_status_name
              - payment_type_name
              - customer_name
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminOrderPaytopartnerPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception: {}
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminOrderUpdatebagstatusPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminOrderUpdatepaymentPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminOrderUpdatestatusPost200:
      properties:
        Errors:
          properties:
            Business_Errors:
              items:
                properties:
                  Code:
                    type: string
                  Message:
                    type: string
                required:
                - Code
                - Message
                type: object
              type: array
            Info:
              items: {}
              type: array
            System_Errors:
              items: {}
              type: array
            Warnings:
              items: {}
              type: array
          required:
          - Info
          - Business_Errors
          - Warnings
          - System_Errors
          type: object
        code: {}
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminPartnerAddbankdetailPost200:
      properties:
        Errors: {}
        code:
          type: string
        data: {}
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminPartnerApprovePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminPartnerCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminPartnerDetailsbyidPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            approval_status:
              format: int32
              type: integer
            approval_status_name:
              type: string
            company_name:
              type: string
            contact_email:
              type: string
            contact_person: {}
            contact_person_designation:
              type: string
            contact_phone:
              type: string
            gst_numbers:
              type: string
            pan:
              type: string
            partner_address:
              properties:
                address_id:
                  format: int32
                  type: integer
                address_type: {}
                addressline1:
                  type: string
                addressline2:
                  type: string
                city:
                  format: int32
                  type: integer
                city_name:
                  type: string
                countries_name:
                  type: string
                country:
                  format: int32
                  type: integer
                pin:
                  format: int32
                  type: integer
                state:
                  format: int32
                  type: integer
                states_name:
                  type: string
              required:
              - address_id
              - addressline1
              - addressline2
              - pin
              - city
              - state
              - country
              - address_type
              - city_name
              - states_name
              - countries_name
              type: object
            partner_address_id:
              format: int32
              type: integer
            partner_bank_id:
              format: int32
              type: integer
            partner_category:
              format: int32
              type: integer
            partner_code:
              type: string
            qc_partner_id:
              format: int32
              type: integer
            stores:
              items:
                properties:
                  addressline1:
                    type: string
                  addressline2:
                    type: string
                  city_name:
                    type: string
                  countries_name:
                    type: string
                  pin:
                    format: int32
                    type: integer
                  qc_partner_id:
                    format: int32
                    type: integer
                  states_name:
                    type: string
                  store_address_id:
                    format: int32
                    type: integer
                  store_category:
                    format: int32
                    type: integer
                  store_id:
                    format: int32
                    type: integer
                  store_image:
                    type: string
                  store_location: {}
                  store_name:
                    type: string
                  store_type_name:
                    type: string
                required:
                - store_id
                - store_address_id
                - store_name
                - store_location
                - store_category
                - store_image
                - qc_partner_id
                - addressline1
                - addressline2
                - pin
                - city_name
                - states_name
                - countries_name
                - store_type_name
                type: object
              type: array
            updated_on:
              type: string
          required:
          - qc_partner_id
          - partner_category
          - partner_code
          - approval_status
          - approval_status_name
          - company_name
          - contact_phone
          - contact_email
          - contact_person
          - contact_person_designation
          - updated_on
          - pan
          - gst_numbers
          - partner_bank_id
          - partner_address_id
          - partner_address
          - stores
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminPartnerGetallPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                approval_status:
                  format: int32
                  type: integer
                approval_status_name:
                  type: string
                company_name:
                  type: string
                contact_email:
                  type: string
                contact_person:
                  type: string
                contact_person_designation:
                  type: string
                contact_phone:
                  type: string
                partner_code:
                  type: string
                partner_name:
                  type: string
                partner_type:
                  format: int32
                  type: integer
                qc_partner_id:
                  format: int32
                  type: integer
                updated_on:
                  type: string
              required:
              - qc_partner_id
              - partner_type
              - partner_code
              - partner_name
              - approval_status
              - approval_status_name
              - company_name
              - contact_phone
              - contact_email
              - contact_person
              - contact_person_designation
              - updated_on
              type: object
            - properties:
                approval_status:
                  format: int32
                  type: integer
                approval_status_name:
                  type: string
                company_name:
                  type: string
                contact_email:
                  type: string
                contact_person:
                  type: string
                contact_person_designation:
                  type: string
                contact_phone:
                  type: string
                partner_code:
                  type: string
                partner_name:
                  type: string
                partner_type:
                  format: int32
                  type: integer
                qc_partner_id:
                  format: int32
                  type: integer
                updated_on: {}
              required:
              - qc_partner_id
              - partner_type
              - partner_code
              - partner_name
              - approval_status
              - approval_status_name
              - company_name
              - contact_phone
              - contact_email
              - contact_person
              - contact_person_designation
              - updated_on
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminPersonnelApprovePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminPersonnelGetallGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              admn_user_id:
                format: int32
                type: integer
              contact_phone:
                type: string
              email_id:
                type: string
              firstname:
                type: string
              gender:
                type: string
              lastname:
                type: string
              user_status:
                format: int32
                type: integer
              user_status_name:
                type: string
              user_type:
                format: int32
                type: integer
              user_type_name:
                type: string
              username:
                type: string
            required:
            - admn_user_id
            - username
            - user_status
            - user_type
            - firstname
            - lastname
            - contact_phone
            - email_id
            - gender
            - user_type_name
            - user_status_name
            type: object
          type: array
        exceptiopn:
          format: 'null'
          type: boolean
      required:
      - code
      - exceptiopn
      - Errors
      - data
      type: object
    schemaQubecartAdminPersonnelGetbyregionPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              admn_user_id:
                format: int32
                type: integer
              alternate_phone_no:
                type: string
              email_id:
                type: string
              firstname:
                type: string
              lastname:
                type: string
              primary_phone_no:
                type: string
              region_id:
                format: int32
                type: integer
              user_status:
                format: int32
                type: integer
            required:
            - firstname
            - lastname
            - primary_phone_no
            - alternate_phone_no
            - admn_user_id
            - region_id
            - email_id
            - user_status
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminPersonnelGetdetailPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            adhaar_voter_url:
              type: string
            admn_user_id:
              format: int32
              type: integer
            contact_phone:
              type: string
            current_address_city:
              type: string
            current_address_id:
              format: int32
              type: integer
            current_address_pin:
              format: int32
              type: integer
            current_address_statename:
              type: string
            current_addressline1:
              type: string
            current_addressline2:
              type: string
            dob:
              type: string
            email_id:
              type: string
            firstname:
              type: string
            gender:
              type: string
            lastname:
              type: string
            pan_url:
              type: string
            permanent_address_city:
              type: string
            permanent_address_id:
              format: int32
              type: integer
            permanent_address_pin:
              format: int32
              type: integer
            permanent_address_statename:
              type: string
            permanent_addressline1:
              type: string
            permanent_addressline2:
              type: string
            photo_url:
              type: string
            user_status:
              format: int32
              type: integer
            user_status_name:
              type: string
            user_type:
              format: int32
              type: integer
            username:
              type: string
            userr_type_name:
              type: string
          required:
          - admn_user_id
          - user_type
          - username
          - user_status
          - firstname
          - lastname
          - contact_phone
          - email_id
          - pan_url
          - adhaar_voter_url
          - photo_url
          - dob
          - gender
          - current_address_id
          - permanent_address_id
          - userr_type_name
          - user_status_name
          - current_addressline1
          - current_addressline2
          - current_address_pin
          - current_address_city
          - current_address_statename
          - permanent_addressline1
          - permanent_addressline2
          - permanent_address_pin
          - permanent_address_city
          - permanent_address_statename
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminProblemcodesCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - Errors
      - exception
      type: object
    schemaQubecartAdminProblemcodesGetallGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              display_description:
                type: string
              incident_severity_name:
                type: string
              problem_code:
                type: string
              problem_codes_id:
                format: int32
                type: integer
              severity:
                format: int32
                type: integer
              status:
                format: int32
                type: integer
              store_category: {}
              updated_by:
                format: int32
                type: integer
              updated_on:
                type: string
            required:
            - problem_codes_id
            - problem_code
            - display_description
            - updated_on
            - updated_by
            - store_category
            - severity
            - status
            - incident_severity_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - Errors
      - exception
      - data
      type: object
    schemaQubecartAdminProblemcodesGetbyidPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            display_description:
              type: string
            problem_code:
              type: string
            severity:
              format: int32
              type: integer
            status:
              format: int32
              type: integer
            store_category: {}
            updated_by:
              format: int32
              type: integer
            updated_on:
              type: string
          required:
          - problem_code
          - display_description
          - updated_on
          - updated_by
          - store_category
          - severity
          - status
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - Errors
      - exception
      - data
      type: object
    schemaQubecartAdminProblemcodesUpdateStatusbyidPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items: {}
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - Errors
      - exception
      - data
      type: object
    schemaQubecartAdminProblemcodesUpdatebyidPost200:
      properties:
        Error: {}
        code:
          type: string
        data: {}
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartAdminRegionCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminRegionGetallGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              city_id:
                format: int32
                type: integer
              country_id:
                format: int32
                type: integer
              created_by_id:
                format: int32
                type: integer
              created_on:
                type: string
              region_code:
                type: string
              region_id:
                format: int32
                type: integer
              region_name:
                type: string
              region_phone_no:
                type: string
              state_id:
                format: int32
                type: integer
            required:
            - region_id
            - region_code
            - region_name
            - country_id
            - state_id
            - created_by_id
            - created_on
            - city_id
            - region_phone_no
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminSendsmsOrderPost200:
      properties:
        Errors: {}
        code:
          type: string
        data: {}
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminStoreAddregionPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminStoreChangestatusPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            Errors: {}
            code:
              type: string
            data: {}
            exception:
              format: 'null'
              type: boolean
          required:
          - code
          - exception
          - Errors
          - data
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminStoreCommissionhistoryPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              commission_description:
                type: string
              commission_master_id:
                format: int32
                type: integer
              commission_name:
                type: string
              commission_percentage:
                format: int32
                type: integer
              end_date: {}
              partner_income:
                format: int32
                type: integer
              start_date:
                type: string
              status:
                format: int32
                type: integer
              store_commission_id:
                format: int32
                type: integer
              store_commission_status_name:
                type: string
              store_id:
                format: int32
                type: integer
              value: {}
            required:
            - store_commission_id
            - store_id
            - value
            - start_date
            - status
            - commission_master_id
            - end_date
            - commission_name
            - commission_description
            - commission_percentage
            - partner_income
            - store_commission_status_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminStoreGetdetailsPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            addressline1:
              type: string
            addressline2:
              type: string
            city_name:
              type: string
            countries_name:
              type: string
            created_on:
              type: string
            credit_flag:
              format: int32
              type: integer
            latitude:
              type: number
            longitude:
              type: number
            pin:
              format: int32
              type: integer
            qc_partner_id:
              format: int32
              type: integer
            region_id:
              format: int32
              type: integer
            states_name:
              type: string
            store_address_id:
              format: int32
              type: integer
            store_category:
              format: int32
              type: integer
            store_id:
              format: int32
              type: integer
            store_image:
              type: string
            store_name:
              type: string
            store_rating:
              format: int32
              type: integer
            store_status:
              format: int32
              type: integer
            store_status_name:
              type: string
            store_type_name:
              type: string
            updated_on:
              type: string
          required:
          - store_id
          - store_address_id
          - store_name
          - latitude
          - longitude
          - store_image
          - qc_partner_id
          - store_rating
          - credit_flag
          - created_on
          - store_status
          - region_id
          - store_category
          - updated_on
          - addressline1
          - addressline2
          - pin
          - city_name
          - countries_name
          - states_name
          - store_status_name
          - store_type_name
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminStoreListPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                addressline1:
                  type: string
                addressline2:
                  type: string
                city_name:
                  type: string
                countries_name:
                  type: string
                created_on: {}
                credit_flag:
                  format: int32
                  type: integer
                latitude: {}
                longitude: {}
                pin:
                  format: int32
                  type: integer
                qc_partner_id:
                  format: int32
                  type: integer
                region_id:
                  format: int32
                  type: integer
                states_name:
                  type: string
                store_address_id:
                  format: int32
                  type: integer
                store_category:
                  format: int32
                  type: integer
                store_id:
                  format: int32
                  type: integer
                store_image:
                  type: string
                store_name:
                  type: string
                store_rating:
                  format: int32
                  type: integer
                store_status:
                  format: int32
                  type: integer
                store_status_name:
                  type: string
                store_type_name:
                  type: string
                updated_on: {}
              required:
              - store_id
              - store_address_id
              - store_name
              - store_category
              - store_image
              - qc_partner_id
              - store_rating
              - credit_flag
              - region_id
              - store_status
              - created_on
              - updated_on
              - latitude
              - longitude
              - addressline1
              - addressline2
              - pin
              - city_name
              - states_name
              - countries_name
              - store_type_name
              - store_status_name
              type: object
            - properties:
                addressline1:
                  type: string
                addressline2:
                  type: string
                city_name:
                  type: string
                countries_name:
                  type: string
                created_on: {}
                credit_flag:
                  format: int32
                  type: integer
                latitude:
                  type: number
                longitude:
                  type: number
                pin:
                  format: int32
                  type: integer
                qc_partner_id:
                  format: int32
                  type: integer
                region_id:
                  format: int32
                  type: integer
                states_name:
                  type: string
                store_address_id:
                  format: int32
                  type: integer
                store_category:
                  format: int32
                  type: integer
                store_id:
                  format: int32
                  type: integer
                store_image: {}
                store_name:
                  type: string
                store_rating:
                  format: int32
                  type: integer
                store_status:
                  format: int32
                  type: integer
                store_status_name:
                  type: string
                store_type_name:
                  type: string
                updated_on: {}
              required:
              - store_id
              - store_address_id
              - store_name
              - store_category
              - store_image
              - qc_partner_id
              - store_rating
              - credit_flag
              - region_id
              - store_status
              - created_on
              - updated_on
              - latitude
              - longitude
              - addressline1
              - addressline2
              - pin
              - city_name
              - states_name
              - countries_name
              - store_type_name
              - store_status_name
              type: object
            - properties:
                addressline1:
                  type: string
                addressline2:
                  type: string
                city_name:
                  type: string
                countries_name:
                  type: string
                created_on: {}
                credit_flag:
                  format: int32
                  type: integer
                latitude: {}
                longitude: {}
                pin:
                  format: int32
                  type: integer
                qc_partner_id:
                  format: int32
                  type: integer
                region_id:
                  format: int32
                  type: integer
                states_name:
                  type: string
                store_address_id:
                  format: int32
                  type: integer
                store_category:
                  format: int32
                  type: integer
                store_id:
                  format: int32
                  type: integer
                store_image: {}
                store_name:
                  type: string
                store_rating: {}
                store_status:
                  format: int32
                  type: integer
                store_status_name:
                  type: string
                store_type_name:
                  type: string
                updated_on: {}
              required:
              - store_id
              - store_address_id
              - store_name
              - store_category
              - store_image
              - qc_partner_id
              - store_rating
              - credit_flag
              - region_id
              - store_status
              - created_on
              - updated_on
              - latitude
              - longitude
              - addressline1
              - addressline2
              - pin
              - city_name
              - states_name
              - countries_name
              - store_type_name
              - store_status_name
              type: object
            - properties:
                addressline1:
                  type: string
                addressline2:
                  type: string
                city_name:
                  type: string
                countries_name:
                  type: string
                created_on:
                  type: string
                credit_flag:
                  format: int32
                  type: integer
                latitude:
                  type: number
                longitude:
                  type: number
                pin:
                  format: int32
                  type: integer
                qc_partner_id:
                  format: int32
                  type: integer
                region_id:
                  format: int32
                  type: integer
                states_name:
                  type: string
                store_address_id:
                  format: int32
                  type: integer
                store_category:
                  format: int32
                  type: integer
                store_id:
                  format: int32
                  type: integer
                store_image: {}
                store_name:
                  type: string
                store_rating:
                  format: int32
                  type: integer
                store_status:
                  format: int32
                  type: integer
                store_status_name:
                  type: string
                store_type_name:
                  type: string
                updated_on:
                  type: string
              required:
              - store_id
              - store_address_id
              - store_name
              - store_category
              - store_image
              - qc_partner_id
              - store_rating
              - credit_flag
              - region_id
              - store_status
              - created_on
              - updated_on
              - latitude
              - longitude
              - addressline1
              - addressline2
              - pin
              - city_name
              - states_name
              - countries_name
              - store_type_name
              - store_status_name
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminStoreOrderlistPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            commission:
              properties:
                commission_name:
                  type: string
                commission_percentage:
                  format: int32
                  type: integer
                msqube_income:
                  type: number
                partner_income:
                  type: number
                total_bag_price:
                  type: number
              required:
              - msqube_income
              - partner_income
              - commission_percentage
              - total_bag_price
              - commission_name
              type: object
            orderlist:
              items:
                allOf:
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_price:
                      type: number
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_id:
                      format: int32
                      type: integer
                    paid_to_partner:
                      format: int32
                      type: integer
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    updated_on:
                      type: string
                  required:
                  - order_id
                  - order_created_at
                  - customer_id
                  - billing_address_id
                  - payment_type
                  - payment_status
                  - bag_id
                  - bag_ref_no
                  - updated_on
                  - bag_status
                  - paid_to_partner
                  - bag_price
                  - bag_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_price:
                      type: number
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_id:
                      format: int32
                      type: integer
                    paid_to_partner:
                      format: int32
                      type: integer
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    updated_on: {}
                  required:
                  - order_id
                  - order_created_at
                  - customer_id
                  - billing_address_id
                  - payment_type
                  - payment_status
                  - bag_id
                  - bag_ref_no
                  - updated_on
                  - bag_status
                  - paid_to_partner
                  - bag_price
                  - bag_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_price:
                      type: number
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_id:
                      format: int32
                      type: integer
                    paid_to_partner:
                      format: int32
                      type: integer
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    updated_on:
                      type: string
                  required:
                  - order_id
                  - order_created_at
                  - customer_id
                  - billing_address_id
                  - payment_type
                  - payment_status
                  - bag_id
                  - bag_ref_no
                  - updated_on
                  - bag_status
                  - paid_to_partner
                  - bag_price
                  - bag_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_price:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_id:
                      format: int32
                      type: integer
                    paid_to_partner:
                      format: int32
                      type: integer
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    updated_on:
                      type: string
                  required:
                  - order_id
                  - order_created_at
                  - customer_id
                  - billing_address_id
                  - payment_type
                  - payment_status
                  - bag_id
                  - bag_ref_no
                  - updated_on
                  - bag_status
                  - paid_to_partner
                  - bag_price
                  - bag_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_price:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_id:
                      format: int32
                      type: integer
                    paid_to_partner:
                      format: int32
                      type: integer
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    updated_on: {}
                  required:
                  - order_id
                  - order_created_at
                  - customer_id
                  - billing_address_id
                  - payment_type
                  - payment_status
                  - bag_id
                  - bag_ref_no
                  - updated_on
                  - bag_status
                  - paid_to_partner
                  - bag_price
                  - bag_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_price:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_id:
                      format: int32
                      type: integer
                    paid_to_partner:
                      format: int32
                      type: integer
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    updated_on:
                      type: string
                  required:
                  - order_id
                  - order_created_at
                  - customer_id
                  - billing_address_id
                  - payment_type
                  - payment_status
                  - bag_id
                  - bag_ref_no
                  - updated_on
                  - bag_status
                  - paid_to_partner
                  - bag_price
                  - bag_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
                - properties:
                    bag_id:
                      format: int32
                      type: integer
                    bag_price:
                      format: int32
                      type: integer
                    bag_ref_no:
                      type: string
                    bag_status:
                      format: int32
                      type: integer
                    bag_status_name:
                      type: string
                    billing_address_id:
                      format: int32
                      type: integer
                    customer_id:
                      format: int32
                      type: integer
                    order_created_at:
                      type: string
                    order_id:
                      format: int32
                      type: integer
                    paid_to_partner:
                      format: int32
                      type: integer
                    payment_status:
                      format: int32
                      type: integer
                    payment_status_name:
                      type: string
                    payment_type:
                      format: int32
                      type: integer
                    payment_type_name:
                      type: string
                    updated_on: {}
                  required:
                  - order_id
                  - order_created_at
                  - customer_id
                  - billing_address_id
                  - payment_type
                  - payment_status
                  - bag_id
                  - bag_ref_no
                  - updated_on
                  - bag_status
                  - paid_to_partner
                  - bag_price
                  - bag_status_name
                  - payment_type_name
                  - payment_status_name
                  type: object
              type: array
          required:
          - orderlist
          - commission
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminStoreUpdatestatusPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminTemplateAddbrandsPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminTemplateCheckduplicatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminTemplateCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminTemplateCreatecategoryPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminTemplateCreatesubcategoryPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminTemplateDeleteitemPost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminTemplateGetallGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              category:
                format: int32
                type: integer
              category_name:
                type: string
              status:
                format: int32
                type: integer
              status_name:
                type: string
              template_description: {}
              template_id:
                format: int32
                type: integer
              template_name:
                type: string
              template_ref_no:
                type: string
              updated_by:
                format: int32
                type: integer
              updated_on:
                type: string
              username:
                type: string
            required:
            - template_id
            - category
            - updated_by
            - updated_on
            - template_name
            - template_description
            - template_ref_no
            - status
            - username
            - category_name
            - status_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminTemplateGetbrandsPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                brand_description:
                  type: string
                brand_id:
                  format: int32
                  type: integer
                brand_name:
                  type: string
                created_by_role:
                  format: int32
                  type: integer
                status:
                  format: int32
                  type: integer
                subcategory_id:
                  format: int32
                  type: integer
                updated_by:
                  format: int32
                  type: integer
                updated_on:
                  type: string
              required:
              - brand_id
              - brand_name
              - brand_description
              - subcategory_id
              - updated_on
              - updated_by
              - created_by_role
              - status
              type: object
            - properties:
                brand_description: {}
                brand_id:
                  format: int32
                  type: integer
                brand_name:
                  type: string
                created_by_role:
                  format: int32
                  type: integer
                status:
                  format: int32
                  type: integer
                subcategory_id:
                  format: int32
                  type: integer
                updated_by:
                  format: int32
                  type: integer
                updated_on:
                  type: string
              required:
              - brand_id
              - brand_name
              - brand_description
              - subcategory_id
              - updated_on
              - updated_by
              - created_by_role
              - status
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminTemplateGetbycategoryPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              category:
                format: int32
                type: integer
              category_name:
                type: string
              item_description: {}
              item_name:
                type: string
              template_id:
                format: int32
                type: integer
              template_ref_no:
                type: string
              updated_by:
                format: int32
                type: integer
              updated_on:
                type: string
            required:
            - template_id
            - category
            - updated_by
            - updated_on
            - item_name
            - item_description
            - template_ref_no
            - category_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminTemplateGetbystorecategoryPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              category:
                format: int32
                type: integer
              category_name:
                type: string
              status:
                format: int32
                type: integer
              template_description:
                type: string
              template_id:
                format: int32
                type: integer
              template_name:
                type: string
              template_ref_no:
                type: string
              updated_by:
                format: int32
                type: integer
              updated_on:
                type: string
            required:
            - template_id
            - category
            - updated_by
            - updated_on
            - template_name
            - template_description
            - template_ref_no
            - status
            - category_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminTemplateGetcategoryPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              product_category_name:
                type: string
              template_id:
                format: int32
                type: integer
              template_item_id:
                format: int32
                type: integer
            required:
            - template_item_id
            - product_category_name
            - template_id
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminTemplateGetsubcategoryPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              product_category_id:
                format: int32
                type: integer
              product_subcategory_id:
                format: int32
                type: integer
              subcategory_name:
                type: string
            required:
            - product_subcategory_id
            - subcategory_name
            - product_category_id
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartAdminTemplateInactivePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartAdminUpdatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartSharedAdminparameterCheckparameterkeyPost200:
      properties:
        Error:
          properties:
            Business_Error:
              items:
                properties:
                  Code:
                    type: string
                  Message:
                    type: string
                required:
                - Code
                - Message
                type: object
              type: array
            Info:
              items: {}
              type: array
            System_Error:
              items: {}
              type: array
            Warning:
              items: {}
              type: array
          required:
          - Info
          - Business_Error
          - Warning
          - System_Error
          type: object
        code: {}
        data:
          items: {}
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedAdminparameterCreatePost200:
      properties:
        Error: {}
        code:
          type: string
        data:
          items: {}
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedAdminparameterGetalldataGet200:
      properties:
        Error: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                admn_parameters_id:
                  format: int32
                  type: integer
                parameter_desc: {}
                parameter_key:
                  type: string
                parameter_value:
                  type: string
              required:
              - admn_parameters_id
              - parameter_key
              - parameter_value
              - parameter_desc
              type: object
            - properties:
                admn_parameters_id:
                  format: int32
                  type: integer
                parameter_desc:
                  type: string
                parameter_key:
                  type: string
                parameter_value:
                  type: string
              required:
              - admn_parameters_id
              - parameter_key
              - parameter_value
              - parameter_desc
              type: object
            - properties:
                admn_parameters_id:
                  format: int32
                  type: integer
                parameter_desc: {}
                parameter_key:
                  type: string
                parameter_value:
                  type: string
              required:
              - admn_parameters_id
              - parameter_key
              - parameter_value
              - parameter_desc
              type: object
            - properties:
                admn_parameters_id:
                  format: int32
                  type: integer
                parameter_desc:
                  type: string
                parameter_key:
                  type: string
                parameter_value:
                  type: string
              required:
              - admn_parameters_id
              - parameter_key
              - parameter_value
              - parameter_desc
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedAdminparameterGetbyidPost200:
      properties:
        Error: {}
        code:
          type: string
        data:
          properties:
            parameter_desc: {}
            parameter_key:
              type: string
            parameter_value:
              type: string
          required:
          - parameter_key
          - parameter_value
          - parameter_desc
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedAdminparameterUpdatePost200:
      properties:
        Error: {}
        code:
          type: string
        data:
          items: {}
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedAppversionCreatePost200:
      properties:
        Error: {}
        code:
          type: string
        data: {}
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedAppversionReturnversioncodePost200:
      properties:
        Error: {}
        code:
          type: string
        data:
          properties:
            version_code:
              type: string
          required:
          - version_code
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedConversationsCreatePost200:
      properties:
        Error: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedConversationsDetailsPost200:
      properties:
        Error: {}
        code:
          type: string
        data:
          items:
            allOf:
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              type: object
            - properties:
                conversations_id:
                  format: int32
                  type: integer
                created_at:
                  type: string
                incident_id:
                  format: int32
                  type: integer
                message:
                  type: string
                order_id:
                  format: int32
                  type: integer
                sender_id:
                  format: int32
                  type: integer
                sender_role:
                  type: string
                sender_role_id:
                  format: int32
                  type: integer
                store_name:
                  type: string
              required:
              - conversations_id
              - order_id
              - incident_id
              - sender_id
              - sender_role_id
              - created_at
              - message
              - sender_role
              - store_name
              type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Error
      - data
      type: object
    schemaQubecartSharedDomainPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              domain_code:
                format: int32
                type: integer
              domain_data_type:
                type: string
              domain_id:
                format: int32
                type: integer
              domain_text:
                type: string
              domain_type:
                type: string
              domain_value:
                type: string
            required:
            - domain_id
            - domain_value
            - domain_code
            - domain_type
            - domain_text
            - domain_data_type
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartSharedErrorframeworkGet200:
      items:
        properties:
          error_code:
            type: string
          error_id:
            format: int32
            type: integer
          error_message:
            type: string
          level_of_severity:
            format: int32
            type: integer
        required:
        - error_id
        - error_code
        - error_message
        - level_of_severity
        type: object
      type: array
    schemaQubecartSharedGetCityGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              city_code:
                type: string
              city_id:
                format: int32
                type: integer
              city_name:
                type: string
            required:
            - city_id
            - city_code
            - city_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartSharedGetCitystatecountryGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            cities:
              items:
                properties:
                  city_code:
                    type: string
                  city_id:
                    format: int32
                    type: integer
                  city_name:
                    type: string
                required:
                - city_id
                - city_code
                - city_name
                type: object
              type: array
            countries:
              items:
                properties:
                  countries_code:
                    type: string
                  countries_id:
                    format: int32
                    type: integer
                  countries_name:
                    type: string
                required:
                - countries_id
                - countries_name
                - countries_code
                type: object
              type: array
            states:
              items:
                properties:
                  states_code:
                    type: string
                  states_id:
                    format: int32
                    type: integer
                  states_name:
                    type: string
                required:
                - states_id
                - states_code
                - states_name
                type: object
              type: array
          required:
          - countries
          - states
          - cities
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartSharedGetCountriesGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              countries_code:
                type: string
              countries_id:
                format: int32
                type: integer
              countries_name:
                type: string
            required:
            - countries_id
            - countries_name
            - countries_code
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartSharedGetStatesGet200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              states_code:
                type: string
              states_id:
                format: int32
                type: integer
              states_name:
                type: string
            required:
            - states_id
            - states_code
            - states_name
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartSharedGetfcmPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            create_date:
              type: string
            expiry_date: {}
            fcm_token:
              type: string
            fcm_user_id:
              format: int32
              type: integer
            fcm_user_type:
              format: int32
              type: integer
            make: {}
            model: {}
            notification_master_id:
              format: int32
              type: integer
          required:
          - notification_master_id
          - fcm_token
          - create_date
          - expiry_date
          - make
          - model
          - fcm_user_id
          - fcm_user_type
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartSharedGetunitsPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          items:
            properties:
              store_category:
                format: int32
                type: integer
              unit_id:
                format: int32
                type: integer
              unit_long:
                type: string
              unit_short:
                type: string
            required:
            - unit_id
            - store_category
            - unit_short
            - unit_long
            type: object
          type: array
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
    schemaQubecartSharedNotificationmasterCreatePost200:
      properties:
        Errors: {}
        code:
          type: string
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      type: object
    schemaQubecartSharedSendPushnotificationPost200:
      properties:
        Errors: {}
        code:
          type: string
        data:
          properties:
            canonical_ids:
              format: int32
              type: integer
            failure:
              format: int32
              type: integer
            multicast_ids:
              items:
                format: int32
                type: integer
              type: array
            results:
              items:
                properties:
                  message_id:
                    type: string
                required:
                - message_id
                type: object
              type: array
            success:
              format: int32
              type: integer
            topic_message_id: {}
          required:
          - multicast_ids
          - success
          - failure
          - canonical_ids
          - results
          - topic_message_id
          type: object
        exception:
          format: 'null'
          type: boolean
      required:
      - code
      - exception
      - Errors
      - data
      type: object
info:
  description: Qubecart-Admin-Services
  title: Qubecart-Admin-Services
  version: 1.0.0
openapi: 3.0.0
servers:
- url: https://execute-api.ap-south-1.amazonaws.com/{basePath}
  variables:
    basePath:
      default: /
paths:
  /qubecart/admin/commission/assignstore/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCommissionAssignstorePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Commission assign to store
      operationId: QubecartAdminCommissionAssignstorePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"commission_master_id\" : 1,\r\n    \"store_id\" :\
                \ 3\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"commission_master_id\" : 1,\r\n    \"store_id\" :\
                \ 3\r\n}"
              x-response-id: d23aa28f-ce3c-4ae8-b36a-b8314679f0f2
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminCommissionAssignstore:
                  $ref: '#/components/examples/exampleQubecartAdminCommissionAssignstorePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCommissionAssignstorePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/commission/assignstore/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/commission/assignstore/
  /qubecart/admin/commission/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCommissionCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminCommissionCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"commission_name\" : \"test\",\n    \"commission_description\"\
                \ : \"TEst commission\",\n    \"partner_income\" : 99,\n    \"commission_percentage\"\
                \ : 10\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"commission_name\" : \"test\",\n    \"commission_description\"\
                \ : \"TEst commission\",\n    \"partner_income\" : 99,\n    \"commission_percentage\"\
                \ : 10\n}"
              x-response-id: 3ba6ee44-c2da-405c-9ae6-db7ef9ffc81e
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminCommissionCreate:
                  $ref: '#/components/examples/exampleQubecartAdminCommissionCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCommissionCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/commission/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/commission/create/
  /qubecart/admin/commission/getall/:
    get:
      operationId: QubecartAdminCommissionGetallGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminCommissionGetall:
                  $ref: '#/components/examples/exampleQubecartAdminCommissionGetallGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCommissionGetallGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/commission/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/commission/getall/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCommissionGetallGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/admin/customer/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomerCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminCustomerCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"primary_login\" : \"9874319714\",\n    \"secondary_login\"\
                \ : \"\",\n    \"first_name\" : \"sourav\",\n    \"last_name\" : \"\
                mondal\",\n    \"addressline1\" : \"112/4\",\n    \"addressline2\"\
                \ : \"beleghata main road\",\n    \"city\": 39,\n    \"state\" : 1,\n\
                \    \"pin\" : \"700010\",\n    \"latitude\" : 22.562833,\n    \"\
                longitude\" : 88.396250,\n    \"landmark\" : \"near beleghata HPO\"\
                \n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"primary_login\" : \"9874319714\",\n    \"secondary_login\"\
                \ : \"sourav.mondal@msqube.com\",\n    \"first_name\" : \"sourav\"\
                ,\n    \"last_name\" : \"mondal\",\n    \"addressline1\" : \"112/4\"\
                ,\n    \"addressline2\" : \"beleghata main road\",\n    \"city\":\
                \ 39,\n    \"state\" : 1,\n    \"pin\" : \"700010\",\n    \"latitude\"\
                \ : 22.562833,\n    \"longitude\" : 88.396250,\n    \"landmark\" :\
                \ \"near beleghata HPO\"\n}"
              x-response-id: 99281b96-a75e-4d67-8f53-0c5460b956cd
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminCustomerCreate:
                  $ref: '#/components/examples/exampleQubecartAdminCustomerCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomerCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/customer/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/customer/create/
  /qubecart/admin/customer/details/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomerDetailsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Customer Details
      operationId: QubecartAdminCustomerDetailsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"customer_id\" : 22\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"customer_id\" : 22\r\n}"
              x-response-id: e155d4c0-0c4e-4065-9bb9-0aea6c2d07e3
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminCustomerDetails:
                  $ref: '#/components/examples/exampleQubecartAdminCustomerDetailsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomerDetailsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/customer/details/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/customer/details/
  /qubecart/admin/customer/getall/:
    get:
      description: Get all customer
      operationId: QubecartAdminCustomerGetallGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminCustomerGetall:
                  $ref: '#/components/examples/exampleQubecartAdminCustomerGetallGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomerGetallGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/customer/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/customer/getall/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomerGetallGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/admin/customeraddresses/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomeraddressesPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminCustomeraddressesPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"customer_id\" : 31\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"customer_id\" : 31\n}"
              x-response-id: 72d8e841-c46a-48eb-8992-1f0b462fd2b9
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminCustomeraddresses:
                  $ref: '#/components/examples/exampleQubecartAdminCustomeraddressesPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminCustomeraddressesPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/customeraddresses/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/customeraddresses/
  /qubecart/admin/getbyid/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminGetbyidPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Get admin details by id'
      operationId: QubecartAdminGetbyidPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"admn_user_id\" : 6\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"admn_user_id\" : 6\n}"
              x-response-id: d4868633-165b-4a81-8bcc-47959acaaf5f
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminGetbyid:
                  $ref: '#/components/examples/exampleQubecartAdminGetbyidPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminGetbyidPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/getbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/getbyid/
  /qubecart/admin/incidents/assignpartner/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsAssignpartnerPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Assign Partner
      operationId: QubecartAdminIncidentsAssignpartnerPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"incident_id\": 8,\r\n    \"order_id\": 149,\r\n \
                \   \"tasks\": [\r\n        {\r\n            \"qc_partner_id\": 24,\r\
                \n            \"task_description\": \"Please resolve the app problem\"\
                ,\r\n            \"task_flag\": 1,\r\n            \"task_name\": \"\
                Please resolve the app problem\"\r\n        }\r\n    ]\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"incident_id\": 8,\r\n    \"order_id\": 149,\r\n \
                \   \"tasks\": [\r\n        {\r\n            \"qc_partner_id\": 24,\r\
                \n            \"task_description\": \"Please resolve the app problem\"\
                ,\r\n            \"task_flag\": 1,\r\n            \"task_name\": \"\
                Please resolve the app problem\"\r\n        }\r\n    ]\r\n}"
              x-response-id: 70f5cd79-2065-4869-a3a1-ca58504871c9
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminIncidentsAssignpartner:
                  $ref: '#/components/examples/exampleQubecartAdminIncidentsAssignpartnerPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsAssignpartnerPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/incidents/assignpartner/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/incidents/assignpartner/
  /qubecart/admin/incidents/getall/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsGetallPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Incident Get All
      operationId: QubecartAdminIncidentsGetallPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"order_type\":null,\r\n    \"start_datetime\":null,\r\
                \n    \"end_datetime\":null,\r\n    \"past_flag\":null,\r\n    \"\
                partner_id\":28\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"order_type\":null,\r\n    \"start_datetime\":null,\r\
                \n    \"end_datetime\":null,\r\n    \"past_flag\":null,\r\n    \"\
                partner_id\":28\r\n}"
              x-response-id: 58c1b9e6-3930-4fb0-a746-281cd9e601eb
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminIncidentsGetall:
                  $ref: '#/components/examples/exampleQubecartAdminIncidentsGetallPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsGetallPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/incidents/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/incidents/getall/
  /qubecart/admin/incidents/getbyid/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsGetbyidPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Incident Detail
      operationId: QubecartAdminIncidentsGetbyidPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"incident_id\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"incident_id\" : 1\r\n}"
              x-response-id: 8c84808e-b2db-4999-a683-5aefe888bc6c
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminIncidentsGetbyid:
                  $ref: '#/components/examples/exampleQubecartAdminIncidentsGetbyidPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsGetbyidPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/incidents/getbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/incidents/getbyid/
  /qubecart/admin/incidents/getnextstatus/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsGetnextstatusPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Incident Transaction Status
      operationId: QubecartAdminIncidentsGetnextstatusPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"incident_id\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"incident_id\" : 1\r\n}"
              x-response-id: a57fc0c8-1866-441e-9c96-b1836ee516b7
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminIncidentsGetnextstatus:
                  $ref: '#/components/examples/exampleQubecartAdminIncidentsGetnextstatusPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsGetnextstatusPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/incidents/getnextstatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/incidents/getnextstatus/
  /qubecart/admin/incidents/updatestatus/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsUpdatestatusPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Incident Update Status By Admin
      operationId: QubecartAdminIncidentsUpdatestatusPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"incident_id\" : 1,\r\n    \"next_status\" : 5,\r\n\
                \    \"comment\" : \"Good\",\r\n    \"sender_role\" : 1,\r\n    \"\
                sender_id\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"incident_id\" : 1,\r\n    \"next_status\" : 5,\r\n\
                \    \"comment\" : \"Good\",\r\n    \"sender_role\" : 1,\r\n    \"\
                sender_id\" : 1\r\n}"
              x-response-id: 50e5aac2-339b-4f88-86d4-6e76e64003a9
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminIncidentsUpdatestatus:
                  $ref: '#/components/examples/exampleQubecartAdminIncidentsUpdatestatusPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminIncidentsUpdatestatusPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/incidents/updatestatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/incidents/updatestatus/
  /qubecart/admin/login/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminLoginPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Admin login API'
      operationId: QubecartAdminLoginPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"username\" : \"sourav\",\n    \"password\" : \"1234\"\
                \n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"username\" : \"sourav\",\n    \"password\" : \"1234\"\
                \n}"
              x-response-id: 0118abb0-0869-4ac0-8b0e-e4e3bfceecbd
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminLogin:
                  $ref: '#/components/examples/exampleQubecartAdminLoginPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminLoginPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/login/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/login/
  /qubecart/admin/order/assignbag/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderAssignbagPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminOrderAssignbagPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"bag_id\" : 48,\n    \"admn_user_id\" : 10,\n    \"\
                eta\" : 2.0\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"bag_id\" : 48,\n    \"admn_user_id\" : 10,\n    \"\
                eta\" : 2.0\n}"
              x-response-id: 684dc11b-a0f4-4336-9dc0-afdaa1872867
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderAssignbag:
                  $ref: '#/components/examples/exampleQubecartAdminOrderAssignbagPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderAssignbagPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/assignbag/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/assignbag/
  /qubecart/admin/order/bagaction/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderBagactionPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Get Upcoming bag action
      operationId: QubecartAdminOrderBagactionPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"bag_id\" : 67\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"bag_id\" : 67\r\n}"
              x-response-id: 99912211-5082-4291-b795-ceb2f8a64835
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderBagaction:
                  $ref: '#/components/examples/exampleQubecartAdminOrderBagactionPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderBagactionPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/bagaction/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/bagaction/
  /qubecart/admin/order/bagdetails/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderBagdetailsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminOrderBagdetailsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"bag_id\" : 41\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"bag_id\" : 41\n}"
              x-response-id: f7dd52f4-c843-454e-b11d-d62a138e022d
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderBagdetails:
                  $ref: '#/components/examples/exampleQubecartAdminOrderBagdetailsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderBagdetailsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/bagdetails/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/bagdetails/
  /qubecart/admin/order/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminOrderCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"order_ref_no\" : \"QCO_1234\",\n    \"billing_address_id\"\
                \ : 103,\n    \"customer_id\" : 31,\n    \"store_id\" : 68,\n    \"\
                product_id\" : 1374,\n    \"price\" : 69,\n    \"student_name\" :\
                \ \"XXX\",\n    \"student_class\" : \"XXX\",\n    \"student_section\"\
                \ : \"XXX\",\n    \"student_roll\" : \"000\"\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"order_ref_no\" : \"QCO_1234\",\n    \"billing_address_id\"\
                \ : 103,\n    \"customer_id\" : 31,\n    \"store_id\" : 68,\n    \"\
                product_id\" : 1374,\n    \"price\" : 69,\n    \"student_name\" :\
                \ \"XXX\",\n    \"student_class\" : \"XXX\",\n    \"student_section\"\
                \ : \"XXX\",\n    \"student_roll\" : \"000\"\n}"
              x-response-id: 1bac436c-f0e7-4b34-9648-71764aefb159
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderCreate:
                  $ref: '#/components/examples/exampleQubecartAdminOrderCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/create/
  /qubecart/admin/order/details/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderDetailsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Returns order details and bags associated with order'
      operationId: QubecartAdminOrderDetailsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"order_id\" : 35\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"order_id\" : 35\n}"
              x-response-id: 1635fbcf-f8af-4241-b3f0-45ecfa980d16
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderDetails:
                  $ref: '#/components/examples/exampleQubecartAdminOrderDetailsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderDetailsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/details/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/details/
  /qubecart/admin/order/details/external/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderDetailsExternalPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Order Details for external page
      operationId: QubecartAdminOrderDetailsExternalPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"order_id\": 264\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"order_id\": 264\n}"
              x-response-id: aa4bc7fe-db47-4183-a167-7890484d3954
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderDetailsExternal:
                  $ref: '#/components/examples/exampleQubecartAdminOrderDetailsExternalPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderDetailsExternalPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/details/external/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/details/external/
  /qubecart/admin/order/getall/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderGetallPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '* status_filter is optional, if it''s not present in the request
        body API will return all orders

        * possible values for status_filter canbe found from domain lookup API where
        domain_type order status

        * if status_filter is present in request body response will be filtered'
      operationId: QubecartAdminOrderGetallPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"status_filter\" : 1\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"status_filter\" : 1\n}"
              x-response-id: 1f4808b0-920f-48c6-844b-934cb9a8e5de
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderGetall:
                  $ref: '#/components/examples/exampleQubecartAdminOrderGetallPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderGetallPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/getall/
  /qubecart/admin/order/paytopartner/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderPaytopartnerPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Pay to partner by admin
      operationId: QubecartAdminOrderPaytopartnerPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"data\" : [65,67]\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"data\" : [65,67]\r\n}"
              x-response-id: 8bfd376b-d56b-4bf3-ab18-6e39c78379c1
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderPaytopartner:
                  $ref: '#/components/examples/exampleQubecartAdminOrderPaytopartnerPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderPaytopartnerPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/paytopartner/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/paytopartner/
  /qubecart/admin/order/updatebagstatus/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderUpdatebagstatusPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Update order bag status
      operationId: QubecartAdminOrderUpdatebagstatusPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"bag_id\" : 38,\r\n    \"bag_status\":2 \r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"bag_id\" : 38,\r\n    \"bag_status\":2 \r\n}"
              x-response-id: 023e345f-f66b-4a44-859c-dfea2ac2b9cb
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderUpdatebagstatus:
                  $ref: '#/components/examples/exampleQubecartAdminOrderUpdatebagstatusPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderUpdatebagstatusPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/updatebagstatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/updatebagstatus/
  /qubecart/admin/order/updatepayment/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderUpdatepaymentPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminOrderUpdatepaymentPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"order_id\" : 59\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"order_id\" : 59\n}"
              x-response-id: db44bc39-8872-42b5-850a-7bdb2ce82e80
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderUpdatepayment:
                  $ref: '#/components/examples/exampleQubecartAdminOrderUpdatepaymentPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderUpdatepaymentPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/updatepayment/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/updatepayment/
  /qubecart/admin/order/updatestatus/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderUpdatestatusPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminOrderUpdatestatusPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"order_id\" : 58,\n    \"order_status\" : 3\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"order_id\" : 58,\n    \"order_status\" : 3\n}"
              x-response-id: 00f79ffd-ceea-4585-bd82-66527524ab38
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminOrderUpdatestatus:
                  $ref: '#/components/examples/exampleQubecartAdminOrderUpdatestatusPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminOrderUpdatestatusPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/order/updatestatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/order/updatestatus/
  /qubecart/admin/partner/addbankdetail/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerAddbankdetailPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Add bank detail
      operationId: QubecartAdminPartnerAddbankdetailPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"qc_partner_id\": 30,\r\n    \"account_holder_name\"\
                : \"HARANATH\",\r\n    \"account_no\": \"122344567\",\r\n    \"ifsc_code\"\
                : \"IFSC_SBINO1448\",\r\n    \"bank_name\": \"SBI\"\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"qc_partner_id\": 30,\r\n    \"account_holder_name\"\
                : \"HARANATH\",\r\n    \"account_no\": \"122344567\",\r\n    \"ifsc_code\"\
                : \"IFSC_SBINO1448\",\r\n    \"bank_name\": \"SBI\"\r\n}"
              x-response-id: 10a569e8-3bfb-4c2d-bf60-1add2c5aa021
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPartnerAddbankdetail:
                  $ref: '#/components/examples/exampleQubecartAdminPartnerAddbankdetailPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerAddbankdetailPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/partner/addbankdetail/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/partner/addbankdetail/
  /qubecart/admin/partner/approve/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerApprovePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Approve a requested partner'
      operationId: QubecartAdminPartnerApprovePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"qc_partner_id\" : 10,\n    \"approve_flag\" : true\n\
                }"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"qc_partner_id\" : 10,\n    \"approve_flag\" : true\n\
                }"
              x-response-id: 28308fe8-5a1a-46d0-92ab-ae43a0645171
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPartnerApprove:
                  $ref: '#/components/examples/exampleQubecartAdminPartnerApprovePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerApprovePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/partner/approve/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/partner/approve/
  /qubecart/admin/partner/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Partner on boarding API'
      operationId: QubecartAdminPartnerCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"partner_type\" : 1,\n    \"partner_code\" : \"DUMMYCODE\"\
                ,\n    \"partner_name\" : \"DUMMY NAME\",\n    \"username\" : \"dummyuser\"\
                ,\n    \"password\" : \"12345\",\n    \"partner_category\" : 1,\n\
                \    \"company_name\" : \"SHOP FOR DUMMIES\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"contact_person\" : \"sourav\",\n    \"\
                billing_name\" : \"DUMMY SHOP\",\n    \"gst_numbers\" : \"qwer1234567890\"\
                ,\n    \"pan\" : \"123qwer45\",\n    \"contact_email\" : \"sourav.mondal@msqube.com\"\
                ,\n    \"contact_person_designation\" : \"Owner\",\n    \"partner_bank_id\"\
                \ : \"1234569870\",\n    \"addressline1\" : \"112/4\",\n    \"addressline2\"\
                \ : \"beleghata main road kolkata\",\n    \"state_id\" : 1,\n    \"\
                country_id\" : 1,\n    \"pin\" : \"700010\",\n    \"city_id\" : 1\n\
                }"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"partner_type\" : 1,\n    \"partner_code\" : \"DUMMYCODE\"\
                ,\n    \"partner_name\" : \"DUMMY NAME\",\n    \"username\" : \"dummyuser\"\
                ,\n    \"password\" : \"12345\",\n    \"partner_category\" : 1,\n\
                \    \"company_name\" : \"SHOP FOR DUMMIES\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"contact_person\" : \"sourav\",\n    \"\
                billing_name\" : \"DUMMY SHOP\",\n    \"gst_numbers\" : \"qwer1234567890\"\
                ,\n    \"pan\" : \"123qwer45\",\n    \"contact_email\" : \"sourav.mondal@msqube.com\"\
                ,\n    \"contact_person_designation\" : \"Owner\",\n    \"partner_bank_id\"\
                \ : \"1234569870\",\n    \"addressline1\" : \"112/4\",\n    \"addressline2\"\
                \ : \"beleghata main road kolkata\",\n    \"state_id\" : 1,\n    \"\
                country_id\" : 1,\n    \"pin\" : \"700010\",\n    \"city_id\" : 1\n\
                }"
              x-response-id: 9fd88849-7f55-4f4d-87a0-b072602112f2
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPartnerCreate:
                  $ref: '#/components/examples/exampleQubecartAdminPartnerCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/partner/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/partner/create/
  /qubecart/admin/partner/detailsbyid/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerDetailsbyidPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Get partner details by id'
      operationId: QubecartAdminPartnerDetailsbyidPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"qc_partner_id\" : 10\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"qc_partner_id\" : 10\n}"
              x-response-id: 6a64bb0f-65a3-4cdb-a916-fb49fabe205f
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPartnerDetailsbyid:
                  $ref: '#/components/examples/exampleQubecartAdminPartnerDetailsbyidPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerDetailsbyidPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/partner/detailsbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/partner/detailsbyid/
  /qubecart/admin/partner/getall/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerGetallPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Get all partners (requested)'
      operationId: QubecartAdminPartnerGetallPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"requested\" : false\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"requested\" : false\n}"
              x-response-id: 286916f5-c39b-40b6-84fd-c85ea7a62cc4
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPartnerGetall:
                  $ref: '#/components/examples/exampleQubecartAdminPartnerGetallPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPartnerGetallPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/partner/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/partner/getall/
  /qubecart/admin/personnel/approve/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelApprovePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '* approve_flag -> true | approve delivery person

        * approve_flag -> false | opposite'
      operationId: QubecartAdminPersonnelApprovePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"admn_user_id\" : 8,\n    \"approve_flag\" : true\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"admn_user_id\" : 8,\n    \"approve_flag\" : true\n}"
              x-response-id: 5b349f7f-0017-4f69-97a3-0161653cfc01
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPersonnelApprove:
                  $ref: '#/components/examples/exampleQubecartAdminPersonnelApprovePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelApprovePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/personnel/approve/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/personnel/approve/
  /qubecart/admin/personnel/getall/:
    get:
      operationId: QubecartAdminPersonnelGetallGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPersonnelGetall:
                  $ref: '#/components/examples/exampleQubecartAdminPersonnelGetallGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelGetallGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/personnel/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/personnel/getall/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelGetallGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/admin/personnel/getbyregion/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelGetbyregionPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Personel get by region
      operationId: QubecartAdminPersonnelGetbyregionPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"region_id\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"region_id\" : 1\r\n}"
              x-response-id: f7f99b8b-30eb-4189-9947-9f29b7eb1541
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPersonnelGetbyregion:
                  $ref: '#/components/examples/exampleQubecartAdminPersonnelGetbyregionPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelGetbyregionPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/personnel/getbyregion/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/personnel/getbyregion/
  /qubecart/admin/personnel/getdetail/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelGetdetailPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminPersonnelGetdetailPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"admn_user_id\" : 8\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"admn_user_id\" : 8\n}"
              x-response-id: 82f87b4f-838e-4c80-8b03-646556cb15b8
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminPersonnelGetdetail:
                  $ref: '#/components/examples/exampleQubecartAdminPersonnelGetdetailPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminPersonnelGetdetailPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/personnel/getdetail/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/personnel/getdetail/
  /qubecart/admin/problemcodes/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Problem Code Create
      operationId: QubecartAdminProblemcodesCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"problem_description\" : \"Problem\",\r\n    \"problem_code\"\
                \ : \"101\",\r\n    \"problem_severity\" : 1,\r\n    \"store_category\"\
                \ : 1,\r\n    \"admn_user_id\" : 6\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"problem_description\" : \"Problem\",\r\n    \"problem_code\"\
                \ : \"101\",\r\n    \"problem_severity\" : 1,\r\n    \"store_category\"\
                \ : 1,\r\n    \"admn_user_id\" : 6\r\n}"
              x-response-id: 78debea1-61af-4103-80e2-183a393e3751
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminProblemcodesCreate:
                  $ref: '#/components/examples/exampleQubecartAdminProblemcodesCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/problemcodes/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/problemcodes/create/
  /qubecart/admin/problemcodes/getall/:
    get:
      description: 'Get All Problem Code '
      operationId: QubecartAdminProblemcodesGetallGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminProblemcodesGetall:
                  $ref: '#/components/examples/exampleQubecartAdminProblemcodesGetallGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesGetallGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/problemcodes/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/problemcodes/getall/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesGetallGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/admin/problemcodes/getbyid/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesGetbyidPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Get problem details by problem code id
      operationId: QubecartAdminProblemcodesGetbyidPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"problems_codes_id\" : 11\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"problems_codes_id\" : 11\r\n}"
              x-response-id: 7c1edd3b-89e3-4d33-9f53-1658d02f9631
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminProblemcodesGetbyid:
                  $ref: '#/components/examples/exampleQubecartAdminProblemcodesGetbyidPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesGetbyidPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/problemcodes/getbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/problemcodes/getbyid/
  /qubecart/admin/problemcodes/update/statusbyid/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesUpdateStatusbyidPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Update problem code status
      operationId: QubecartAdminProblemcodesUpdateStatusbyidPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"problem_codes_id\" : 11,\r\n    \"pc_status\" : 1\r\
                \n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"problem_codes_id\" : 11,\r\n    \"pc_status\" : 1\r\
                \n}"
              x-response-id: 3bb30669-58bb-4a65-8573-e776cfccd116
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminProblemcodesUpdateStatusbyid:
                  $ref: '#/components/examples/exampleQubecartAdminProblemcodesUpdateStatusbyidPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesUpdateStatusbyidPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/problemcodes/update/statusbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/problemcodes/update/statusbyid/
  /qubecart/admin/problemcodes/updatebyid/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesUpdatebyidPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Update problem codes
      operationId: QubecartAdminProblemcodesUpdatebyidPost
      requestBody:
        content:
          '*/*':
            example:
              value: " {\r\n        \"problem_codes_id\" : 11,\r\n        \"problem_code\"\
                : \"6\",\r\n        \"display_description\": \"Item amount does not\
                \ match with total amount\",\r\n        \"updated_on\": \"2020-12-01T12:44:41\"\
                ,\r\n        \"updated_by\": 6,\r\n        \"store_category\": null,\r\
                \n        \"severity\": 2,\r\n        \"status\": 1\r\n    }"
            schema:
              type: string
            x-link-response:
            - value: " {\r\n        \"problem_codes_id\" : 11,\r\n        \"problem_code\"\
                : \"6\",\r\n        \"display_description\": \"Item amount does not\
                \ match with total amount\",\r\n        \"updated_on\": \"2020-12-01T12:44:41\"\
                ,\r\n        \"updated_by\": 6,\r\n        \"store_category\": null,\r\
                \n        \"severity\": 2,\r\n        \"status\": 1\r\n    }"
              x-response-id: 1d3b46d4-5770-4bf6-b3a9-1bffaf59f417
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminProblemcodesUpdatebyid:
                  $ref: '#/components/examples/exampleQubecartAdminProblemcodesUpdatebyidPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminProblemcodesUpdatebyidPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/problemcodes/updatebyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/problemcodes/updatebyid/
  /qubecart/admin/region/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminRegionCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminRegionCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"region_code\" : \"QCR002\",\n    \"region_name\" :\
                \ \"CHINAR PARK\",\n    \"country_id\" : 1,\n    \"state_id\" : 1,\n\
                \    \"city_id\" : 1,\n    \"region_phone_no\" : \"9999999999\",\n\
                \    \"admn_user_id\" : 6\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"region_code\" : \"QCR002\",\n    \"region_name\" :\
                \ \"CHINAR PARK\",\n    \"country_id\" : 1,\n    \"state_id\" : 1,\n\
                \    \"city_id\" : 1,\n    \"region_phone_no\" : \"9999999999\",\n\
                \    \"admn_user_id\" : 6\n}"
              x-response-id: bfed71ee-ae3d-4103-bcd3-ad8447222116
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminRegionCreate:
                  $ref: '#/components/examples/exampleQubecartAdminRegionCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminRegionCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/region/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/region/create/
  /qubecart/admin/region/getall/:
    get:
      operationId: QubecartAdminRegionGetallGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminRegionGetall:
                  $ref: '#/components/examples/exampleQubecartAdminRegionGetallGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminRegionGetallGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/region/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/region/getall/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminRegionGetallGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/admin/sendsms/order/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminSendsmsOrderPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminSendsmsOrderPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"store_link\" : \"https://google.com/\",\n    \"customer_id\"\
                \ : 42\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"store_link\" : \"https://google.com/\",\n    \"customer_id\"\
                \ : 42\n}"
              x-response-id: 1309f1a9-fe20-47b4-b360-650a500e49b1
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminSendsmsOrder:
                  $ref: '#/components/examples/exampleQubecartAdminSendsmsOrderPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminSendsmsOrderPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/sendsms/order/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/sendsms/order/
  /qubecart/admin/store/addregion/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreAddregionPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminStoreAddregionPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2\n}"
              x-response-id: 9d91e30a-ddca-4314-b693-64fb159cefa1
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminStoreAddregion:
                  $ref: '#/components/examples/exampleQubecartAdminStoreAddregionPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreAddregionPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/store/addregion/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/store/addregion/
  /qubecart/admin/store/changestatus/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreChangestatusPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Change store status
      operationId: QubecartAdminStoreChangestatusPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"store_id\" : 43,\r\n    \"status\" : 4\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"store_id\" : 43,\r\n    \"status\" : 4\r\n}"
              x-response-id: c7cb371b-cbc1-4de5-8e62-64800154eda0
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminStoreChangestatus:
                  $ref: '#/components/examples/exampleQubecartAdminStoreChangestatusPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreChangestatusPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/store/changestatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/store/changestatus/
  /qubecart/admin/store/commissionhistory/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreCommissionhistoryPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminStoreCommissionhistoryPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"store_id\" : 16\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"store_id\" : 16\n}"
              x-response-id: d1750b23-c23f-4c7d-9e70-b4daa53f2867
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminStoreCommissionhistory:
                  $ref: '#/components/examples/exampleQubecartAdminStoreCommissionhistoryPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreCommissionhistoryPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/store/commissionhistory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/store/commissionhistory/
  /qubecart/admin/store/getdetails/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreGetdetailsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Get store detail
      operationId: QubecartAdminStoreGetdetailsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"store_id\" : 3\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"store_id\" : 3\r\n}"
              x-response-id: 43307ffe-678a-421e-901d-a48b3cd43b52
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminStoreGetdetails:
                  $ref: '#/components/examples/exampleQubecartAdminStoreGetdetailsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreGetdetailsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/store/getdetails/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/store/getdetails/
  /qubecart/admin/store/list/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreListPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '* partner_id is optional, if not present list will contain all
        stores, if present list will contain store of given partner '
      operationId: QubecartAdminStoreListPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"partner_id\" : 24\n}"
            schema:
              type: string
            x-link-response: []
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminStoreList:
                  $ref: '#/components/examples/exampleQubecartAdminStoreListPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreListPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/store/list/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/store/list/
  /qubecart/admin/store/orderlist/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreOrderlistPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '* start_date and end_date are option, if provided result will
        contain only order in between start and end date. Otherwise result will contain
        all orders'
      operationId: QubecartAdminStoreOrderlistPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"store_id\" : 26\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"store_id\" : 26\n}"
              x-response-id: b8ff953d-12ca-4df0-bfcc-576f4456f1fd
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminStoreOrderlist:
                  $ref: '#/components/examples/exampleQubecartAdminStoreOrderlistPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreOrderlistPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/store/orderlist/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/store/orderlist/
  /qubecart/admin/store/updatestatus/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreUpdatestatusPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '* when store status 1/ requested possible action type 2 / active
        or 3 reject

        * region_id is optional but we have let admin set a region to a store'
      operationId: QubecartAdminStoreUpdatestatusPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2,\n    \"action_type\"\
                \ : 2\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2,\n    \"action_type\"\
                \ : 2\n}"
              x-response-id: 0f7da9c8-0fb7-49fe-a7e1-09f8731f31ef
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminStoreUpdatestatus:
                  $ref: '#/components/examples/exampleQubecartAdminStoreUpdatestatusPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminStoreUpdatestatusPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/store/updatestatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/store/updatestatus/
  /qubecart/admin/template/addbrands/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateAddbrandsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Adds brands for subcategory'
      operationId: QubecartAdminTemplateAddbrandsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"subcategory_id\" : 2,\n    \"loggedin_user\" : 6,\n\
                \    \"brands\" : [{\"name\" : \"Wrangler\"}, {\"name\" : \"Peter\
                \ England\"}]\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"subcategory_id\" : 2,\n    \"loggedin_user\" : 6,\n\
                \    \"brands\" : [{\"name\" : \"Wrangler\"}, {\"name\" : \"Peter\
                \ England\"}]\n}"
              x-response-id: 5f17e6d1-d1f9-485e-a9ab-40a14d2a7b5b
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateAddbrands:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateAddbrandsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateAddbrandsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/addbrands/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/addbrands/
  /qubecart/admin/template/checkduplicate/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCheckduplicatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Checks duplicate item in template'
      operationId: QubecartAdminTemplateCheckduplicatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"template_name\" : \"Temp_g_002\"\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"template_name\" : \"Temp_g_002\"\n}"
              x-response-id: 91191ceb-736a-4e82-abc0-eec7e56fa56c
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateCheckduplicate:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateCheckduplicatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCheckduplicatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/checkduplicate/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/checkduplicate/
  /qubecart/admin/template/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminTemplateCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{   \n    \"admn_user_id\" : 6,\n    \"category\" : 1,\n   \
                \ \"template_name\" : \"Men's Fashion\",\n    \"items\" : [{\"name\"\
                \ : \"Top wear\"}, {\"name\" : \"Bottom wear\"}]\n}"
            schema:
              type: string
            x-link-response:
            - value: "{   \n    \"admn_user_id\" : 6,\n    \"category\" : 2,\n   \
                \ \"items\" : [\"T-shirt\", \"Shirt\"]\n}"
              x-response-id: 740e6234-bced-40c5-85cc-e326d459eec5
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateCreate:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/create/
  /qubecart/admin/template/createcategory/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCreatecategoryPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminTemplateCreatecategoryPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"template_id\" : 51,\n    \"items\" : [{\"name\" : \"\
                Special\"}]\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"template_id\" : 51,\n    \"items\" : [{\"name\" : \"\
                Special\"}]\n}"
              x-response-id: 0255a22e-c338-4c8d-b6b9-4010f35bf068
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateCreatecategory:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateCreatecategoryPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCreatecategoryPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/createcategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/createcategory/
  /qubecart/admin/template/createsubcategory/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCreatesubcategoryPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Creates a subcategory of a given template and adds brands to
        it'
      operationId: QubecartAdminTemplateCreatesubcategoryPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"template_item_id\" : 13,\n    \"subcategory_name\"\
                \ : \"T-shirt\",\n    \"brands\" : [{\"name\" : \"Lee\", \"description\"\
                \ : \"\"}, {\"name\" : \"Levi's\", \"description\" : \"\"}],\n   \
                \ \"admn_user_id\" : 6\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"template_item_id\" : 13,\n    \"subcategory_name\"\
                \ : \"T-shirt\",\n    \"brands\" : [{\"name\" : \"Lee\", \"description\"\
                \ : \"\"}, {\"name\" : \"Levi's\", \"description\" : \"\"}],\n   \
                \ \"admn_user_id\" : 6\n}"
              x-response-id: 82edb9a6-f7b2-47f1-b63f-68824b9fe3ef
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateCreatesubcategory:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateCreatesubcategoryPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateCreatesubcategoryPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/createsubcategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/createsubcategory/
  /qubecart/admin/template/deleteitem/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateDeleteitemPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Delete item from admin template '
      operationId: QubecartAdminTemplateDeleteitemPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"template_id\" : 15\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"template_id\" : 15\n}"
              x-response-id: deafa761-0383-41d4-b053-fa97ca28f93f
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateDeleteitem:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateDeleteitemPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateDeleteitemPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/deleteitem/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/deleteitem/
  /qubecart/admin/template/getall/:
    get:
      description: Get all template
      operationId: QubecartAdminTemplateGetallGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateGetall:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateGetallGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetallGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/getall/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetallGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/admin/template/getbrands/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetbrandsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Get brands by subcategory

        ### Here qc_partner_id is optional, if given the result will also include
        brands specified by the partner for the given subcategory'
      operationId: QubecartAdminTemplateGetbrandsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"subcategory_id\" : 28,\n    \"qc_partner_id\" : 24\n\
                }"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"subcategory_id\" : 28,\n    \"qc_partner_id\" : 24\n\
                }"
              x-response-id: b11bdc50-1c92-4bf8-90a9-edafc09a7181
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateGetbrands:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateGetbrandsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetbrandsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/getbrands/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/getbrands/
  /qubecart/admin/template/getbycategory/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetbycategoryPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminTemplateGetbycategoryPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"category\" : 1\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"category\" : 1\n}"
              x-response-id: d14635ad-3bc7-4092-9171-5b3f42e2b6e0
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateGetbycategory:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateGetbycategoryPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetbycategoryPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/getbycategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/getbycategory/
  /qubecart/admin/template/getbystorecategory/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetbystorecategoryPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Template by store category
      operationId: QubecartAdminTemplateGetbystorecategoryPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"category\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"category\" : 1\r\n}"
              x-response-id: eb22a12b-d34a-444a-b7cd-62aacac21270
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateGetbystorecategory:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateGetbystorecategoryPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetbystorecategoryPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/getbystorecategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/getbystorecategory/
  /qubecart/admin/template/getcategory/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetcategoryPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Returns a list of product category by template id'
      operationId: QubecartAdminTemplateGetcategoryPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"template_id\" : 29\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"template_id\" : 29\n}"
              x-response-id: e7e054a0-59f2-4c47-826f-4069f5ebfe9d
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateGetcategory:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateGetcategoryPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetcategoryPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/getcategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/getcategory/
  /qubecart/admin/template/getsubcategory/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetsubcategoryPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Get subcategory by template'
      operationId: QubecartAdminTemplateGetsubcategoryPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"template_item_id\" : 13\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"template_item_id\" : 10\n}"
              x-response-id: 0bcff480-74f2-42fa-9081-f3dfea6b82d4
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateGetsubcategory:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateGetsubcategoryPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateGetsubcategoryPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/getsubcategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/getsubcategory/
  /qubecart/admin/template/inactive/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateInactivePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      operationId: QubecartAdminTemplateInactivePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"admn_user_id\" : 6,\n    \"template_id\" : 39,\n  \
                \  \"inactive_flag\" : true \n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"admn_user_id\" : 6,\n    \"template_id\" : 39,\n  \
                \  \"inactive_flag\" : true \n}"
              x-response-id: 12582187-d791-4e69-82b4-fcc0091135eb
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminTemplateInactive:
                  $ref: '#/components/examples/exampleQubecartAdminTemplateInactivePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminTemplateInactivePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/template/inactive/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/template/inactive/
  /qubecart/admin/update/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminUpdatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Update admin details'
      operationId: QubecartAdminUpdatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"admn_user_id\" : 6,\n    \"password\" : \"1234\",\n\
                \    \"firstname\" : \"msqube\",\n    \"lastname\" : \"Technologies\"\
                ,\n    \"email_id\" : \"contact@msqube.com\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"addressline1\" : \"pinnacle tower\",\n\
                \    \"addressline2\" : \"chinar park\",\n    \"state_id\" : 1,\n\
                \    \"country_id\" : 1,\n    \"pin\" : \"700135\",\n    \"city_id\"\
                \ : 1\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"admn_user_id\" : 6,\n    \"password\" : \"1234\",\n\
                \    \"firstname\" : \"msqube\",\n    \"lastname\" : \"Technologies\"\
                ,\n    \"email_id\" : \"contact@msqube.com\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"addressline1\" : \"pinnacle tower\",\n\
                \    \"addressline2\" : \"chinar park\",\n    \"state_id\" : 1,\n\
                \    \"country_id\" : 1,\n    \"pin\" : \"700135\",\n    \"city_id\"\
                \ : 1\n}"
              x-response-id: 0cb42661-61e4-4f29-901b-5e23b31a876d
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartAdminUpdate:
                  $ref: '#/components/examples/exampleQubecartAdminUpdatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartAdminUpdatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/admin/update/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/admin/update/
  /qubecart/shared/adminparameter/checkparameterkey/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterCheckparameterkeyPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Check Duplicate Parameter Key
      operationId: QubecartSharedAdminparameterCheckparameterkeyPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"parameter_key\" : \"Test_key\"\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"parameter_key\" : \"Test_key\"\r\n}"
              x-response-id: f7c332e5-244e-4ef5-8c87-5dfc78ada11b
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedAdminparameterCheckparameterkey:
                  $ref: '#/components/examples/exampleQubecartSharedAdminparameterCheckparameterkeyPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterCheckparameterkeyPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/adminparameter/checkparameterkey/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/adminparameter/checkparameterkey/
  /qubecart/shared/adminparameter/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Admin Parameter Create
      operationId: QubecartSharedAdminparameterCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n \"parameter_key\": \"Test_Key\",\r\n        \"parameter_value\"\
                : \"Test_value\"  \r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n \"parameter_key\": \"Test_Key\",\r\n        \"parameter_value\"\
                : \"Test_value\"  \r\n}"
              x-response-id: 22c50c35-2a52-4971-9c59-2fdb47eafa93
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedAdminparameterCreate:
                  $ref: '#/components/examples/exampleQubecartSharedAdminparameterCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/adminparameter/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/adminparameter/create/
  /qubecart/shared/adminparameter/getalldata/:
    get:
      description: Get All Parameter Data
      operationId: QubecartSharedAdminparameterGetalldataGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedAdminparameterGetalldata:
                  $ref: '#/components/examples/exampleQubecartSharedAdminparameterGetalldataGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterGetalldataGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/adminparameter/getalldata/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/adminparameter/getalldata/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterGetalldataGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/shared/adminparameter/getbyid/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterGetbyidPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Get Parameter Detail By Parameter Id
      operationId: QubecartSharedAdminparameterGetbyidPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"admn_parameters_id\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"admn_parameters_id\" : 1\r\n}"
              x-response-id: 5f4d87ec-6ee9-4ff3-9e51-487cfaa83365
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedAdminparameterGetbyid:
                  $ref: '#/components/examples/exampleQubecartSharedAdminparameterGetbyidPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterGetbyidPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/adminparameter/getbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/adminparameter/getbyid/
  /qubecart/shared/adminparameter/update/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterUpdatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Update Parameter
      operationId: QubecartSharedAdminparameterUpdatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n        \"admn_parameters_id\" : 32,\r\n        \"parameter_key\"\
                : \"Test\",\r\n        \"parameter_value\": \"Test_value\",\r\n  \
                \      \"parameter_desc\": null\r\n    }"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n        \"admn_parameters_id\" : 32,\r\n        \"parameter_key\"\
                : \"Test\",\r\n        \"parameter_value\": \"Test_value\",\r\n  \
                \      \"parameter_desc\": null\r\n    }"
              x-response-id: 62badf76-48a3-4a0e-b3ab-64fe79c5e5fc
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedAdminparameterUpdate:
                  $ref: '#/components/examples/exampleQubecartSharedAdminparameterUpdatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAdminparameterUpdatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/adminparameter/update/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/adminparameter/update/
  /qubecart/shared/appversion/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAppversionCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: App version Create
      operationId: QubecartSharedAppversionCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"version_code\" : \"0.1.18\",\r\n    \"app_type\"\
                \ : 1,\r\n    \"version_description\": \"Updated Version\"\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"version_code\" : \"0.1.18\",\r\n    \"app_type\"\
                \ : 1,\r\n    \"version_description\": \"Updated Version\"\r\n}"
              x-response-id: 5e3e8fd3-e750-41aa-b029-ac6bfea775b7
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedAppversionCreate:
                  $ref: '#/components/examples/exampleQubecartSharedAppversionCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAppversionCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/appversion/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/appversion/create/
  /qubecart/shared/appversion/returnversioncode/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAppversionReturnversioncodePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: App Version Return
      operationId: QubecartSharedAppversionReturnversioncodePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"app_type\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"app_type\" : 1\r\n}"
              x-response-id: fb8ce197-6cf2-4b43-a0e9-35ddf9d2d2b2
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedAppversionReturnversioncode:
                  $ref: '#/components/examples/exampleQubecartSharedAppversionReturnversioncodePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedAppversionReturnversioncodePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/appversion/returnversioncode/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/appversion/returnversioncode/
  /qubecart/shared/conversations/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedConversationsCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Conversation Create
      operationId: QubecartSharedConversationsCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"sender_id\" : 28,\r\n    \"sender_role_id\" : 2,\r\
                \n    \"order_id\" : 140,\r\n    \"incident_id\" : 1,\r\n    \"message\"\
                \ : \"admin ta\"\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"sender_id\" : 28,\r\n    \"sender_role_id\" : 2,\r\
                \n    \"order_id\" : 140,\r\n    \"incident_id\" : 1,\r\n    \"message\"\
                \ : \"admin ta\"\r\n}"
              x-response-id: 1e6843b1-6d8a-467b-a1b7-215cf193539c
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedConversationsCreate:
                  $ref: '#/components/examples/exampleQubecartSharedConversationsCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedConversationsCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/conversations/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/conversations/create/
  /qubecart/shared/conversations/details/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedConversationsDetailsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: conversation details
      operationId: QubecartSharedConversationsDetailsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n     \"order_id\" : 140,\r\n    \"incident_id\" : 1\r\n\
                }"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n     \"order_id\" : 140,\r\n    \"incident_id\" : 1\r\n\
                }"
              x-response-id: 9bf3fe49-f8d8-4054-9e5d-211b7aa657ca
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedConversationsDetails:
                  $ref: '#/components/examples/exampleQubecartSharedConversationsDetailsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedConversationsDetailsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/conversations/details/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/conversations/details/
  /qubecart/shared/domain/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedDomainPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Get domain by domain type'
      operationId: QubecartSharedDomainPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"domain_type\" : \"partner_status\"\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"domain_type\" : \"partner_status\"\n}"
              x-response-id: d5fec98f-9a64-4778-9e54-08f9a5996224
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedDomain:
                  $ref: '#/components/examples/exampleQubecartSharedDomainPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedDomainPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/domain/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/domain/
  /qubecart/shared/errorframework/:
    get:
      description: '## GET error framework '
      operationId: QubecartSharedErrorframeworkGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedErrorframework:
                  $ref: '#/components/examples/exampleQubecartSharedErrorframeworkGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedErrorframeworkGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/errorframework/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/errorframework/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedErrorframeworkGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/shared/get/city/:
    get:
      description: '## Get all cities'
      operationId: QubecartSharedGetCityGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedGetCity:
                  $ref: '#/components/examples/exampleQubecartSharedGetCityGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetCityGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/get/city/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/get/city/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetCityGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/shared/get/citystatecountry/:
    get:
      operationId: QubecartSharedGetCitystatecountryGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedGetCitystatecountry:
                  $ref: '#/components/examples/exampleQubecartSharedGetCitystatecountryGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetCitystatecountryGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/get/citystatecountry/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/get/citystatecountry/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetCitystatecountryGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/shared/get/countries/:
    get:
      description: '## Get all countries'
      operationId: QubecartSharedGetCountriesGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedGetCountries:
                  $ref: '#/components/examples/exampleQubecartSharedGetCountriesGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetCountriesGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/get/countries/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/get/countries/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetCountriesGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/shared/get/states/:
    get:
      description: '## Get all states'
      operationId: QubecartSharedGetStatesGet
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedGetStates:
                  $ref: '#/components/examples/exampleQubecartSharedGetStatesGet200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetStatesGet200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/get/states/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/get/states/
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetStatesGet200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
  /qubecart/shared/getfcm/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetfcmPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Get fcm token of a user
      operationId: QubecartSharedGetfcmPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\" : 1\r\
                \n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\" : 1\r\
                \n}"
              x-response-id: 0be0b411-d7ed-4e92-8632-fc3ed3f94d5b
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedGetfcm:
                  $ref: '#/components/examples/exampleQubecartSharedGetfcmPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetfcmPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/getfcm/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/getfcm/
  /qubecart/shared/getunits/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetunitsPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: '## Gets units by store_category'
      operationId: QubecartSharedGetunitsPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\n    \"store_category\" : 1\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\n    \"store_category\" : 1\n}"
              x-response-id: 24da958d-fd32-4d8b-9eeb-2c7e00721a5a
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedGetunits:
                  $ref: '#/components/examples/exampleQubecartSharedGetunitsPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedGetunitsPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/getunits/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/getunits/
  /qubecart/shared/notificationmaster/create/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedNotificationmasterCreatePost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Update fcm token of a user
      operationId: QubecartSharedNotificationmasterCreatePost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\" : 1,\r\
                \n    \"fcm_token\" : \"dNPNiW_oStevv225HhHVGi:APA91bEnN5ntUMjE0-q20iwVNiJvX-Ieg_XFgq_8EE0yidKBm003JGphMsyjsrUMqDgW6IKcKc20QEBFwJE4iCKrbB2R1cMeEe8_8a5ZChXx8TcvFec_9dju7xQeZRamqeiXipuAxrMJ\"\
                \r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\" : 1,\r\
                \n    \"fcm_token\" : \"dNPNiW_oStevv225HhHVGi:APA91bEnN5ntUMjE0-q20iwVNiJvX-Ieg_XFgq_8EE0yidKBm003JGphMsyjsrUMqDgW6IKcKc20QEBFwJE4iCKrbB2R1cMeEe8_8a5ZChXx8TcvFec_9dju7xQeZRamqeiXipuAxrMJ\"\
                \r\n}"
              x-response-id: be996d95-f052-4796-84f9-d3e05c0b2a6b
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedNotificationmasterCreate:
                  $ref: '#/components/examples/exampleQubecartSharedNotificationmasterCreatePost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedNotificationmasterCreatePost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/notificationmaster/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/notificationmaster/create/
  /qubecart/shared/send/pushnotification/:
    options:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedSendPushnotificationPost200'
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: mock
    post:
      description: Send push notification
      operationId: QubecartSharedSendPushnotificationPost
      requestBody:
        content:
          '*/*':
            example:
              value: "{\r\n    \"message_title\" : \"Qubecart\",\r\n    \"message_body\"\
                \ : \"Wel COme To Qubecart\",\r\n    \"fcm_user_id\" : 22,\r\n   \
                \ \"fcm_user_type\" : 1\r\n}"
            schema:
              type: string
            x-link-response:
            - value: "{\r\n    \"message_title\" : \"Qubecart\",\r\n    \"message_body\"\
                \ : \"Wel COme To Qubecart\",\r\n    \"fcm_user_id\" : 22,\r\n   \
                \ \"fcm_user_type\" : 1\r\n}"
              x-response-id: c22b4905-ea85-4c54-be13-cff3bb6f76fa
      responses:
        200:
          content:
            application/json:
              examples:
                Http1520613258001QubecartSharedSendPushnotification:
                  $ref: '#/components/examples/exampleQubecartSharedSendPushnotificationPost200'
              schema:
                $ref: '#/components/schemas/schemaQubecartSharedSendPushnotificationPost200'
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      summary: http://${stageVariables.url}/qubecart/shared/send/pushnotification/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: 200
        type: http
        uri: http://${stageVariables.url}/qubecart/shared/send/pushnotification/
x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''

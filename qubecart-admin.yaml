components:
  examples:
    exampleAdminOrderUpdatestatusPost200:
      value:
        Errors:
          Business_Errors:
          - {Code: BE017, Message: One or more bags is not settled}
          Info: []
          System_Errors: []
          Warnings: []
        code: null
        exception: true
      x-response-id: a25245da-c256-4580-96da-56d5ded68a3f
    exampleQubecartAdminCommissionCreatePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 5edd7f4c-8962-4e31-b562-93520878a027
    exampleQubecartAdminCommissionGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {commission_description: Default commission for all partner, commission_master_id: 1,
          commission_name: Default commission, commission_percentage: 2, created_on: '2020-09-14T08:31:37',
          partner_income: 999999, updated_on: '2020-09-14T08:31:37'}
        - {commission_description: TEst commission, commission_master_id: 2, commission_name: test,
          commission_percentage: 10, created_on: '2020-09-14T14:02:33', partner_income: 99,
          updated_on: '2020-09-14T14:02:33'}
        exception: false
      x-response-id: 17fee0a1-cd51-448c-9bc9-92e20bc43416
    exampleQubecartAdminCustomerDetailsPost200:
      value:
        Errors: null
        code: '001'
        data:
          credit_order_details:
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-09T17:26:16',
            order_delivery_date: null, order_detail_id: 58, order_id: 58, order_ref_no: QCO847477,
            order_status: 2, order_status_name: In Progress, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 5, payment_type_name: Credit, price: 265}
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-11T12:53:16',
            order_delivery_date: null, order_detail_id: 62, order_id: 62, order_ref_no: QCO121310,
            order_status: 2, order_status_name: In Progress, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 5, payment_type_name: Credit, price: 557.85}
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-11T12:53:40',
            order_delivery_date: null, order_detail_id: 63, order_id: 63, order_ref_no: QCO684918,
            order_status: 2, order_status_name: In Progress, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 5, payment_type_name: Credit, price: 249}
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-08T22:01:03',
            order_delivery_date: null, order_detail_id: 44, order_id: 44, order_ref_no: QCO559168,
            order_status: 2, order_status_name: In Progress, payment_status: 1, payment_status_name: Settled,
            payment_type: 5, payment_type_name: Credit, price: 344.5}
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-09T11:34:34',
            order_delivery_date: null, order_detail_id: 51, order_id: 51, order_ref_no: QCO746420,
            order_status: 2, order_status_name: In Progress, payment_status: 1, payment_status_name: Settled,
            payment_type: 5, payment_type_name: Credit, price: 344.5}
          credit_store_details:
          - {address_id: 22, address_type: null, addressline1: 112/4, addressline2: beleghata
              main road, city: 1, city_name: Kolkata, countries_name: India, country: 1,
            credit_association_id: 2, credit_status: 5, credit_status_name: Delete
              Request, current_expendeture: 726.85, customer_id: 22, max_monthly_credit: 1000,
            partner_id: 24, pin: 700010, remaining_expendeture: 273.15, state: 1,
            states_name: West Bengal, store_category: 1, store_category_name: Grocery,
            store_id: 3, store_name: Perfect store, updated_at: '2020-09-11T12:53:39'}
          customer_details: {customer_id: 22, customer_name: HARANATH BASAK, customer_status: 1,
            customer_status_name: Active, email_id: basak.haranath@gmail.com, phone_no: '9932047263'}
          order_details:
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-08-29T08:36:45',
            order_delivery_date: null, order_detail_id: 35, order_id: 35, order_ref_no: OD830942,
            order_status: 1, order_status_name: ' Order Placed', payment_status: 0,
            payment_status_name: Not Settled, payment_type: 1, payment_type_name: Cash
              On Delivery, price: 1324.14}
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-02T04:33:39',
            order_delivery_date: null, order_detail_id: 38, order_id: 38, order_ref_no: QCO281611,
            order_status: 1, order_status_name: ' Order Placed', payment_status: 0,
            payment_status_name: Not Settled, payment_type: 1, payment_type_name: Cash
              On Delivery, price: 355.5}
          - {billing_address_id: 29, customer_id: 22, order_created_at: '2020-09-11T21:01:44',
            order_delivery_date: null, order_detail_id: 65, order_id: 65, order_ref_no: QCO235664,
            order_status: 2, order_status_name: In Progress, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 1, payment_type_name: Cash On Delivery, price: 876.6}
          - {billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-09T17:09:47',
            order_delivery_date: null, order_detail_id: 57, order_id: 57, order_ref_no: QCO209545,
            order_status: 1, order_status_name: ' Order Placed', payment_status: 1,
            payment_status_name: Settled, payment_type: 2, payment_type_name: Qubecart
              Wallet, price: 175}
        exception: false
      x-response-id: c86ebf78-7f68-4449-84f6-835dbdf25545
    exampleQubecartAdminCustomerGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {credit_status: 0, credit_status_name: Not A Credit Customer, customer_id: 22,
          customer_name: HARANATH BASAK, customer_status: 1, customer_status_name: Active,
          email_id: basak.haranath@gmail.com, phone_no: '9932047263'}
        - {credit_status: 0, credit_status_name: Not A Credit Customer, customer_id: 25,
          customer_name: Nabanita Sarkar, customer_status: 1, customer_status_name: Active,
          email_id: nabanita.sarkar@msqube.com, phone_no: '9851075512'}
        - {credit_status: 0, credit_status_name: Not A Credit Customer, customer_id: 26,
          customer_name: Nabanita Basak, customer_status: 1, customer_status_name: Active,
          email_id: hb@gmail.com, phone_no: '8116092023'}
        - {credit_status: 0, credit_status_name: Not A Credit Customer, customer_id: 24,
          customer_name: Sourav Mondal, customer_status: 1, customer_status_name: Active,
          email_id: '', phone_no: '8335968075'}
        - {credit_status: 0, credit_status_name: Not A Credit Customer, customer_id: 20,
          customer_name: Srija kundu, customer_status: 1, customer_status_name: Active,
          email_id: das.chandana.ori@gmail.com, phone_no: '9563541102'}
        - {credit_status: 0, credit_status_name: Not A Credit Customer, customer_id: 23,
          customer_name: Sudip B, customer_status: 1, customer_status_name: Active,
          email_id: sudipta.das@msqube.com, phone_no: '7001283856'}
        - {credit_status: 1, credit_status_name: Approved Credit Customer, customer_id: 18,
          customer_name: 'SUDIPTA ', customer_status: 1, customer_status_name: Active,
          email_id: '', phone_no: '8013320216'}
        - {credit_status: 0, credit_status_name: Not A Credit Customer, customer_id: 21,
          customer_name: Sudipta Das, customer_status: 1, customer_status_name: Active,
          email_id: das.sudipta94@gmail.com, phone_no: '9232669133'}
        exception: false
      x-response-id: c06c679c-a614-45b7-a87f-22429444fa32
    exampleQubecartAdminGetbyidPost200:
      value:
        Errors: null
        code: '001'
        data: {addressline1: pinnacle tower, addressline2: chinar park, admn_user_id: 6,
          city_id: 1, city_name: Kolkata, contact_phone: '8335968075', countries_name: India,
          country_id: 1, email_id: contact@msqube.com, firstname: msqube, lastname: Technologies,
          pin: 700135, state_id: 1, states_name: West Bengal, user_status: 1, user_type: 1,
          user_type_name: Super Admin, username: sourav}
        exception: false
      x-response-id: b325d0cb-2067-45a1-81bf-cddb3a193960
    exampleQubecartAdminLoginPost200:
      value:
        Errors: null
        code: '001'
        data: {address_id: 6, addressline1: 112/4, addressline2: Beleghata main road,
          admn_user_id: 6, city_name: Kolkata, contact_phone: '8335968075', countries_name: India,
          email_id: sourav.mondal@msqube.com, firstname: sourav, lastname: mondal,
          pin: 700010, states_name: West Bengal, user_type_name: Super Admin, username: sourav}
        exception: false
      x-response-id: 83c19eae-18f7-476a-aea8-9e4b117c4103
    exampleQubecartAdminOrderAssignbagPost200:
      value:
        Errors: null
        code: '001'
        data:
          delivery_person: {alternate_phone: '9123810564', contact_phone: '9123810564',
            delivery_person_name: Subhadeep Shome}
          temp: {bag_ref_no: QCB942211, billing_address_id: 14, customer_address: '04,
              Khudiram Basu Roa Kolkata-741102', customer_id: 18, customer_name: 'SUDIPTA ',
            customer_phone_no: '8013320216', order_id: 41, partner_name: Snehasish
              Das, partner_phone_no: '8981497361', qc_partner_id: 24, store_address: '112/4,
              beleghata main road Kolkata-700010', store_id: 3, store_name: Perfect
              store, work_item_id: 3}
        exception: false
      x-response-id: 99e0516d-0242-4185-a67a-ce233a4f9b86
    exampleQubecartAdminOrderBagdetailsPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {bag_id: 41, bag_item_id: 43, bag_item_status: 1, brand_created_by_role: 1,
          partner_product_id: 42, product_brand_description: Sundrop Heart Jar, product_brand_id: 236,
          product_brand_name: Sundrop Heart, product_id: 42, product_title: 'Sundrop
            Heart Oil, 1Kg', required_quantity: 1, subcategory_name: Oil, total_price: 135}
        - {bag_id: 41, bag_item_id: 44, bag_item_status: 1, brand_created_by_role: 1,
          partner_product_id: 44, product_brand_description: Engine Mustard Oil, product_brand_id: 261,
          product_brand_name: Engine, product_id: 44, product_title: 'Engine Mustard
            Oil, 1Kg', required_quantity: 1, subcategory_name: Mustard Oil, total_price: 224.1}
        - {bag_id: 41, bag_item_id: 45, bag_item_status: 1, brand_created_by_role: 1,
          partner_product_id: 45, product_brand_description: India Gate, product_brand_id: 370,
          product_brand_name: India Gate, product_id: 45, product_title: 'India Gate
            Basmati Rice, 1Kg', required_quantity: 1, subcategory_name: Basmati Rice,
          total_price: 179.74}
        - {bag_id: 41, bag_item_id: 46, bag_item_status: 1, brand_created_by_role: 1,
          partner_product_id: 46, product_brand_description: aashirvad, product_brand_id: 393,
          product_brand_name: aashirvad, product_id: 46, product_title: 'aashirvad
            Wheat Atta, 5Kg', required_quantity: 1, subcategory_name: Wheat Atta,
          total_price: 260.3}
        - {bag_id: 41, bag_item_id: 47, bag_item_status: 1, brand_created_by_role: 1,
          partner_product_id: 43, product_brand_description: Annapurna Brown Ghee,
          product_brand_id: 238, product_brand_name: Annapurna, product_id: 43, product_title: 'Annapurna
            Ghee, 250g', required_quantity: 1, subcategory_name: Ghee, total_price: 180.5}
        exception: false
      x-response-id: 14ec17d5-e36d-4221-aaf4-4dc9a728d900
    exampleQubecartAdminOrderDetailsPost200:
      value:
        Errors: null
        code: '001'
        data:
          order:
            addressline1: House No. 09
            addressline2: Changrabandha
            bags:
            - {bag_id: 41, bag_price: 979.6399993896484, bag_ref_no: BAG579394, bag_status: 1,
              bag_status_name: Order Placed, order_id: 35, partner: 'soumik roy,blabla',
              qc_partner_id: 25, store_address: 'Beleghata Head Post Office,Beleghata,Kolkata-700089',
              store_address_id: 60, store_id: 26, store_name: Maa Annapurna Store,
              updated_by: null, updated_on: null}
            - {bag_id: 42, bag_price: 304.5, bag_ref_no: BAG416579, bag_status: 2,
              bag_status_name: Order Accepted, order_id: 35, partner: 'Snehasish Das,SDE',
              qc_partner_id: 24, store_address: 'Kestopur,Kolkata,Kolkata-700012',
              store_address_id: 63, store_id: 28, store_name: SD Store, updated_by: null,
              updated_on: '2020-09-04T05:48:14'}
            billing_address_id: 27
            billing_name: Haranath Basak
            billing_phone: '9932047263'
            city_name: Kolkata
            customer_id: 22
            customer_name: HARANATH BASAK
            email_id: basak.haranath@gmail.com
            order_created_at: '2020-08-29T08:36:45'
            order_delivery_date: null
            order_detail_id: 35
            order_id: 35
            order_ref_no: OD830942
            order_status: 1
            order_status_name: ' Order Placed'
            payment_type: 1
            payment_type_name: Cash On Delivery
            phone_no: '9932047263'
            pin: 735301
            price: 1324.14
            states_name: West Bengal
        exception: false
      x-response-id: 26de4fff-df44-4676-ad4a-b0f757122959
    exampleQubecartAdminOrderGetallPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {billing_address_id: 14, customer_id: 18, customer_name: 'SUDIPTA ', order_created_at: '2020-08-28T09:26:23',
          order_delivery_date: null, order_detail_id: 31, order_id: 31, order_ref_no: OD113603,
          order_status: 1, order_status_name: ' Order Placed', payment_type: 1, payment_type_name: Cash
            On Delivery, price: 660.54}
        - {billing_address_id: 14, customer_id: 18, customer_name: 'SUDIPTA ', order_created_at: '2020-08-28T16:52:10',
          order_delivery_date: null, order_detail_id: 32, order_id: 32, order_ref_no: OD314062,
          order_status: 1, order_status_name: ' Order Placed', payment_type: 1, payment_type_name: Cash
            On Delivery, price: 115}
        - {billing_address_id: 14, customer_id: 18, customer_name: 'SUDIPTA ', order_created_at: '2020-08-28T17:26:16',
          order_delivery_date: null, order_detail_id: 33, order_id: 33, order_ref_no: OD866516,
          order_status: 1, order_status_name: ' Order Placed', payment_type: 1, payment_type_name: Cash
            On Delivery, price: 249}
        - {billing_address_id: 14, customer_id: 18, customer_name: 'SUDIPTA ', order_created_at: '2020-08-28T17:35:10',
          order_delivery_date: null, order_detail_id: 34, order_id: 34, order_ref_no: OD611429,
          order_status: 1, order_status_name: ' Order Placed', payment_type: 1, payment_type_name: Cash
            On Delivery, price: 140}
        - {billing_address_id: 27, customer_id: 22, customer_name: HARANATH BASAK,
          order_created_at: '2020-08-29T08:36:45', order_delivery_date: null, order_detail_id: 35,
          order_id: 35, order_ref_no: OD830942, order_status: 1, order_status_name: ' Order
            Placed', payment_type: 1, payment_type_name: Cash On Delivery, price: 1324.14}
        - {billing_address_id: 27, customer_id: 22, customer_name: HARANATH BASAK,
          order_created_at: '2020-09-02T04:33:39', order_delivery_date: null, order_detail_id: 38,
          order_id: 38, order_ref_no: QCO281611, order_status: 1, order_status_name: ' Order
            Placed', payment_type: 1, payment_type_name: Cash On Delivery, price: 355.5}
        - {billing_address_id: 14, customer_id: 18, customer_name: 'SUDIPTA ', order_created_at: '2020-09-04T04:18:27',
          order_delivery_date: null, order_detail_id: 39, order_id: 39, order_ref_no: QCO138667,
          order_status: 1, order_status_name: ' Order Placed', payment_type: 1, payment_type_name: Cash
            On Delivery, price: 557.85}
        - {billing_address_id: 14, customer_id: 18, customer_name: 'SUDIPTA ', order_created_at: '2020-09-04T05:54:32',
          order_delivery_date: null, order_detail_id: 40, order_id: 40, order_ref_no: QCO251245,
          order_status: 1, order_status_name: ' Order Placed', payment_type: 1, payment_type_name: Cash
            On Delivery, price: 569.5}
        - {billing_address_id: 14, customer_id: 18, customer_name: 'SUDIPTA ', order_created_at: '2020-09-07T18:19:02',
          order_delivery_date: null, order_detail_id: 41, order_id: 41, order_ref_no: QCO572967,
          order_status: 1, order_status_name: ' Order Placed', payment_type: 1, payment_type_name: Cash
            On Delivery, price: 483.85}
        exception: false
      x-response-id: fd747d48-bc0f-4d55-8976-b88404e47d06
    exampleQubecartAdminOrderPaytopartnerPost200:
      value: {Errors: null, code: '001', exception: null}
      x-response-id: 11358dff-1102-4293-9ee3-7616e8b5d64c
    exampleQubecartAdminOrderUpdatepaymentPost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 1fa833b7-99ba-463c-9358-b84a2e1651e6
    exampleQubecartAdminOrderUpdatestatusPost200:
      value:
        Errors:
          Business_Errors:
          - {Code: BE023, Message: Payment is due for this order}
          Info: []
          System_Errors: []
          Warnings: []
        code: null
        exception: true
      x-response-id: a3014dd8-e0bf-4385-b6f9-c55999c12a86
    exampleQubecartAdminPartnerApprovePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 0689a1c7-c3c0-44fe-86b5-037392a7a354
    exampleQubecartAdminPartnerCreatePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 237824f5-5293-4122-9e9a-5673d9631f6e
    exampleQubecartAdminPartnerDetailsbyidPost200:
      value:
        Errors: null
        code: '001'
        data:
          approval_status: 2
          approval_status_name: Active
          company_name: TEST2 company
          contact_email: souravcristiano502@gmail.com
          contact_person: null
          contact_person_designation: Owner
          contact_phone: '9073448330'
          gst_numbers: ADF12456
          pan: DHA1234
          partner_address: {address_id: 18, address_type: null, addressline1: 112/4,
            addressline2: beleghata main road, city: 1, city_name: Kolkata, countries_name: India,
            country: 1, pin: 700010, state: 1, states_name: West Bengal}
          partner_address_id: 18
          partner_bank_id: 2147483647
          partner_category: 1
          partner_code: TEST2
          qc_partner_id: 10
          stores:
          - {addressline1: 112/4, addressline2: Beleghata main road, city_name: Kolkata,
            countries_name: India, pin: 700010, qc_partner_id: 10, states_name: West
              Bengal, store_address_id: 6, store_category: 2, store_id: 1, store_image: store4.jpg,
            store_location: null, store_name: Adi Mohini Mohon Kanjilal, store_type_name: Garments}
          updated_on: '2020-08-03T09:10:11'
        exception: false
      x-response-id: 70182fe7-be2b-4219-ad36-5c3fd0d3cdeb
    exampleQubecartAdminPartnerGetallPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {approval_status: 1, approval_status_name: Added, company_name: TEST2 company,
          contact_email: souravcristiano502@gmail.com, contact_person: sourav2, contact_person_designation: Owner,
          contact_phone: '9073448330', partner_code: TEST2, partner_name: TEST2 partner,
          partner_type: 1, qc_partner_id: 10, updated_on: '2020-08-03T09:10:11'}
        - {approval_status: 2, approval_status_name: Active, company_name: TEST company,
          contact_email: souravcristiano502@gmail.com, contact_person: sourav, contact_person_designation: Owner,
          contact_phone: '9073448330', partner_code: TEST, partner_name: TEST partner,
          partner_type: 1, qc_partner_id: 9, updated_on: null}
        exception: false
      x-response-id: 378fce9f-6128-40a9-84dd-086f5fce561a
    exampleQubecartAdminPersonnelApprovePost200:
      value: {Errors: null, code: '001', exception: true}
      x-response-id: 5c8ddfe2-f0f2-487d-8a4a-ca1af577eb0f
    exampleQubecartAdminPersonnelGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {admn_user_id: 7, contact_phone: '9999999999', email_id: jon.doe@doee.com,
          firstname: Jon, gender: M, lastname: Doe, user_status: 1, user_status_name: Active,
          user_type: 2, user_type_name: Delivery Person, username: JonDoe}
        - {admn_user_id: 8, contact_phone: '9999999999', email_id: jon.wick@continental.com,
          firstname: Jon, gender: M, lastname: Wick, user_status: 2, user_status_name: requested,
          user_type: 2, user_type_name: Delivery Person, username: JonWick}
        - {admn_user_id: 9, contact_phone: '9999999999', email_id: jon.wick@continental.com,
          firstname: Jon, gender: M, lastname: Wick, user_status: 2, user_status_name: requested,
          user_type: 2, user_type_name: Delivery Person, username: JonWick}
        exceptiopn: false
      x-response-id: 6790ef60-68e4-4eac-8ca7-1b6df997ffac
    exampleQubecartAdminPersonnelGetdetailPost200:
      value:
        Errors: null
        code: '001'
        data: {adhaar_voter_url: 'https://qubecart.s3.ap-south-1.amazonaws.com/fsq/aadhaar/aadhar.jpg',
          admn_user_id: 8, contact_phone: '9999999999', current_address_city: Kolkata,
          current_address_id: 77, current_address_pin: 700010, current_address_statename: West
            Bengal, current_addressline1: 112/4, current_addressline2: Dummy road,
          dob: '1995-06-13T00:00:00', email_id: jon.wick@continental.com, firstname: Jon,
          gender: M, lastname: Wick, pan_url: 'https://qubecart.s3.ap-south-1.amazonaws.com/fsq/pan/pan.jpg',
          permanent_address_city: Kolkata, permanent_address_id: 77, permanent_address_pin: 700010,
          permanent_address_statename: West Bengal, permanent_addressline1: 112/4,
          permanent_addressline2: Dummy road, photo_url: 'https://qubecart.s3.ap-south-1.amazonaws.com/fsq/profileimage/selfie.jpg',
          user_status: 1, user_status_name: Active, user_type: 2, username: JonWick,
          userr_type_name: Delivery Person}
        exception: false
      x-response-id: 8733e2e0-560f-4f4b-9350-0401a929d19f
    exampleQubecartAdminRegionCreatePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 079d00c2-d3e4-4e61-b03d-24dfc91a80fd
    exampleQubecartAdminRegionGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {city_id: 1, country_id: 1, created_by_id: 6, created_on: '2020-09-07T08:09:10',
          region_code: QCR001, region_id: 1, region_name: BELEGHATA, region_phone_no: '9999999999',
          state_id: 1}
        exception: false
      x-response-id: cca86693-7813-403b-830e-39c752d2d250
    exampleQubecartAdminStoreAddregionPost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 66223942-374c-4219-8309-d67cdacbd35d
    exampleQubecartAdminStoreCommissionhistoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {commission_description: Default commission for all partner, commission_master_id: 1,
          commission_name: Default commission, commission_percentage: 2, end_date: null,
          partner_income: 999999, start_date: '2020-09-14T12:27:46', status: 1, store_commission_id: 2,
          store_commission_status_name: Active, store_id: 16, value: null}
        exception: false
      x-response-id: d4cdd8e9-90cd-4a97-8e3c-d0da4dd1735b
    exampleQubecartAdminStoreListPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {addressline1: 112/4, addressline2: beleghata main road, city_name: Kolkata,
          countries_name: India, created_on: null, credit_flag: 1, latitude: null,
          longitude: null, pin: 700010, qc_partner_id: 24, region_id: 2, states_name: West
            Bengal, store_address_id: 22, store_category: 1, store_id: 3, store_image: MAS.jpg,
          store_name: Perfect store, store_rating: 0, store_status: 2, store_status_name: Active,
          store_type_name: Grocery, updated_on: null}
        - {addressline1: 111/1, addressline2: highway to hell, city_name: Kolkata,
          countries_name: India, created_on: null, credit_flag: 0, latitude: null,
          longitude: null, pin: 999999, qc_partner_id: 25, region_id: 2, states_name: West
            Bengal, store_address_id: 50, store_category: 1, store_id: 16, store_image: MAS.jpg,
          store_name: HighwaytoHell Store ps AC/DC, store_rating: 0, store_status: 2,
          store_status_name: Active, store_type_name: Grocery, updated_on: null}
        - {addressline1: Beleghata Head Post Office, addressline2: Beleghata, city_name: Kolkata,
          countries_name: India, created_on: null, credit_flag: 0, latitude: null,
          longitude: null, pin: 700089, qc_partner_id: 25, region_id: 2, states_name: West
            Bengal, store_address_id: 60, store_category: 1, store_id: 26, store_image: MAS.jpg,
          store_name: Maa Annapurna Store, store_rating: 0, store_status: 2, store_status_name: Active,
          store_type_name: Grocery, updated_on: null}
        - {addressline1: Kestopur, addressline2: Kolkata, city_name: Kolkata, countries_name: India,
          created_on: null, credit_flag: 1, latitude: null, longitude: null, pin: 700012,
          qc_partner_id: 24, region_id: 2, states_name: West Bengal, store_address_id: 63,
          store_category: 1, store_id: 28, store_image: MAS.jpg, store_name: SD Store,
          store_rating: 0, store_status: 2, store_status_name: Active, store_type_name: Grocery,
          updated_on: null}
        - {addressline1: '20', addressline2: Beleghata main road, city_name: Kolkata,
          countries_name: India, created_on: null, credit_flag: 1, latitude: 22.563293,
          longitude: 88.39328, pin: 700010, qc_partner_id: 9, region_id: 2, states_name: West
            Bengal, store_address_id: 71, store_category: 1, store_id: 30, store_image: null,
          store_name: Everyday Grocery, store_rating: 0, store_status: 2, store_status_name: Active,
          store_type_name: Grocery, updated_on: null}
        - {addressline1: 'krishnanagar ', addressline2: 'krishnanagar ', city_name: Kolkata,
          countries_name: India, created_on: null, credit_flag: 1, latitude: null,
          longitude: null, pin: 741102, qc_partner_id: 24, region_id: 2, states_name: West
            Bengal, store_address_id: 75, store_category: 1, store_id: 34, store_image: null,
          store_name: 'Das Store ', store_rating: null, store_status: 2, store_status_name: Active,
          store_type_name: Grocery, updated_on: null}
        - {addressline1: '110', addressline2: Baguiati main road, city_name: Kolkata,
          countries_name: India, created_on: '2020-09-12T07:58:36', credit_flag: 1,
          latitude: 22.610069, longitude: 88.429198, pin: 700115, qc_partner_id: 24,
          region_id: 2, states_name: West Bengal, store_address_id: 81, store_category: 1,
          store_id: 35, store_image: null, store_name: Groceries 101, store_rating: 0,
          store_status: 2, store_status_name: Active, store_type_name: Grocery, updated_on: '2020-09-12T08:35:13'}
        exception: false
      x-response-id: 898f80fb-3312-43f9-9c1f-6dd3b05736c5
    exampleQubecartAdminStoreOrderlistPost200:
      value:
        Errors: null
        code: '001'
        data:
          commission: {commission_name: Default commission, commission_percentage: 2,
            msqube_income: 36.7, partner_income: 1798.44, total_bag_price: 1835.14}
          orderlist:
          - {bag_id: 37, bag_price: 620.54, bag_ref_no: BAG540108, bag_status: 4,
            bag_status_name: Packaging In Progress, billing_address_id: 14, customer_id: 18,
            order_created_at: '2020-08-28T09:26:23', order_id: 31, paid_to_partner: 1,
            payment_status: 0, payment_status_name: Not Settled, payment_type: 1,
            payment_type_name: Cash On Delivery, updated_on: '2020-08-29T10:13:44'}
          - {bag_id: 41, bag_price: 979.64, bag_ref_no: BAG579394, bag_status: 1,
            bag_status_name: Order Placed, billing_address_id: 27, customer_id: 22,
            order_created_at: '2020-08-29T08:36:45', order_id: 35, paid_to_partner: 0,
            payment_status: 0, payment_status_name: Not Settled, payment_type: 1,
            payment_type_name: Cash On Delivery, updated_on: null}
          - {bag_id: 45, bag_price: 315.5, bag_ref_no: QCB726936, bag_status: 9, bag_status_name: Rejected,
            billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-02T04:33:39',
            order_id: 38, paid_to_partner: 0, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 1, payment_type_name: Cash On Delivery, updated_on: '2020-09-12T02:25:11'}
          - {bag_id: 49, bag_price: 135, bag_ref_no: QCB471876, bag_status: 6, bag_status_name: Picked
              Up, billing_address_id: 14, customer_id: 18, order_created_at: '2020-09-07T18:19:02',
            order_id: 41, paid_to_partner: 0, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 1, payment_type_name: Cash On Delivery, updated_on: '2020-09-08T10:58:35'}
          - {bag_id: 65, bag_price: 135, bag_ref_no: QCB679545, bag_status: 1, bag_status_name: Order
              Placed, billing_address_id: 27, customer_id: 22, order_created_at: '2020-09-09T17:09:47',
            order_id: 57, paid_to_partner: 0, payment_status: 1, payment_status_name: Settled,
            payment_type: 2, payment_type_name: Qubecart Wallet, updated_on: null}
          - {bag_id: 73, bag_price: 135, bag_ref_no: QCB711836, bag_status: 5, bag_status_name: Ready
              To Dispatch, billing_address_id: 29, customer_id: 25, order_created_at: '2020-09-11T20:53:49',
            order_id: 64, paid_to_partner: 0, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 1, payment_type_name: Cash On Delivery, updated_on: '2020-09-12T02:25:36'}
          - {bag_id: 76, bag_price: 135, bag_ref_no: QCB867624, bag_status: 1, bag_status_name: Order
              Placed, billing_address_id: 29, customer_id: 22, order_created_at: '2020-09-11T21:01:44',
            order_id: 65, paid_to_partner: 0, payment_status: 0, payment_status_name: Not
              Settled, payment_type: 1, payment_type_name: Cash On Delivery, updated_on: null}
        exception: false
      x-response-id: eee65505-3214-4875-9dd3-d7243250629a
    exampleQubecartAdminStoreUpdatestatusPost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 77d10f7e-bcc0-4227-9513-d328f024353c
    exampleQubecartAdminTemplateAddbrandsPost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: b5d19d40-7bf0-4182-82a1-dffa0fe5a2d7
    exampleQubecartAdminTemplateCheckduplicatePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 183fb363-64b8-4e73-b6ef-baef14e03dfb
    exampleQubecartAdminTemplateCreatePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 6a1915f4-78d9-40f4-8b88-c77718611097
    exampleQubecartAdminTemplateCreatesubcategoryPost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 0e2bbc98-44d6-41c3-b932-e01d89ac8f3d
    exampleQubecartAdminTemplateDeleteitemPost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: f7f15ed0-3692-45b2-8abc-7192a357758f
    exampleQubecartAdminTemplateGetallGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {category: 1, category_name: Grocery, status: 1, status_name: Active, template_description: null,
          template_id: 25, template_name: Temp_g_001, template_ref_no: '1597400846',
          updated_by: 6, updated_on: '2020-08-14T10:27:26', username: msqube Technologies
            Corp}
        exception: false
      x-response-id: 5576670b-7046-4b3b-a24b-f1fbb9b3f467
    exampleQubecartAdminTemplateGetbrandsPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {brand_description: Organic Tattva Maida, brand_id: 126, brand_name: Organic
            Tattva, created_by_role: 1, status: 1, subcategory_id: 28, updated_by: 6,
          updated_on: '2020-08-27T07:21:16'}
        - {brand_description: Smart Choice Sattu, brand_id: 127, brand_name: Smart
            Choice, created_by_role: 1, status: 1, subcategory_id: 28, updated_by: 6,
          updated_on: '2020-08-27T07:21:16'}
        - {brand_description: Weikfield Corn Flour, brand_id: 128, brand_name: Weikfield,
          created_by_role: 1, status: 1, subcategory_id: 28, updated_by: 6, updated_on: '2020-08-27T07:21:16'}
        - {brand_description: Brown & Polson Corn Flour, brand_id: 129, brand_name: Brown
            & Polson, created_by_role: 1, status: 1, subcategory_id: 28, updated_by: 6,
          updated_on: '2020-08-27T07:21:16'}
        - {brand_description: null, brand_id: 14, brand_name: Generic/Loose, created_by_role: 2,
          status: 1, subcategory_id: 28, updated_by: 24, updated_on: '2020-08-27T18:46:17'}
        exception: false
      x-response-id: 284d0c75-b894-45b6-828c-b22d7edfc9b3
    exampleQubecartAdminTemplateGetbycategoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {category: 1, category_name: Grocery, item_description: null, item_name: Rice,
          template_id: 1, template_ref_no: Grocery_001, updated_by: 6, updated_on: '2020-08-12T12:22:57'}
        - {category: 1, category_name: Grocery, item_description: null, item_name: Musturd
            Oil, template_id: 2, template_ref_no: Grocery_001, updated_by: 6, updated_on: '2020-08-12T12:22:57'}
        exception: false
      x-response-id: 81c2fdc0-6cbc-4347-879e-2ebd5d9afdd6
    exampleQubecartAdminTemplateGetcategoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {product_category_name: Rice, template_id: 29, template_item_id: 10}
        - {product_category_name: Wheat, template_id: 29, template_item_id: 11}
        - {product_category_name: Edible Oils & Ghee, template_id: 29, template_item_id: 12}
        exception: false
      x-response-id: b6821abe-0efe-4481-aa7a-6ccc00f759d4
    exampleQubecartAdminTemplateGetsubcategoryPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {product_category_id: 10, product_subcategory_id: 1, subcategory_name: Basmati
            Rice}
        exception: false
      x-response-id: fdaf4aad-70ee-41e1-8b5b-6bc97e33125b
    exampleQubecartAdminTemplateInactivePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 5088bfcd-0396-4a4e-89f6-54056efb479d
    exampleQubecartAdminUpdatePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 2a710587-40fe-4733-aac1-c852497e2021
    exampleQubecartSharedDomainPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {domain_code: 1, domain_data_type: string, domain_id: 2, domain_text: Added,
          domain_type: partner_status, domain_value: Added}
        - {domain_code: 2, domain_data_type: string, domain_id: 3, domain_text: Active,
          domain_type: partner_status, domain_value: Active}
        - {domain_code: 3, domain_data_type: string, domain_id: 4, domain_text: Inactive,
          domain_type: partner_status, domain_value: Inactive}
        - {domain_code: 4, domain_data_type: string, domain_id: 5, domain_text: Not
            Approved, domain_type: partner_status, domain_value: Not Approved}
        exception: false
      x-response-id: eb9e8fb3-07c6-493f-b176-7a86c0309e0f
    exampleQubecartSharedErrorframeworkGet200:
      value:
      - {error_code: SE001, error_id: 1, error_message: Error Encountered. Please
          Try Again, level_of_severity: 3}
      - {error_code: SE002, error_id: 2, error_message: Invalid Phone or Email, level_of_severity: 3}
      - {error_code: BE001, error_id: 3, error_message: Invalid Username or Password,
        level_of_severity: 3}
      - {error_code: BE002, error_id: 4, error_message: 'Sorry, Your request is not
          approved', level_of_severity: 3}
      - {error_code: BE003, error_id: 5, error_message: User does not exists, level_of_severity: 3}
      - {error_code: BE004, error_id: 6, error_message: Email or phone already exists,
        level_of_severity: 3}
      x-response-id: 51f04e31-1bbc-4119-a72c-6b689ee53040
    exampleQubecartSharedGetCityGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {city_code: '033', city_id: 1, city_name: Kolkata}
        exception: false
      x-response-id: bcb857de-178c-40a0-b71d-6cee0529dcaa
    exampleQubecartSharedGetCitystatecountryGet200:
      value:
        Errors: null
        code: '001'
        data:
          cities:
          - {city_code: '033', city_id: 1, city_name: Kolkata}
          countries:
          - {countries_code: IND, countries_id: 1, countries_name: India}
          states:
          - {states_code: WB, states_id: 1, states_name: West Bengal}
        exception: false
      x-response-id: cc7732ac-eb39-41f6-b38f-e777fbe3622d
    exampleQubecartSharedGetCountriesGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {countries_code: IND, countries_id: 1, countries_name: India}
        exception: false
      x-response-id: 03ba1084-290e-4142-af44-93f3441308f3
    exampleQubecartSharedGetStatesGet200:
      value:
        Errors: null
        code: '001'
        data:
        - {states_code: WB, states_id: 1, states_name: West Bengal}
        exception: false
      x-response-id: d75614e7-106d-4b93-9b32-e13c13c9ae63
    exampleQubecartSharedGetfcmPost200:
      value:
        Errors: null
        code: '001'
        data: {create_date: '2020-08-29T08:34:12Z', expiry_date: null, fcm_token: 'dNPNiW_oStevv225HhHVGi:APA91bEnN5ntUMjE0-q20iwVNiJvX-Ieg_XFgq_8EE0yidKBm003JGphMsyjsrUMqDgW6IKcKc20QEBFwJE4iCKrbB2R1cMeEe8_8a5ZChXx8TcvFec_9dju7xQeZRamqeiXipuAxrMJ',
          fcm_user_id: 22, fcm_user_type: 1, make: null, model: null, notification_master_id: 18}
        exception: false
      x-response-id: 51423e06-b0f7-4f6a-8f4d-1c4cb5118105
    exampleQubecartSharedGetunitsPost200:
      value:
        Errors: null
        code: '001'
        data:
        - {store_category: 1, unit_id: 1, unit_long: Kilogram, unit_short: Kg}
        - {store_category: 1, unit_id: 2, unit_long: Gram, unit_short: g}
        exception: false
      x-response-id: 00bb815f-255b-491a-b60f-61a683ed5a3c
    exampleQubecartSharedNotificationmasterCreatePost200:
      value: {Errors: null, code: '001', exception: false}
      x-response-id: 6e5e734f-354c-4dda-878d-5a6ce365e2d2
    exampleQubecartSharedSendPushnotificationPost200:
      value:
        Errors: null
        code: '001'
        data:
          canonical_ids: 0
          failure: 0
          multicast_ids: [3163111920342775957]
          results:
          - {message_id: '0:1600440312730418%a48f8eb2a48f8eb2'}
          success: 1
          topic_message_id: null
        exception: false
      x-response-id: e2d2ac46-d686-4982-a095-094c0d7f6c58
  schemas:
    schemaAdminOrderUpdatestatusPost200:
      properties:
        Errors:
          properties:
            Business_Errors:
              items:
                properties:
                  Code: {type: string}
                  Message: {type: string}
                required: [Code, Message]
                type: object
              type: array
            Info:
              items: {}
              type: array
            System_Errors:
              items: {}
              type: array
            Warnings:
              items: {}
              type: array
          required: [Info, Business_Errors, Warnings, System_Errors]
          type: object
        code: {}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminCommissionCreatePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminCommissionGetallGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              commission_description: {type: string}
              commission_master_id: {format: int32, type: integer}
              commission_name: {type: string}
              commission_percentage: {format: int32, type: integer}
              created_on: {type: string}
              partner_income: {format: int32, type: integer}
              updated_on: {type: string}
            required: [commission_master_id, commission_name, commission_description,
              created_on, updated_on, partner_income, commission_percentage]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminCustomerDetailsPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            credit_order_details:
              items:
                allOf:
                - properties:
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_delivery_date: {}
                    order_detail_id: {format: int32, type: integer}
                    order_id: {format: int32, type: integer}
                    order_ref_no: {type: string}
                    order_status: {format: int32, type: integer}
                    order_status_name: {type: string}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    price: {format: int32, type: integer}
                  required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                    order_detail_id, order_status, billing_address_id, customer_id,
                    price, payment_type, payment_status, order_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_delivery_date: {}
                    order_detail_id: {format: int32, type: integer}
                    order_id: {format: int32, type: integer}
                    order_ref_no: {type: string}
                    order_status: {format: int32, type: integer}
                    order_status_name: {type: string}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    price: {type: float}
                  required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                    order_detail_id, order_status, billing_address_id, customer_id,
                    price, payment_type, payment_status, order_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_delivery_date: {}
                    order_detail_id: {format: int32, type: integer}
                    order_id: {format: int32, type: integer}
                    order_ref_no: {type: string}
                    order_status: {format: int32, type: integer}
                    order_status_name: {type: string}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    price: {format: int32, type: integer}
                  required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                    order_detail_id, order_status, billing_address_id, customer_id,
                    price, payment_type, payment_status, order_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_delivery_date: {}
                    order_detail_id: {format: int32, type: integer}
                    order_id: {format: int32, type: integer}
                    order_ref_no: {type: string}
                    order_status: {format: int32, type: integer}
                    order_status_name: {type: string}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    price: {type: float}
                  required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                    order_detail_id, order_status, billing_address_id, customer_id,
                    price, payment_type, payment_status, order_status_name, payment_type_name,
                    payment_status_name]
                  type: object
              type: array
            credit_store_details:
              items:
                properties:
                  address_id: {format: int32, type: integer}
                  address_type: {}
                  addressline1: {type: string}
                  addressline2: {type: string}
                  city: {format: int32, type: integer}
                  city_name: {type: string}
                  countries_name: {type: string}
                  country: {format: int32, type: integer}
                  credit_association_id: {format: int32, type: integer}
                  credit_status: {format: int32, type: integer}
                  credit_status_name: {type: string}
                  current_expendeture: {type: float}
                  customer_id: {format: int32, type: integer}
                  max_monthly_credit: {format: int32, type: integer}
                  partner_id: {format: int32, type: integer}
                  pin: {format: int32, type: integer}
                  remaining_expendeture: {type: float}
                  state: {format: int32, type: integer}
                  states_name: {type: string}
                  store_category: {format: int32, type: integer}
                  store_category_name: {type: string}
                  store_id: {format: int32, type: integer}
                  store_name: {type: string}
                  updated_at: {type: string}
                required: [credit_association_id, partner_id, customer_id, max_monthly_credit,
                  current_expendeture, updated_at, credit_status, store_id, credit_status_name,
                  remaining_expendeture, store_name, store_category, store_category_name,
                  address_id, addressline1, addressline2, pin, city, state, country,
                  address_type, city_name, states_name, countries_name]
                type: object
              type: array
            customer_details:
              properties:
                customer_id: {format: int32, type: integer}
                customer_name: {type: string}
                customer_status: {format: int32, type: integer}
                customer_status_name: {type: string}
                email_id: {type: string}
                phone_no: {type: string}
              required: [customer_id, customer_status, customer_name, phone_no, email_id,
                customer_status_name]
              type: object
            order_details:
              items:
                allOf:
                - properties:
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_delivery_date: {}
                    order_detail_id: {format: int32, type: integer}
                    order_id: {format: int32, type: integer}
                    order_ref_no: {type: string}
                    order_status: {format: int32, type: integer}
                    order_status_name: {type: string}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    price: {type: float}
                  required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                    order_detail_id, order_status, billing_address_id, customer_id,
                    price, payment_type, payment_status, order_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_delivery_date: {}
                    order_detail_id: {format: int32, type: integer}
                    order_id: {format: int32, type: integer}
                    order_ref_no: {type: string}
                    order_status: {format: int32, type: integer}
                    order_status_name: {type: string}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    price: {format: int32, type: integer}
                  required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                    order_detail_id, order_status, billing_address_id, customer_id,
                    price, payment_type, payment_status, order_status_name, payment_type_name,
                    payment_status_name]
                  type: object
              type: array
          required: [customer_details, credit_store_details, credit_order_details,
            order_details]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminCustomerGetallGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              credit_status: {format: int32, type: integer}
              credit_status_name: {type: string}
              customer_id: {format: int32, type: integer}
              customer_name: {type: string}
              customer_status: {format: int32, type: integer}
              customer_status_name: {type: string}
              email_id: {type: string}
              phone_no: {type: string}
            required: [customer_id, customer_status, customer_name, phone_no, email_id,
              customer_status_name, credit_status, credit_status_name]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminGetbyidPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            addressline1: {type: string}
            addressline2: {type: string}
            admn_user_id: {format: int32, type: integer}
            city_id: {format: int32, type: integer}
            city_name: {type: string}
            contact_phone: {type: string}
            countries_name: {type: string}
            country_id: {format: int32, type: integer}
            email_id: {type: string}
            firstname: {type: string}
            lastname: {type: string}
            pin: {format: int32, type: integer}
            state_id: {format: int32, type: integer}
            states_name: {type: string}
            user_status: {format: int32, type: integer}
            user_type: {format: int32, type: integer}
            user_type_name: {type: string}
            username: {type: string}
          required: [admn_user_id, user_type, user_status, username, firstname, lastname,
            contact_phone, email_id, addressline1, addressline2, pin, city_id, state_id,
            country_id, city_name, states_name, countries_name, user_type_name]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminLoginPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            address_id: {format: int32, type: integer}
            addressline1: {type: string}
            addressline2: {type: string}
            admn_user_id: {format: int32, type: integer}
            city_name: {type: string}
            contact_phone: {type: string}
            countries_name: {type: string}
            email_id: {type: string}
            firstname: {type: string}
            lastname: {type: string}
            pin: {format: int32, type: integer}
            states_name: {type: string}
            user_type_name: {type: string}
            username: {type: string}
          required: [admn_user_id, username, contact_phone, email_id, firstname, lastname,
            user_type_name, address_id, addressline1, addressline2, city_name, states_name,
            countries_name, pin]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminOrderAssignbagPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            delivery_person:
              properties:
                alternate_phone: {type: string}
                contact_phone: {type: string}
                delivery_person_name: {type: string}
              required: [delivery_person_name, contact_phone, alternate_phone]
              type: object
            temp:
              properties:
                bag_ref_no: {type: string}
                billing_address_id: {format: int32, type: integer}
                customer_address: {type: string}
                customer_id: {format: int32, type: integer}
                customer_name: {type: string}
                customer_phone_no: {type: string}
                order_id: {format: int32, type: integer}
                partner_name: {type: string}
                partner_phone_no: {type: string}
                qc_partner_id: {format: int32, type: integer}
                store_address: {type: string}
                store_id: {format: int32, type: integer}
                store_name: {type: string}
                work_item_id: {format: int32, type: integer}
              required: [store_id, bag_ref_no, qc_partner_id, store_name, order_id,
                customer_id, customer_name, customer_phone_no, customer_address, billing_address_id,
                work_item_id, partner_name, partner_phone_no, store_address]
              type: object
          required: [temp, delivery_person]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminOrderBagdetailsPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            allOf:
            - properties:
                bag_id: {format: int32, type: integer}
                bag_item_id: {format: int32, type: integer}
                bag_item_status: {format: int32, type: integer}
                brand_created_by_role: {format: int32, type: integer}
                partner_product_id: {format: int32, type: integer}
                product_brand_description: {type: string}
                product_brand_id: {format: int32, type: integer}
                product_brand_name: {type: string}
                product_id: {format: int32, type: integer}
                product_title: {type: string}
                required_quantity: {format: int32, type: integer}
                subcategory_name: {type: string}
                total_price: {format: int32, type: integer}
              required: [bag_item_id, product_id, required_quantity, total_price,
                bag_id, bag_item_status, partner_product_id, brand_created_by_role,
                product_brand_id, product_brand_name, product_brand_description, subcategory_name,
                product_title]
              type: object
            - properties:
                bag_id: {format: int32, type: integer}
                bag_item_id: {format: int32, type: integer}
                bag_item_status: {format: int32, type: integer}
                brand_created_by_role: {format: int32, type: integer}
                partner_product_id: {format: int32, type: integer}
                product_brand_description: {type: string}
                product_brand_id: {format: int32, type: integer}
                product_brand_name: {type: string}
                product_id: {format: int32, type: integer}
                product_title: {type: string}
                required_quantity: {format: int32, type: integer}
                subcategory_name: {type: string}
                total_price: {type: float}
              required: [bag_item_id, product_id, required_quantity, total_price,
                bag_id, bag_item_status, partner_product_id, brand_created_by_role,
                product_brand_id, product_brand_name, product_brand_description, subcategory_name,
                product_title]
              type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminOrderDetailsPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            order:
              properties:
                addressline1: {type: string}
                addressline2: {type: string}
                bags:
                  items:
                    allOf:
                    - properties:
                        bag_id: {format: int32, type: integer}
                        bag_price: {type: float}
                        bag_ref_no: {type: string}
                        bag_status: {format: int32, type: integer}
                        bag_status_name: {type: string}
                        order_id: {format: int32, type: integer}
                        partner: {type: string}
                        qc_partner_id: {format: int32, type: integer}
                        store_address: {type: string}
                        store_address_id: {format: int32, type: integer}
                        store_id: {format: int32, type: integer}
                        store_name: {type: string}
                        updated_by: {}
                        updated_on: {}
                      required: [bag_id, store_id, bag_ref_no, updated_on, updated_by,
                        order_id, bag_status, store_name, store_address_id, qc_partner_id,
                        partner, store_address, bag_status_name, bag_price]
                      type: object
                    - properties:
                        bag_id: {format: int32, type: integer}
                        bag_price: {type: float}
                        bag_ref_no: {type: string}
                        bag_status: {format: int32, type: integer}
                        bag_status_name: {type: string}
                        order_id: {format: int32, type: integer}
                        partner: {type: string}
                        qc_partner_id: {format: int32, type: integer}
                        store_address: {type: string}
                        store_address_id: {format: int32, type: integer}
                        store_id: {format: int32, type: integer}
                        store_name: {type: string}
                        updated_by: {}
                        updated_on: {type: string}
                      required: [bag_id, store_id, bag_ref_no, updated_on, updated_by,
                        order_id, bag_status, store_name, store_address_id, qc_partner_id,
                        partner, store_address, bag_status_name, bag_price]
                      type: object
                  type: array
                billing_address_id: {format: int32, type: integer}
                billing_name: {type: string}
                billing_phone: {type: string}
                city_name: {type: string}
                customer_id: {format: int32, type: integer}
                customer_name: {type: string}
                email_id: {type: string}
                order_created_at: {type: string}
                order_delivery_date: {}
                order_detail_id: {format: int32, type: integer}
                order_id: {format: int32, type: integer}
                order_ref_no: {type: string}
                order_status: {format: int32, type: integer}
                order_status_name: {type: string}
                payment_type: {format: int32, type: integer}
                payment_type_name: {type: string}
                phone_no: {type: string}
                pin: {format: int32, type: integer}
                price: {type: float}
                states_name: {type: string}
              required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                order_detail_id, billing_address_id, price, customer_id, payment_type,
                order_status, order_status_name, payment_type_name, customer_name,
                email_id, phone_no, billing_name, billing_phone, addressline1, addressline2,
                pin, city_name, states_name, bags]
              type: object
          required: [order]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminOrderGetallPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            allOf:
            - properties:
                billing_address_id: {format: int32, type: integer}
                customer_id: {format: int32, type: integer}
                customer_name: {type: string}
                order_created_at: {type: string}
                order_delivery_date: {}
                order_detail_id: {format: int32, type: integer}
                order_id: {format: int32, type: integer}
                order_ref_no: {type: string}
                order_status: {format: int32, type: integer}
                order_status_name: {type: string}
                payment_type: {format: int32, type: integer}
                payment_type_name: {type: string}
                price: {type: float}
              required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                order_detail_id, order_status, billing_address_id, customer_id, price,
                payment_type, order_status_name, payment_type_name, customer_name]
              type: object
            - properties:
                billing_address_id: {format: int32, type: integer}
                customer_id: {format: int32, type: integer}
                customer_name: {type: string}
                order_created_at: {type: string}
                order_delivery_date: {}
                order_detail_id: {format: int32, type: integer}
                order_id: {format: int32, type: integer}
                order_ref_no: {type: string}
                order_status: {format: int32, type: integer}
                order_status_name: {type: string}
                payment_type: {format: int32, type: integer}
                payment_type_name: {type: string}
                price: {format: int32, type: integer}
              required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                order_detail_id, order_status, billing_address_id, customer_id, price,
                payment_type, order_status_name, payment_type_name, customer_name]
              type: object
            - properties:
                billing_address_id: {format: int32, type: integer}
                customer_id: {format: int32, type: integer}
                customer_name: {type: string}
                order_created_at: {type: string}
                order_delivery_date: {}
                order_detail_id: {format: int32, type: integer}
                order_id: {format: int32, type: integer}
                order_ref_no: {type: string}
                order_status: {format: int32, type: integer}
                order_status_name: {type: string}
                payment_type: {format: int32, type: integer}
                payment_type_name: {type: string}
                price: {type: float}
              required: [order_id, order_ref_no, order_created_at, order_delivery_date,
                order_detail_id, order_status, billing_address_id, customer_id, price,
                payment_type, order_status_name, payment_type_name, customer_name]
              type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminOrderPaytopartnerPost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminOrderUpdatepaymentPost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminOrderUpdatestatusPost200:
      properties:
        Errors:
          properties:
            Business_Errors:
              items:
                properties:
                  Code: {type: string}
                  Message: {type: string}
                required: [Code, Message]
                type: object
              type: array
            Info:
              items: {}
              type: array
            System_Errors:
              items: {}
              type: array
            Warnings:
              items: {}
              type: array
          required: [Info, Business_Errors, Warnings, System_Errors]
          type: object
        code: {}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminPartnerApprovePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminPartnerCreatePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminPartnerDetailsbyidPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            approval_status: {format: int32, type: integer}
            approval_status_name: {type: string}
            company_name: {type: string}
            contact_email: {type: string}
            contact_person: {}
            contact_person_designation: {type: string}
            contact_phone: {type: string}
            gst_numbers: {type: string}
            pan: {type: string}
            partner_address:
              properties:
                address_id: {format: int32, type: integer}
                address_type: {}
                addressline1: {type: string}
                addressline2: {type: string}
                city: {format: int32, type: integer}
                city_name: {type: string}
                countries_name: {type: string}
                country: {format: int32, type: integer}
                pin: {format: int32, type: integer}
                state: {format: int32, type: integer}
                states_name: {type: string}
              required: [address_id, addressline1, addressline2, pin, city, state,
                country, address_type, city_name, states_name, countries_name]
              type: object
            partner_address_id: {format: int32, type: integer}
            partner_bank_id: {format: int32, type: integer}
            partner_category: {format: int32, type: integer}
            partner_code: {type: string}
            qc_partner_id: {format: int32, type: integer}
            stores:
              items:
                properties:
                  addressline1: {type: string}
                  addressline2: {type: string}
                  city_name: {type: string}
                  countries_name: {type: string}
                  pin: {format: int32, type: integer}
                  qc_partner_id: {format: int32, type: integer}
                  states_name: {type: string}
                  store_address_id: {format: int32, type: integer}
                  store_category: {format: int32, type: integer}
                  store_id: {format: int32, type: integer}
                  store_image: {type: string}
                  store_location: {}
                  store_name: {type: string}
                  store_type_name: {type: string}
                required: [store_id, store_address_id, store_name, store_location,
                  store_category, store_image, qc_partner_id, addressline1, addressline2,
                  pin, city_name, states_name, countries_name, store_type_name]
                type: object
              type: array
            updated_on: {type: string}
          required: [qc_partner_id, partner_category, partner_code, approval_status,
            approval_status_name, company_name, contact_phone, contact_email, contact_person,
            contact_person_designation, updated_on, pan, gst_numbers, partner_bank_id,
            partner_address_id, partner_address, stores]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminPartnerGetallPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            allOf:
            - properties:
                approval_status: {format: int32, type: integer}
                approval_status_name: {type: string}
                company_name: {type: string}
                contact_email: {type: string}
                contact_person: {type: string}
                contact_person_designation: {type: string}
                contact_phone: {type: string}
                partner_code: {type: string}
                partner_name: {type: string}
                partner_type: {format: int32, type: integer}
                qc_partner_id: {format: int32, type: integer}
                updated_on: {type: string}
              required: [qc_partner_id, partner_type, partner_code, partner_name,
                approval_status, approval_status_name, company_name, contact_phone,
                contact_email, contact_person, contact_person_designation, updated_on]
              type: object
            - properties:
                approval_status: {format: int32, type: integer}
                approval_status_name: {type: string}
                company_name: {type: string}
                contact_email: {type: string}
                contact_person: {type: string}
                contact_person_designation: {type: string}
                contact_phone: {type: string}
                partner_code: {type: string}
                partner_name: {type: string}
                partner_type: {format: int32, type: integer}
                qc_partner_id: {format: int32, type: integer}
                updated_on: {}
              required: [qc_partner_id, partner_type, partner_code, partner_name,
                approval_status, approval_status_name, company_name, contact_phone,
                contact_email, contact_person, contact_person_designation, updated_on]
              type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminPersonnelApprovePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminPersonnelGetallGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              admn_user_id: {format: int32, type: integer}
              contact_phone: {type: string}
              email_id: {type: string}
              firstname: {type: string}
              gender: {type: string}
              lastname: {type: string}
              user_status: {format: int32, type: integer}
              user_status_name: {type: string}
              user_type: {format: int32, type: integer}
              user_type_name: {type: string}
              username: {type: string}
            required: [admn_user_id, username, user_status, user_type, firstname,
              lastname, contact_phone, email_id, gender, user_type_name, user_status_name]
            type: object
          type: array
        exceptiopn: {format: 'null', type: boolean}
      required: [code, exceptiopn, Errors, data]
      type: object
    schemaQubecartAdminPersonnelGetdetailPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            adhaar_voter_url: {type: string}
            admn_user_id: {format: int32, type: integer}
            contact_phone: {type: string}
            current_address_city: {type: string}
            current_address_id: {format: int32, type: integer}
            current_address_pin: {format: int32, type: integer}
            current_address_statename: {type: string}
            current_addressline1: {type: string}
            current_addressline2: {type: string}
            dob: {type: string}
            email_id: {type: string}
            firstname: {type: string}
            gender: {type: string}
            lastname: {type: string}
            pan_url: {type: string}
            permanent_address_city: {type: string}
            permanent_address_id: {format: int32, type: integer}
            permanent_address_pin: {format: int32, type: integer}
            permanent_address_statename: {type: string}
            permanent_addressline1: {type: string}
            permanent_addressline2: {type: string}
            photo_url: {type: string}
            user_status: {format: int32, type: integer}
            user_status_name: {type: string}
            user_type: {format: int32, type: integer}
            username: {type: string}
            userr_type_name: {type: string}
          required: [admn_user_id, user_type, username, user_status, firstname, lastname,
            contact_phone, email_id, pan_url, adhaar_voter_url, photo_url, dob, gender,
            current_address_id, permanent_address_id, userr_type_name, user_status_name,
            current_addressline1, current_addressline2, current_address_pin, current_address_city,
            current_address_statename, permanent_addressline1, permanent_addressline2,
            permanent_address_pin, permanent_address_city, permanent_address_statename]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminRegionCreatePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminRegionGetallGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              city_id: {format: int32, type: integer}
              country_id: {format: int32, type: integer}
              created_by_id: {format: int32, type: integer}
              created_on: {type: string}
              region_code: {type: string}
              region_id: {format: int32, type: integer}
              region_name: {type: string}
              region_phone_no: {type: string}
              state_id: {format: int32, type: integer}
            required: [region_id, region_code, region_name, country_id, state_id,
              created_by_id, created_on, city_id, region_phone_no]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminStoreAddregionPost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminStoreCommissionhistoryPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              commission_description: {type: string}
              commission_master_id: {format: int32, type: integer}
              commission_name: {type: string}
              commission_percentage: {format: int32, type: integer}
              end_date: {}
              partner_income: {format: int32, type: integer}
              start_date: {type: string}
              status: {format: int32, type: integer}
              store_commission_id: {format: int32, type: integer}
              store_commission_status_name: {type: string}
              store_id: {format: int32, type: integer}
              value: {}
            required: [store_commission_id, store_id, value, start_date, status, commission_master_id,
              end_date, commission_name, commission_description, commission_percentage,
              partner_income, store_commission_status_name]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminStoreListPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            allOf:
            - properties:
                addressline1: {type: string}
                addressline2: {type: string}
                city_name: {type: string}
                countries_name: {type: string}
                created_on: {}
                credit_flag: {format: int32, type: integer}
                latitude: {}
                longitude: {}
                pin: {format: int32, type: integer}
                qc_partner_id: {format: int32, type: integer}
                region_id: {format: int32, type: integer}
                states_name: {type: string}
                store_address_id: {format: int32, type: integer}
                store_category: {format: int32, type: integer}
                store_id: {format: int32, type: integer}
                store_image: {type: string}
                store_name: {type: string}
                store_rating: {format: int32, type: integer}
                store_status: {format: int32, type: integer}
                store_status_name: {type: string}
                store_type_name: {type: string}
                updated_on: {}
              required: [store_id, store_address_id, store_name, store_category, store_image,
                qc_partner_id, store_rating, credit_flag, region_id, store_status,
                created_on, updated_on, latitude, longitude, addressline1, addressline2,
                pin, city_name, states_name, countries_name, store_type_name, store_status_name]
              type: object
            - properties:
                addressline1: {type: string}
                addressline2: {type: string}
                city_name: {type: string}
                countries_name: {type: string}
                created_on: {}
                credit_flag: {format: int32, type: integer}
                latitude: {type: float}
                longitude: {type: float}
                pin: {format: int32, type: integer}
                qc_partner_id: {format: int32, type: integer}
                region_id: {format: int32, type: integer}
                states_name: {type: string}
                store_address_id: {format: int32, type: integer}
                store_category: {format: int32, type: integer}
                store_id: {format: int32, type: integer}
                store_image: {}
                store_name: {type: string}
                store_rating: {format: int32, type: integer}
                store_status: {format: int32, type: integer}
                store_status_name: {type: string}
                store_type_name: {type: string}
                updated_on: {}
              required: [store_id, store_address_id, store_name, store_category, store_image,
                qc_partner_id, store_rating, credit_flag, region_id, store_status,
                created_on, updated_on, latitude, longitude, addressline1, addressline2,
                pin, city_name, states_name, countries_name, store_type_name, store_status_name]
              type: object
            - properties:
                addressline1: {type: string}
                addressline2: {type: string}
                city_name: {type: string}
                countries_name: {type: string}
                created_on: {}
                credit_flag: {format: int32, type: integer}
                latitude: {}
                longitude: {}
                pin: {format: int32, type: integer}
                qc_partner_id: {format: int32, type: integer}
                region_id: {format: int32, type: integer}
                states_name: {type: string}
                store_address_id: {format: int32, type: integer}
                store_category: {format: int32, type: integer}
                store_id: {format: int32, type: integer}
                store_image: {}
                store_name: {type: string}
                store_rating: {}
                store_status: {format: int32, type: integer}
                store_status_name: {type: string}
                store_type_name: {type: string}
                updated_on: {}
              required: [store_id, store_address_id, store_name, store_category, store_image,
                qc_partner_id, store_rating, credit_flag, region_id, store_status,
                created_on, updated_on, latitude, longitude, addressline1, addressline2,
                pin, city_name, states_name, countries_name, store_type_name, store_status_name]
              type: object
            - properties:
                addressline1: {type: string}
                addressline2: {type: string}
                city_name: {type: string}
                countries_name: {type: string}
                created_on: {type: string}
                credit_flag: {format: int32, type: integer}
                latitude: {type: float}
                longitude: {type: float}
                pin: {format: int32, type: integer}
                qc_partner_id: {format: int32, type: integer}
                region_id: {format: int32, type: integer}
                states_name: {type: string}
                store_address_id: {format: int32, type: integer}
                store_category: {format: int32, type: integer}
                store_id: {format: int32, type: integer}
                store_image: {}
                store_name: {type: string}
                store_rating: {format: int32, type: integer}
                store_status: {format: int32, type: integer}
                store_status_name: {type: string}
                store_type_name: {type: string}
                updated_on: {type: string}
              required: [store_id, store_address_id, store_name, store_category, store_image,
                qc_partner_id, store_rating, credit_flag, region_id, store_status,
                created_on, updated_on, latitude, longitude, addressline1, addressline2,
                pin, city_name, states_name, countries_name, store_type_name, store_status_name]
              type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminStoreOrderlistPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            commission:
              properties:
                commission_name: {type: string}
                commission_percentage: {format: int32, type: integer}
                msqube_income: {type: float}
                partner_income: {type: float}
                total_bag_price: {type: float}
              required: [msqube_income, partner_income, commission_percentage, total_bag_price,
                commission_name]
              type: object
            orderlist:
              items:
                allOf:
                - properties:
                    bag_id: {format: int32, type: integer}
                    bag_price: {type: float}
                    bag_ref_no: {type: string}
                    bag_status: {format: int32, type: integer}
                    bag_status_name: {type: string}
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_id: {format: int32, type: integer}
                    paid_to_partner: {format: int32, type: integer}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    updated_on: {type: string}
                  required: [order_id, order_created_at, customer_id, billing_address_id,
                    payment_type, payment_status, bag_id, bag_ref_no, updated_on,
                    bag_status, paid_to_partner, bag_price, bag_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    bag_id: {format: int32, type: integer}
                    bag_price: {type: float}
                    bag_ref_no: {type: string}
                    bag_status: {format: int32, type: integer}
                    bag_status_name: {type: string}
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_id: {format: int32, type: integer}
                    paid_to_partner: {format: int32, type: integer}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    updated_on: {}
                  required: [order_id, order_created_at, customer_id, billing_address_id,
                    payment_type, payment_status, bag_id, bag_ref_no, updated_on,
                    bag_status, paid_to_partner, bag_price, bag_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    bag_id: {format: int32, type: integer}
                    bag_price: {type: float}
                    bag_ref_no: {type: string}
                    bag_status: {format: int32, type: integer}
                    bag_status_name: {type: string}
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_id: {format: int32, type: integer}
                    paid_to_partner: {format: int32, type: integer}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    updated_on: {type: string}
                  required: [order_id, order_created_at, customer_id, billing_address_id,
                    payment_type, payment_status, bag_id, bag_ref_no, updated_on,
                    bag_status, paid_to_partner, bag_price, bag_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    bag_id: {format: int32, type: integer}
                    bag_price: {format: int32, type: integer}
                    bag_ref_no: {type: string}
                    bag_status: {format: int32, type: integer}
                    bag_status_name: {type: string}
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_id: {format: int32, type: integer}
                    paid_to_partner: {format: int32, type: integer}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    updated_on: {type: string}
                  required: [order_id, order_created_at, customer_id, billing_address_id,
                    payment_type, payment_status, bag_id, bag_ref_no, updated_on,
                    bag_status, paid_to_partner, bag_price, bag_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    bag_id: {format: int32, type: integer}
                    bag_price: {format: int32, type: integer}
                    bag_ref_no: {type: string}
                    bag_status: {format: int32, type: integer}
                    bag_status_name: {type: string}
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_id: {format: int32, type: integer}
                    paid_to_partner: {format: int32, type: integer}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    updated_on: {}
                  required: [order_id, order_created_at, customer_id, billing_address_id,
                    payment_type, payment_status, bag_id, bag_ref_no, updated_on,
                    bag_status, paid_to_partner, bag_price, bag_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    bag_id: {format: int32, type: integer}
                    bag_price: {format: int32, type: integer}
                    bag_ref_no: {type: string}
                    bag_status: {format: int32, type: integer}
                    bag_status_name: {type: string}
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_id: {format: int32, type: integer}
                    paid_to_partner: {format: int32, type: integer}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    updated_on: {type: string}
                  required: [order_id, order_created_at, customer_id, billing_address_id,
                    payment_type, payment_status, bag_id, bag_ref_no, updated_on,
                    bag_status, paid_to_partner, bag_price, bag_status_name, payment_type_name,
                    payment_status_name]
                  type: object
                - properties:
                    bag_id: {format: int32, type: integer}
                    bag_price: {format: int32, type: integer}
                    bag_ref_no: {type: string}
                    bag_status: {format: int32, type: integer}
                    bag_status_name: {type: string}
                    billing_address_id: {format: int32, type: integer}
                    customer_id: {format: int32, type: integer}
                    order_created_at: {type: string}
                    order_id: {format: int32, type: integer}
                    paid_to_partner: {format: int32, type: integer}
                    payment_status: {format: int32, type: integer}
                    payment_status_name: {type: string}
                    payment_type: {format: int32, type: integer}
                    payment_type_name: {type: string}
                    updated_on: {}
                  required: [order_id, order_created_at, customer_id, billing_address_id,
                    payment_type, payment_status, bag_id, bag_ref_no, updated_on,
                    bag_status, paid_to_partner, bag_price, bag_status_name, payment_type_name,
                    payment_status_name]
                  type: object
              type: array
          required: [orderlist, commission]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminStoreUpdatestatusPost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminTemplateAddbrandsPost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminTemplateCheckduplicatePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminTemplateCreatePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminTemplateCreatesubcategoryPost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminTemplateDeleteitemPost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminTemplateGetallGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              category: {format: int32, type: integer}
              category_name: {type: string}
              status: {format: int32, type: integer}
              status_name: {type: string}
              template_description: {}
              template_id: {format: int32, type: integer}
              template_name: {type: string}
              template_ref_no: {type: string}
              updated_by: {format: int32, type: integer}
              updated_on: {type: string}
              username: {type: string}
            required: [template_id, category, updated_by, updated_on, template_name,
              template_description, template_ref_no, status, username, category_name,
              status_name]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminTemplateGetbrandsPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            allOf:
            - properties:
                brand_description: {type: string}
                brand_id: {format: int32, type: integer}
                brand_name: {type: string}
                created_by_role: {format: int32, type: integer}
                status: {format: int32, type: integer}
                subcategory_id: {format: int32, type: integer}
                updated_by: {format: int32, type: integer}
                updated_on: {type: string}
              required: [brand_id, brand_name, brand_description, subcategory_id,
                updated_on, updated_by, created_by_role, status]
              type: object
            - properties:
                brand_description: {}
                brand_id: {format: int32, type: integer}
                brand_name: {type: string}
                created_by_role: {format: int32, type: integer}
                status: {format: int32, type: integer}
                subcategory_id: {format: int32, type: integer}
                updated_by: {format: int32, type: integer}
                updated_on: {type: string}
              required: [brand_id, brand_name, brand_description, subcategory_id,
                updated_on, updated_by, created_by_role, status]
              type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminTemplateGetbycategoryPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              category: {format: int32, type: integer}
              category_name: {type: string}
              item_description: {}
              item_name: {type: string}
              template_id: {format: int32, type: integer}
              template_ref_no: {type: string}
              updated_by: {format: int32, type: integer}
              updated_on: {type: string}
            required: [template_id, category, updated_by, updated_on, item_name, item_description,
              template_ref_no, category_name]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminTemplateGetcategoryPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              product_category_name: {type: string}
              template_id: {format: int32, type: integer}
              template_item_id: {format: int32, type: integer}
            required: [template_item_id, product_category_name, template_id]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminTemplateGetsubcategoryPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              product_category_id: {format: int32, type: integer}
              product_subcategory_id: {format: int32, type: integer}
              subcategory_name: {type: string}
            required: [product_subcategory_id, subcategory_name, product_category_id]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartAdminTemplateInactivePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartAdminUpdatePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartSharedDomainPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              domain_code: {format: int32, type: integer}
              domain_data_type: {type: string}
              domain_id: {format: int32, type: integer}
              domain_text: {type: string}
              domain_type: {type: string}
              domain_value: {type: string}
            required: [domain_id, domain_value, domain_code, domain_type, domain_text,
              domain_data_type]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartSharedErrorframeworkGet200:
      items:
        properties:
          error_code: {type: string}
          error_id: {format: int32, type: integer}
          error_message: {type: string}
          level_of_severity: {format: int32, type: integer}
        required: [error_id, error_code, error_message, level_of_severity]
        type: object
      type: array
    schemaQubecartSharedGetCityGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              city_code: {type: string}
              city_id: {format: int32, type: integer}
              city_name: {type: string}
            required: [city_id, city_code, city_name]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartSharedGetCitystatecountryGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            cities:
              items:
                properties:
                  city_code: {type: string}
                  city_id: {format: int32, type: integer}
                  city_name: {type: string}
                required: [city_id, city_code, city_name]
                type: object
              type: array
            countries:
              items:
                properties:
                  countries_code: {type: string}
                  countries_id: {format: int32, type: integer}
                  countries_name: {type: string}
                required: [countries_id, countries_name, countries_code]
                type: object
              type: array
            states:
              items:
                properties:
                  states_code: {type: string}
                  states_id: {format: int32, type: integer}
                  states_name: {type: string}
                required: [states_id, states_code, states_name]
                type: object
              type: array
          required: [countries, states, cities]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartSharedGetCountriesGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              countries_code: {type: string}
              countries_id: {format: int32, type: integer}
              countries_name: {type: string}
            required: [countries_id, countries_name, countries_code]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartSharedGetStatesGet200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              states_code: {type: string}
              states_id: {format: int32, type: integer}
              states_name: {type: string}
            required: [states_id, states_code, states_name]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartSharedGetfcmPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            create_date: {type: string}
            expiry_date: {}
            fcm_token: {type: string}
            fcm_user_id: {format: int32, type: integer}
            fcm_user_type: {format: int32, type: integer}
            make: {}
            model: {}
            notification_master_id: {format: int32, type: integer}
          required: [notification_master_id, fcm_token, create_date, expiry_date,
            make, model, fcm_user_id, fcm_user_type]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartSharedGetunitsPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          items:
            properties:
              store_category: {format: int32, type: integer}
              unit_id: {format: int32, type: integer}
              unit_long: {type: string}
              unit_short: {type: string}
            required: [unit_id, store_category, unit_short, unit_long]
            type: object
          type: array
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
    schemaQubecartSharedNotificationmasterCreatePost200:
      properties:
        Errors: {}
        code: {type: string}
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors]
      type: object
    schemaQubecartSharedSendPushnotificationPost200:
      properties:
        Errors: {}
        code: {type: string}
        data:
          properties:
            canonical_ids: {format: int32, type: integer}
            failure: {format: int32, type: integer}
            multicast_ids:
              items: {format: int32, type: integer}
              type: array
            results:
              items:
                properties:
                  message_id: {type: string}
                required: [message_id]
                type: object
              type: array
            success: {format: int32, type: integer}
            topic_message_id: {}
          required: [multicast_ids, success, failure, canonical_ids, results, topic_message_id]
          type: object
        exception: {format: 'null', type: boolean}
      required: [code, exception, Errors, data]
      type: object
info: {title: Qubecart-Admin-Services, version: 1.0.0}
{openapi: 3.0.0}
servers:
- url: https://execute-api.ap-south-1.amazonaws.com/{basePath}
  variables:
    basePath: {default: test}
paths:
  /admin/order/updatestatus/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaAdminOrderUpdatestatusPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: AdminOrderUpdatestatusPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"order_id\" : 41,\n    \"order_status\" : 3\n\
                }"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"order_id\" : 41,\n    \"order_status\" : 3\n}", x-response-id: a25245da-c256-4580-96da-56d5ded68a3f}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001qubecartAdminOrderUpdatestatus: {$ref: '#/components/examples/exampleAdminOrderUpdatestatusPost200'}
              schema: {$ref: '#/components/schemas/schemaAdminOrderUpdatestatusPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001qubecart/admin/order/updatestatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001qubecart/admin/order/updatestatus/
  /qubecart/admin/commission/create/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCommissionCreatePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminCommissionCreatePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"commission_name\" : \"test\",\n    \"commission_description\"\
                \ : \"TEst commission\",\n    \"partner_income\" : 99,\n    \"commission_percentage\"\
                \ : 10\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"commission_name\" : \"test\",\n    \"commission_description\"\
                \ : \"TEst commission\",\n    \"partner_income\" : 99,\n    \"commission_percentage\"\
                \ : 10\n}", x-response-id: 5edd7f4c-8962-4e31-b562-93520878a027}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminCommissionCreate: {$ref: '#/components/examples/exampleQubecartAdminCommissionCreatePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCommissionCreatePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/commission/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/commission/create/
  /qubecart/admin/commission/getall/:
    get:
      operationId: QubecartAdminCommissionGetallGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminCommissionGetall: {$ref: '#/components/examples/exampleQubecartAdminCommissionGetallGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCommissionGetallGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/commission/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/commission/getall/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCommissionGetallGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/admin/customer/details/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCustomerDetailsPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: Customer Details
      operationId: QubecartAdminCustomerDetailsPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\r\n    \"customer_id\" : 22\r\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\r\n    \"customer_id\" : 22\r\n}", x-response-id: c86ebf78-7f68-4449-84f6-835dbdf25545}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminCustomerDetails: {$ref: '#/components/examples/exampleQubecartAdminCustomerDetailsPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCustomerDetailsPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/customer/details/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/customer/details/
  /qubecart/admin/customer/getall/:
    get:
      description: Get all customer
      operationId: QubecartAdminCustomerGetallGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminCustomerGetall: {$ref: '#/components/examples/exampleQubecartAdminCustomerGetallGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCustomerGetallGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/customer/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/customer/getall/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminCustomerGetallGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/admin/getbyid/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminGetbyidPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Get admin details by id'
      operationId: QubecartAdminGetbyidPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"admn_user_id\" : 6\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"admn_user_id\" : 6\n}", x-response-id: b325d0cb-2067-45a1-81bf-cddb3a193960}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminGetbyid: {$ref: '#/components/examples/exampleQubecartAdminGetbyidPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminGetbyidPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/getbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/getbyid/
  /qubecart/admin/login/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminLoginPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Admin login API'
      operationId: QubecartAdminLoginPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"username\" : \"sourav\",\n    \"password\"\
                \ : \"1234\"\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"username\" : \"sourav\",\n    \"password\" : \"1234\"\
                \n}", x-response-id: 83c19eae-18f7-476a-aea8-9e4b117c4103}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminLogin: {$ref: '#/components/examples/exampleQubecartAdminLoginPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminLoginPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/login/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/login/
  /qubecart/admin/order/assignbag/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderAssignbagPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminOrderAssignbagPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"bag_id\" : 48,\n    \"admn_user_id\" : 10,\n\
                \    \"eta\" : 2.0\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"bag_id\" : 48,\n    \"admn_user_id\" : 10,\n    \"\
                eta\" : 2.0\n}", x-response-id: 99e0516d-0242-4185-a67a-ce233a4f9b86}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminOrderAssignbag: {$ref: '#/components/examples/exampleQubecartAdminOrderAssignbagPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderAssignbagPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/order/assignbag/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/order/assignbag/
  /qubecart/admin/order/bagdetails/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderBagdetailsPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminOrderBagdetailsPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"bag_id\" : 41\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"bag_id\" : 41\n}", x-response-id: 14ec17d5-e36d-4221-aaf4-4dc9a728d900}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminOrderBagdetails: {$ref: '#/components/examples/exampleQubecartAdminOrderBagdetailsPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderBagdetailsPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/order/bagdetails/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/order/bagdetails/
  /qubecart/admin/order/details/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderDetailsPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Returns order details and bags associated with order'
      operationId: QubecartAdminOrderDetailsPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"order_id\" : 35\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"order_id\" : 35\n}", x-response-id: 26de4fff-df44-4676-ad4a-b0f757122959}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminOrderDetails: {$ref: '#/components/examples/exampleQubecartAdminOrderDetailsPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderDetailsPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/order/details/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/order/details/
  /qubecart/admin/order/getall/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderGetallPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '* status_filter is optional, if it''s not present in the request
        body API will return all orders

        * possible values for status_filter canbe found from domain lookup API where
        domain_type order status

        * if status_filter is present in request body response will be filtered'
      operationId: QubecartAdminOrderGetallPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"status_filter\" : 1\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"status_filter\" : 1\n}", x-response-id: fd747d48-bc0f-4d55-8976-b88404e47d06}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminOrderGetall: {$ref: '#/components/examples/exampleQubecartAdminOrderGetallPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderGetallPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/order/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/order/getall/
  /qubecart/admin/order/paytopartner/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderPaytopartnerPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: Pay to partner by admin
      operationId: QubecartAdminOrderPaytopartnerPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\r\n    \"data\" : [65,67]\r\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\r\n    \"data\" : [65,67]\r\n}", x-response-id: 11358dff-1102-4293-9ee3-7616e8b5d64c}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminOrderPaytopartner: {$ref: '#/components/examples/exampleQubecartAdminOrderPaytopartnerPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderPaytopartnerPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/order/paytopartner/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/order/paytopartner/
  /qubecart/admin/order/updatepayment/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderUpdatepaymentPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminOrderUpdatepaymentPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"order_id\" : 59\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"order_id\" : 59\n}", x-response-id: 1fa833b7-99ba-463c-9358-b84a2e1651e6}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminOrderUpdatepayment: {$ref: '#/components/examples/exampleQubecartAdminOrderUpdatepaymentPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderUpdatepaymentPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/order/updatepayment/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/order/updatepayment/
  /qubecart/admin/order/updatestatus/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderUpdatestatusPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminOrderUpdatestatusPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"order_id\" : 58,\n    \"order_status\" : 3\n\
                }"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"order_id\" : 58,\n    \"order_status\" : 3\n}", x-response-id: a3014dd8-e0bf-4385-b6f9-c55999c12a86}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminOrderUpdatestatus: {$ref: '#/components/examples/exampleQubecartAdminOrderUpdatestatusPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminOrderUpdatestatusPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/order/updatestatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/order/updatestatus/
  /qubecart/admin/partner/approve/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerApprovePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Approve a requested partner'
      operationId: QubecartAdminPartnerApprovePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"qc_partner_id\" : 10,\n    \"approve_flag\"\
                \ : true\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"qc_partner_id\" : 10,\n    \"approve_flag\" : true\n\
                }", x-response-id: 0689a1c7-c3c0-44fe-86b5-037392a7a354}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminPartnerApprove: {$ref: '#/components/examples/exampleQubecartAdminPartnerApprovePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerApprovePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/partner/approve/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/partner/approve/
  /qubecart/admin/partner/create/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerCreatePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Partner on boarding API'
      operationId: QubecartAdminPartnerCreatePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"partner_type\" : 1,\n    \"partner_code\" :\
                \ \"DUMMYCODE\",\n    \"partner_name\" : \"DUMMY NAME\",\n    \"username\"\
                \ : \"dummyuser\",\n    \"password\" : \"12345\",\n    \"partner_category\"\
                \ : 1,\n    \"company_name\" : \"SHOP FOR DUMMIES\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"contact_person\" : \"sourav\",\n    \"\
                billing_name\" : \"DUMMY SHOP\",\n    \"gst_numbers\" : \"qwer1234567890\"\
                ,\n    \"pan\" : \"123qwer45\",\n    \"contact_email\" : \"sourav.mondal@msqube.com\"\
                ,\n    \"contact_person_designation\" : \"Owner\",\n    \"partner_bank_id\"\
                \ : \"1234569870\",\n    \"addressline1\" : \"112/4\",\n    \"addressline2\"\
                \ : \"beleghata main road kolkata\",\n    \"state_id\" : 1,\n    \"\
                country_id\" : 1,\n    \"pin\" : \"700010\",\n    \"city_id\" : 1\n\
                }"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"partner_type\" : 1,\n    \"partner_code\" : \"DUMMYCODE\"\
                ,\n    \"partner_name\" : \"DUMMY NAME\",\n    \"username\" : \"dummyuser\"\
                ,\n    \"password\" : \"12345\",\n    \"partner_category\" : 1,\n\
                \    \"company_name\" : \"SHOP FOR DUMMIES\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"contact_person\" : \"sourav\",\n    \"\
                billing_name\" : \"DUMMY SHOP\",\n    \"gst_numbers\" : \"qwer1234567890\"\
                ,\n    \"pan\" : \"123qwer45\",\n    \"contact_email\" : \"sourav.mondal@msqube.com\"\
                ,\n    \"contact_person_designation\" : \"Owner\",\n    \"partner_bank_id\"\
                \ : \"1234569870\",\n    \"addressline1\" : \"112/4\",\n    \"addressline2\"\
                \ : \"beleghata main road kolkata\",\n    \"state_id\" : 1,\n    \"\
                country_id\" : 1,\n    \"pin\" : \"700010\",\n    \"city_id\" : 1\n\
                }", x-response-id: 237824f5-5293-4122-9e9a-5673d9631f6e}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminPartnerCreate: {$ref: '#/components/examples/exampleQubecartAdminPartnerCreatePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerCreatePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/partner/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/partner/create/
  /qubecart/admin/partner/detailsbyid/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerDetailsbyidPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Get partner details by id'
      operationId: QubecartAdminPartnerDetailsbyidPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"qc_partner_id\" : 10\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"qc_partner_id\" : 10\n}", x-response-id: 70182fe7-be2b-4219-ad36-5c3fd0d3cdeb}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminPartnerDetailsbyid: {$ref: '#/components/examples/exampleQubecartAdminPartnerDetailsbyidPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerDetailsbyidPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/partner/detailsbyid/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/partner/detailsbyid/
  /qubecart/admin/partner/getall/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerGetallPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Get all partners (requested)'
      operationId: QubecartAdminPartnerGetallPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"requested\" : false\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"requested\" : false\n}", x-response-id: 378fce9f-6128-40a9-84dd-086f5fce561a}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminPartnerGetall: {$ref: '#/components/examples/exampleQubecartAdminPartnerGetallPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPartnerGetallPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/partner/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/partner/getall/
  /qubecart/admin/personnel/approve/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPersonnelApprovePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '* approve_flag -> true | approve delivery person

        * approve_flag -> false | opposite'
      operationId: QubecartAdminPersonnelApprovePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"admn_user_id\" : 8,\n    \"approve_flag\" :\
                \ true\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"admn_user_id\" : 8,\n    \"approve_flag\" : true\n\
                }", x-response-id: 5c8ddfe2-f0f2-487d-8a4a-ca1af577eb0f}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminPersonnelApprove: {$ref: '#/components/examples/exampleQubecartAdminPersonnelApprovePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPersonnelApprovePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/personnel/approve/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/personnel/approve/
  /qubecart/admin/personnel/getall/:
    get:
      operationId: QubecartAdminPersonnelGetallGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminPersonnelGetall: {$ref: '#/components/examples/exampleQubecartAdminPersonnelGetallGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPersonnelGetallGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/personnel/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/personnel/getall/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPersonnelGetallGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/admin/personnel/getdetail/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPersonnelGetdetailPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminPersonnelGetdetailPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"admn_user_id\" : 8\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"admn_user_id\" : 8\n}", x-response-id: 8733e2e0-560f-4f4b-9350-0401a929d19f}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminPersonnelGetdetail: {$ref: '#/components/examples/exampleQubecartAdminPersonnelGetdetailPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminPersonnelGetdetailPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/personnel/getdetail/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/personnel/getdetail/
  /qubecart/admin/region/create/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminRegionCreatePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminRegionCreatePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"region_code\" : \"QCR002\",\n    \"region_name\"\
                \ : \"CHINAR PARK\",\n    \"country_id\" : 1,\n    \"state_id\" :\
                \ 1,\n    \"city_id\" : 1,\n    \"region_phone_no\" : \"9999999999\"\
                ,\n    \"admn_user_id\" : 6\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"region_code\" : \"QCR002\",\n    \"region_name\" :\
                \ \"CHINAR PARK\",\n    \"country_id\" : 1,\n    \"state_id\" : 1,\n\
                \    \"city_id\" : 1,\n    \"region_phone_no\" : \"9999999999\",\n\
                \    \"admn_user_id\" : 6\n}", x-response-id: 079d00c2-d3e4-4e61-b03d-24dfc91a80fd}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminRegionCreate: {$ref: '#/components/examples/exampleQubecartAdminRegionCreatePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminRegionCreatePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/region/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/region/create/
  /qubecart/admin/region/getall/:
    get:
      operationId: QubecartAdminRegionGetallGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminRegionGetall: {$ref: '#/components/examples/exampleQubecartAdminRegionGetallGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminRegionGetallGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/region/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/region/getall/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminRegionGetallGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/admin/store/addregion/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreAddregionPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminStoreAddregionPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2\n}", x-response-id: 66223942-374c-4219-8309-d67cdacbd35d}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminStoreAddregion: {$ref: '#/components/examples/exampleQubecartAdminStoreAddregionPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreAddregionPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/store/addregion/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/store/addregion/
  /qubecart/admin/store/commissionhistory/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreCommissionhistoryPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminStoreCommissionhistoryPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"store_id\" : 16\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"store_id\" : 16\n}", x-response-id: d4cdd8e9-90cd-4a97-8e3c-d0da4dd1735b}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminStoreCommissionhistory: {$ref: '#/components/examples/exampleQubecartAdminStoreCommissionhistoryPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreCommissionhistoryPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/store/commissionhistory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/store/commissionhistory/
  /qubecart/admin/store/list/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreListPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '* partner_id is optional, if not present list will contain all
        stores, if present list will contain store of given partner '
      operationId: QubecartAdminStoreListPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"partner_id\" : 24\n}"}
            schema: {type: string}
            x-link-response: []
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminStoreList: {$ref: '#/components/examples/exampleQubecartAdminStoreListPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreListPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/store/list/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/store/list/
  /qubecart/admin/store/orderlist/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreOrderlistPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '* start_date and end_date are option, if provided result will
        contain only order in between start and end date. Otherwise result will contain
        all orders'
      operationId: QubecartAdminStoreOrderlistPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"store_id\" : 26\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"store_id\" : 26\n}", x-response-id: eee65505-3214-4875-9dd3-d7243250629a}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminStoreOrderlist: {$ref: '#/components/examples/exampleQubecartAdminStoreOrderlistPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreOrderlistPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/store/orderlist/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/store/orderlist/
  /qubecart/admin/store/updatestatus/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreUpdatestatusPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '* when store status 1/ requested possible action type 2 / active
        or 3 reject

        * region_id is optional but we have let admin set a region to a store'
      operationId: QubecartAdminStoreUpdatestatusPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2,\n\
                \    \"action_type\" : 2\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"store_id\" : 35,\n    \"region_id\" : 2,\n    \"action_type\"\
                \ : 2\n}", x-response-id: 77d10f7e-bcc0-4227-9513-d328f024353c}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminStoreUpdatestatus: {$ref: '#/components/examples/exampleQubecartAdminStoreUpdatestatusPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminStoreUpdatestatusPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/store/updatestatus/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/store/updatestatus/
  /qubecart/admin/template/addbrands/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateAddbrandsPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Adds brands for subcategory'
      operationId: QubecartAdminTemplateAddbrandsPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"subcategory_id\" : 2,\n    \"loggedin_user\"\
                \ : 6,\n    \"brands\" : [{\"name\" : \"Wrangler\"}, {\"name\" : \"\
                Peter England\"}]\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"subcategory_id\" : 2,\n    \"loggedin_user\" : 6,\n\
                \    \"brands\" : [{\"name\" : \"Wrangler\"}, {\"name\" : \"Peter\
                \ England\"}]\n}", x-response-id: b5d19d40-7bf0-4182-82a1-dffa0fe5a2d7}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateAddbrands: {$ref: '#/components/examples/exampleQubecartAdminTemplateAddbrandsPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateAddbrandsPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/addbrands/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/addbrands/
  /qubecart/admin/template/checkduplicate/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateCheckduplicatePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Checks duplicate item in template'
      operationId: QubecartAdminTemplateCheckduplicatePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"template_name\" : \"Temp_g_002\"\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"template_name\" : \"Temp_g_002\"\n}", x-response-id: 183fb363-64b8-4e73-b6ef-baef14e03dfb}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateCheckduplicate: {$ref: '#/components/examples/exampleQubecartAdminTemplateCheckduplicatePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateCheckduplicatePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/checkduplicate/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/checkduplicate/
  /qubecart/admin/template/create/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateCreatePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminTemplateCreatePost
      requestBody:
        content:
          '*/*':
            example: {value: "{   \n    \"admn_user_id\" : 6,\n    \"category\" :\
                \ 1,\n    \"template_name\" : \"Men's Fashion\",\n    \"items\" :\
                \ [{\"name\" : \"Top wear\"}, {\"name\" : \"Bottom wear\"}]\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{   \n    \"admn_user_id\" : 6,\n    \"category\" : 2,\n  \
                \  \"items\" : [\"T-shirt\", \"Shirt\"]\n}", x-response-id: 6a1915f4-78d9-40f4-8b88-c77718611097}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateCreate: {$ref: '#/components/examples/exampleQubecartAdminTemplateCreatePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateCreatePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/create/
  /qubecart/admin/template/createsubcategory/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateCreatesubcategoryPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Creates a subcategory of a given template and adds brands to
        it'
      operationId: QubecartAdminTemplateCreatesubcategoryPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"template_item_id\" : 13,\n    \"subcategory_name\"\
                \ : \"T-shirt\",\n    \"brands\" : [{\"name\" : \"Lee\", \"description\"\
                \ : \"\"}, {\"name\" : \"Levi's\", \"description\" : \"\"}],\n   \
                \ \"admn_user_id\" : 6\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"template_item_id\" : 13,\n    \"subcategory_name\"\
                \ : \"T-shirt\",\n    \"brands\" : [{\"name\" : \"Lee\", \"description\"\
                \ : \"\"}, {\"name\" : \"Levi's\", \"description\" : \"\"}],\n   \
                \ \"admn_user_id\" : 6\n}", x-response-id: 0e2bbc98-44d6-41c3-b932-e01d89ac8f3d}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateCreatesubcategory: {$ref: '#/components/examples/exampleQubecartAdminTemplateCreatesubcategoryPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateCreatesubcategoryPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/createsubcategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/createsubcategory/
  /qubecart/admin/template/deleteitem/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateDeleteitemPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Delete item from admin template '
      operationId: QubecartAdminTemplateDeleteitemPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"template_id\" : 15\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"template_id\" : 15\n}", x-response-id: f7f15ed0-3692-45b2-8abc-7192a357758f}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateDeleteitem: {$ref: '#/components/examples/exampleQubecartAdminTemplateDeleteitemPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateDeleteitemPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/deleteitem/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/deleteitem/
  /qubecart/admin/template/getall/:
    get:
      description: Get all template
      operationId: QubecartAdminTemplateGetallGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateGetall: {$ref: '#/components/examples/exampleQubecartAdminTemplateGetallGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetallGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/getall/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/getall/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetallGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/admin/template/getbrands/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetbrandsPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Get brands by subcategory

        ### Here qc_partner_id is optional, if given the result will also include
        brands specified by the partner for the given subcategory'
      operationId: QubecartAdminTemplateGetbrandsPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"subcategory_id\" : 28,\n    \"qc_partner_id\"\
                \ : 24\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"subcategory_id\" : 28,\n    \"qc_partner_id\" : 24\n\
                }", x-response-id: 284d0c75-b894-45b6-828c-b22d7edfc9b3}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateGetbrands: {$ref: '#/components/examples/exampleQubecartAdminTemplateGetbrandsPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetbrandsPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/getbrands/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/getbrands/
  /qubecart/admin/template/getbycategory/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetbycategoryPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminTemplateGetbycategoryPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"category\" : 1\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"category\" : 1\n}", x-response-id: 81c2fdc0-6cbc-4347-879e-2ebd5d9afdd6}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateGetbycategory: {$ref: '#/components/examples/exampleQubecartAdminTemplateGetbycategoryPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetbycategoryPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/getbycategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/getbycategory/
  /qubecart/admin/template/getcategory/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetcategoryPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Returns a list of product category by template id'
      operationId: QubecartAdminTemplateGetcategoryPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"template_id\" : 29\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"template_id\" : 29\n}", x-response-id: b6821abe-0efe-4481-aa7a-6ccc00f759d4}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateGetcategory: {$ref: '#/components/examples/exampleQubecartAdminTemplateGetcategoryPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetcategoryPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/getcategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/getcategory/
  /qubecart/admin/template/getsubcategory/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetsubcategoryPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Get subcategory by template'
      operationId: QubecartAdminTemplateGetsubcategoryPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"template_item_id\" : 13\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"template_item_id\" : 10\n}", x-response-id: fdaf4aad-70ee-41e1-8b5b-6bc97e33125b}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateGetsubcategory: {$ref: '#/components/examples/exampleQubecartAdminTemplateGetsubcategoryPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateGetsubcategoryPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/getsubcategory/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/getsubcategory/
  /qubecart/admin/template/inactive/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateInactivePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      operationId: QubecartAdminTemplateInactivePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"admn_user_id\" : 6,\n    \"template_id\" :\
                \ 39,\n    \"inactive_flag\" : true \n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"admn_user_id\" : 6,\n    \"template_id\" : 39,\n \
                \   \"inactive_flag\" : true \n}", x-response-id: 5088bfcd-0396-4a4e-89f6-54056efb479d}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminTemplateInactive: {$ref: '#/components/examples/exampleQubecartAdminTemplateInactivePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminTemplateInactivePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/template/inactive/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/template/inactive/
  /qubecart/admin/update/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartAdminUpdatePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Update admin details'
      operationId: QubecartAdminUpdatePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"admn_user_id\" : 6,\n    \"password\" : \"\
                1234\",\n    \"firstname\" : \"msqube\",\n    \"lastname\" : \"Technologies\"\
                ,\n    \"email_id\" : \"contact@msqube.com\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"addressline1\" : \"pinnacle tower\",\n\
                \    \"addressline2\" : \"chinar park\",\n    \"state_id\" : 1,\n\
                \    \"country_id\" : 1,\n    \"pin\" : \"700135\",\n    \"city_id\"\
                \ : 1\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"admn_user_id\" : 6,\n    \"password\" : \"1234\",\n\
                \    \"firstname\" : \"msqube\",\n    \"lastname\" : \"Technologies\"\
                ,\n    \"email_id\" : \"contact@msqube.com\",\n    \"contact_phone\"\
                \ : \"8335968075\",\n    \"addressline1\" : \"pinnacle tower\",\n\
                \    \"addressline2\" : \"chinar park\",\n    \"state_id\" : 1,\n\
                \    \"country_id\" : 1,\n    \"pin\" : \"700135\",\n    \"city_id\"\
                \ : 1\n}", x-response-id: 2a710587-40fe-4733-aac1-c852497e2021}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartAdminUpdate: {$ref: '#/components/examples/exampleQubecartAdminUpdatePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartAdminUpdatePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/admin/update/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/admin/update/
  /qubecart/shared/domain/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedDomainPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Get domain by domain type'
      operationId: QubecartSharedDomainPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"domain_type\" : \"partner_status\"\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"domain_type\" : \"partner_status\"\n}", x-response-id: eb9e8fb3-07c6-493f-b176-7a86c0309e0f}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedDomain: {$ref: '#/components/examples/exampleQubecartSharedDomainPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedDomainPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/domain/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/domain/
  /qubecart/shared/errorframework/:
    get:
      description: '## GET error framework '
      operationId: QubecartSharedErrorframeworkGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedErrorframework: {$ref: '#/components/examples/exampleQubecartSharedErrorframeworkGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedErrorframeworkGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/errorframework/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/errorframework/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedErrorframeworkGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/shared/get/city/:
    get:
      description: '## Get all cities'
      operationId: QubecartSharedGetCityGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedGetCity: {$ref: '#/components/examples/exampleQubecartSharedGetCityGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetCityGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/get/city/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/get/city/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetCityGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/shared/get/citystatecountry/:
    get:
      operationId: QubecartSharedGetCitystatecountryGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedGetCitystatecountry: {$ref: '#/components/examples/exampleQubecartSharedGetCitystatecountryGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetCitystatecountryGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/get/citystatecountry/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/get/citystatecountry/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetCitystatecountryGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/shared/get/countries/:
    get:
      description: '## Get all countries'
      operationId: QubecartSharedGetCountriesGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedGetCountries: {$ref: '#/components/examples/exampleQubecartSharedGetCountriesGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetCountriesGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/get/countries/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/get/countries/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetCountriesGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/shared/get/states/:
    get:
      description: '## Get all states'
      operationId: QubecartSharedGetStatesGet
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedGetStates: {$ref: '#/components/examples/exampleQubecartSharedGetStatesGet200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetStatesGet200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/get/states/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: GET
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/get/states/
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetStatesGet200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
  /qubecart/shared/getfcm/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetfcmPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: Get fcm token of a user
      operationId: QubecartSharedGetfcmPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\"\
                \ : 1\r\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\" : 1\r\
                \n}", x-response-id: 51423e06-b0f7-4f6a-8f4d-1c4cb5118105}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedGetfcm: {$ref: '#/components/examples/exampleQubecartSharedGetfcmPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetfcmPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/getfcm/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/getfcm/
  /qubecart/shared/getunits/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetunitsPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: '## Gets units by store_category'
      operationId: QubecartSharedGetunitsPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\n    \"store_category\" : 1\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\n    \"store_category\" : 1\n}", x-response-id: 00bb815f-255b-491a-b60f-61a683ed5a3c}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedGetunits: {$ref: '#/components/examples/exampleQubecartSharedGetunitsPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedGetunitsPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/getunits/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/getunits/
  /qubecart/shared/notificationmaster/create/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedNotificationmasterCreatePost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: Update fcm token of a user
      operationId: QubecartSharedNotificationmasterCreatePost
      requestBody:
        content:
          '*/*':
            example: {value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\"\
                \ : 1,\r\n    \"fcm_token\" : \"dNPNiW_oStevv225HhHVGi:APA91bEnN5ntUMjE0-q20iwVNiJvX-Ieg_XFgq_8EE0yidKBm003JGphMsyjsrUMqDgW6IKcKc20QEBFwJE4iCKrbB2R1cMeEe8_8a5ZChXx8TcvFec_9dju7xQeZRamqeiXipuAxrMJ\"\
                \r\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\r\n    \"fcm_user_id\" : 22,\r\n    \"fcm_user_type\" : 1,\r\
                \n    \"fcm_token\" : \"dNPNiW_oStevv225HhHVGi:APA91bEnN5ntUMjE0-q20iwVNiJvX-Ieg_XFgq_8EE0yidKBm003JGphMsyjsrUMqDgW6IKcKc20QEBFwJE4iCKrbB2R1cMeEe8_8a5ZChXx8TcvFec_9dju7xQeZRamqeiXipuAxrMJ\"\
                \r\n}", x-response-id: 6e5e734f-354c-4dda-878d-5a6ce365e2d2}
      responses:
        '200':
          content:
            application/json:
              examples:
                Fttp37661778001QubecartSharedNotificationmasterCreate: {$ref: '#/components/examples/exampleQubecartSharedNotificationmasterCreatePost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedNotificationmasterCreatePost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: fttp://3.7.66.177:8001/qubecart/shared/notificationmaster/create/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: fttp://3.7.66.177:8001/qubecart/shared/notificationmaster/create/
  /qubecart/shared/send/pushnotification/:
    options:
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/schemaQubecartSharedSendPushnotificationPost200'}
          description: 200 response
          headers:
            Access-Control-Allow-Headers:
              schema: {type: string}
            Access-Control-Allow-Methods:
              schema: {type: string}
            Access-Control-Allow-Origin:
              schema: {type: string}
      x-amazon-apigateway-integration:
        passthroughBehavior: when_no_match
        requestTemplates: {application/json: '{"statusCode": 200}'}
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
              method.response.header.Access-Control-Allow-Methods: '''POST,OPTIONS''',
              method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: mock
    post:
      description: Send push notification
      operationId: QubecartSharedSendPushnotificationPost
      requestBody:
        content:
          '*/*':
            example: {value: "{\r\n    \"message_title\" : \"Qubecart\",\r\n    \"\
                message_body\" : \"Wel COme To Qubecart\",\r\n    \"fcm_user_id\"\
                \ : 22,\r\n    \"fcm_user_type\" : 1\r\n}"}
            schema: {type: string}
            x-link-response:
            - {value: "{\r\n    \"message_title\" : \"Qubecart\",\r\n    \"message_body\"\
                \ : \"Wel COme To Qubecart\",\r\n    \"fcm_user_id\" : 22,\r\n   \
                \ \"fcm_user_type\" : 1\r\n}", x-response-id: e2d2ac46-d686-4982-a095-094c0d7f6c58}
      responses:
        '200':
          content:
            application/json:
              examples:
                Http37661778001QubecartSharedSendPushnotification: {$ref: '#/components/examples/exampleQubecartSharedSendPushnotificationPost200'}
              schema: {$ref: '#/components/schemas/schemaQubecartSharedSendPushnotificationPost200'}
          description: 200 Response
          headers:
            Access-Control-Allow-Origin:
              schema: {type: string}
      summary: http://3.7.66.177:8001/qubecart/shared/send/pushnotification/
      x-amazon-apigateway-integration:
        cors: true
        httpMethod: POST
        passthroughBehavior: when_no_match
        responses:
          default:
            responseParameters: {method.response.header.Access-Control-Allow-Origin: '''*'''}
            statusCode: '200'
        type: http
        uri: http://3.7.66.177:8001/qubecart/shared/send/pushnotification/
x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseParameters: {gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS''', gatewayresponse.header.Access-Control-Allow-Origin: '''*'''}
  DEFAULT_5XX:
    responseParameters: {gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token''',
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS''', gatewayresponse.header.Access-Control-Allow-Origin: '''*'''}
